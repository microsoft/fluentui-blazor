// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

#pragma warning disable 1591

namespace Microsoft.FluentUI.AspNetCore.Components;

public static partial class Icons
{
    public static partial class Regular
    {
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public static partial class Size32
        {
            public class Accessibility : Icon { public Accessibility() : base("Accessibility", IconVariant.Regular, AccessibilitySizeAndContent.Values[4]) { } }
            public class AccessibilityCheckmark : Icon { public AccessibilityCheckmark() : base("AccessibilityCheckmark", IconVariant.Regular, AccessibilityCheckmarkSizeAndContent.Values[3]) { } }
            public class Add : Icon { public Add() : base("Add", IconVariant.Regular, AddSizeAndContent.Values[5]) { } }
            public class AddCircle : Icon { public AddCircle() : base("AddCircle", IconVariant.Regular, AddCircleSizeAndContent.Values[5]) { } }
            public class AddSquare : Icon { public AddSquare() : base("AddSquare", IconVariant.Regular, AddSquareSizeAndContent.Values[4]) { } }
            public class Alert : Icon { public Alert() : base("Alert", IconVariant.Regular, AlertSizeAndContent.Values[5]) { } }
            public class AlignBottom : Icon { public AlignBottom() : base("AlignBottom", IconVariant.Regular, AlignBottomSizeAndContent.Values[4]) { } }
            public class AlignCenterHorizontal : Icon { public AlignCenterHorizontal() : base("AlignCenterHorizontal", IconVariant.Regular, AlignCenterHorizontalSizeAndContent.Values[4]) { } }
            public class AlignCenterVertical : Icon { public AlignCenterVertical() : base("AlignCenterVertical", IconVariant.Regular, AlignCenterVerticalSizeAndContent.Values[4]) { } }
            public class AlignLeft : Icon { public AlignLeft() : base("AlignLeft", IconVariant.Regular, AlignLeftSizeAndContent.Values[4]) { } }
            public class AlignRight : Icon { public AlignRight() : base("AlignRight", IconVariant.Regular, AlignRightSizeAndContent.Values[4]) { } }
            public class AlignTop : Icon { public AlignTop() : base("AlignTop", IconVariant.Regular, AlignTopSizeAndContent.Values[4]) { } }
            public class AnimalRabbit : Icon { public AnimalRabbit() : base("AnimalRabbit", IconVariant.Regular, AnimalRabbitSizeAndContent.Values[4]) { } }
            public class AnimalRabbitOff : Icon { public AnimalRabbitOff() : base("AnimalRabbitOff", IconVariant.Regular, AnimalRabbitOffSizeAndContent.Values[1]) { } }
            public class AppFolder : Icon { public AppFolder() : base("AppFolder", IconVariant.Regular, AppFolderSizeAndContent.Values[4]) { } }
            public class AppGeneric : Icon { public AppGeneric() : base("AppGeneric", IconVariant.Regular, AppGenericSizeAndContent.Values[2]) { } }
            public class ApprovalsApp : Icon { public ApprovalsApp() : base("ApprovalsApp", IconVariant.Regular, ApprovalsAppSizeAndContent.Values[4]) { } }
            public class Apps : Icon { public Apps() : base("Apps", IconVariant.Regular, AppsSizeAndContent.Values[4]) { } }
            public class Archive : Icon { public Archive() : base("Archive", IconVariant.Regular, ArchiveSizeAndContent.Values[4]) { } }
            public class ArchiveArrowBack : Icon { public ArchiveArrowBack() : base("ArchiveArrowBack", IconVariant.Regular, ArchiveArrowBackSizeAndContent.Values[4]) { } }
            public class ArchiveSettings : Icon { public ArchiveSettings() : base("ArchiveSettings", IconVariant.Regular, ArchiveSettingsSizeAndContent.Values[4]) { } }
            public class ArrowCircleDown : Icon { public ArrowCircleDown() : base("ArrowCircleDown", IconVariant.Regular, ArrowCircleDownSizeAndContent.Values[5]) { } }
            public class ArrowCircleLeft : Icon { public ArrowCircleLeft() : base("ArrowCircleLeft", IconVariant.Regular, ArrowCircleLeftSizeAndContent.Values[5]) { } }
            public class ArrowCircleRight : Icon { public ArrowCircleRight() : base("ArrowCircleRight", IconVariant.Regular, ArrowCircleRightSizeAndContent.Values[5]) { } }
            public class ArrowCircleUp : Icon { public ArrowCircleUp() : base("ArrowCircleUp", IconVariant.Regular, ArrowCircleUpSizeAndContent.Values[5]) { } }
            public class ArrowClockwise : Icon { public ArrowClockwise() : base("ArrowClockwise", IconVariant.Regular, ArrowClockwiseSizeAndContent.Values[5]) { } }
            public class ArrowClockwiseDashes : Icon { public ArrowClockwiseDashes() : base("ArrowClockwiseDashes", IconVariant.Regular, ArrowClockwiseDashesSizeAndContent.Values[3]) { } }
            public class ArrowCounterclockwise : Icon { public ArrowCounterclockwise() : base("ArrowCounterclockwise", IconVariant.Regular, ArrowCounterclockwiseSizeAndContent.Values[5]) { } }
            public class ArrowDown : Icon { public ArrowDown() : base("ArrowDown", IconVariant.Regular, ArrowDownSizeAndContent.Values[5]) { } }
            public class ArrowDownLeft : Icon { public ArrowDownLeft() : base("ArrowDownLeft", IconVariant.Regular, ArrowDownLeftSizeAndContent.Values[3]) { } }
            public class ArrowDownload : Icon { public ArrowDownload() : base("ArrowDownload", IconVariant.Regular, ArrowDownloadSizeAndContent.Values[4]) { } }
            public class ArrowDownloadOff : Icon { public ArrowDownloadOff() : base("ArrowDownloadOff", IconVariant.Regular, ArrowDownloadOffSizeAndContent.Values[4]) { } }
            public class ArrowFlowDiagonalUpRight : Icon { public ArrowFlowDiagonalUpRight() : base("ArrowFlowDiagonalUpRight", IconVariant.Regular, ArrowFlowDiagonalUpRightSizeAndContent.Values[3]) { } }
            public class ArrowFlowUpRight : Icon { public ArrowFlowUpRight() : base("ArrowFlowUpRight", IconVariant.Regular, ArrowFlowUpRightSizeAndContent.Values[3]) { } }
            public class ArrowForward : Icon { public ArrowForward() : base("ArrowForward", IconVariant.Regular, ArrowForwardSizeAndContent.Values[4]) { } }
            public class ArrowLeft : Icon { public ArrowLeft() : base("ArrowLeft", IconVariant.Regular, ArrowLeftSizeAndContent.Values[5]) { } }
            public class ArrowMaximize : Icon { public ArrowMaximize() : base("ArrowMaximize", IconVariant.Regular, ArrowMaximizeSizeAndContent.Values[4]) { } }
            public class ArrowOutlineDownLeft : Icon { public ArrowOutlineDownLeft() : base("ArrowOutlineDownLeft", IconVariant.Regular, ArrowOutlineDownLeftSizeAndContent.Values[4]) { } }
            public class ArrowOutlineUpRight : Icon { public ArrowOutlineUpRight() : base("ArrowOutlineUpRight", IconVariant.Regular, ArrowOutlineUpRightSizeAndContent.Values[2]) { } }
            public class ArrowRedo : Icon { public ArrowRedo() : base("ArrowRedo", IconVariant.Regular, ArrowRedoSizeAndContent.Values[4]) { } }
            public class ArrowReply : Icon { public ArrowReply() : base("ArrowReply", IconVariant.Regular, ArrowReplySizeAndContent.Values[4]) { } }
            public class ArrowReplyAll : Icon { public ArrowReplyAll() : base("ArrowReplyAll", IconVariant.Regular, ArrowReplyAllSizeAndContent.Values[4]) { } }
            public class ArrowReset : Icon { public ArrowReset() : base("ArrowReset", IconVariant.Regular, ArrowResetSizeAndContent.Values[2]) { } }
            public class ArrowRight : Icon { public ArrowRight() : base("ArrowRight", IconVariant.Regular, ArrowRightSizeAndContent.Values[5]) { } }
            public class ArrowShuffle : Icon { public ArrowShuffle() : base("ArrowShuffle", IconVariant.Regular, ArrowShuffleSizeAndContent.Values[4]) { } }
            public class ArrowShuffleOff : Icon { public ArrowShuffleOff() : base("ArrowShuffleOff", IconVariant.Regular, ArrowShuffleOffSizeAndContent.Values[4]) { } }
            public class ArrowUndo : Icon { public ArrowUndo() : base("ArrowUndo", IconVariant.Regular, ArrowUndoSizeAndContent.Values[4]) { } }
            public class ArrowUp : Icon { public ArrowUp() : base("ArrowUp", IconVariant.Regular, ArrowUpSizeAndContent.Values[5]) { } }
            public class ArrowUpRight : Icon { public ArrowUpRight() : base("ArrowUpRight", IconVariant.Regular, ArrowUpRightSizeAndContent.Values[3]) { } }
            public class Attach : Icon { public Attach() : base("Attach", IconVariant.Regular, AttachSizeAndContent.Values[4]) { } }
            public class Autocorrect : Icon { public Autocorrect() : base("Autocorrect", IconVariant.Regular, AutocorrectSizeAndContent.Values[2]) { } }
            public class Backpack : Icon { public Backpack() : base("Backpack", IconVariant.Regular, BackpackSizeAndContent.Values[5]) { } }
            public class Beach : Icon { public Beach() : base("Beach", IconVariant.Regular, BeachSizeAndContent.Values[4]) { } }
            public class Beaker : Icon { public Beaker() : base("Beaker", IconVariant.Regular, BeakerSizeAndContent.Values[3]) { } }
            public class BeakerOff : Icon { public BeakerOff() : base("BeakerOff", IconVariant.Regular, BeakerOffSizeAndContent.Values[1]) { } }
            public class BinderTriangle : Icon { public BinderTriangle() : base("BinderTriangle", IconVariant.Regular, BinderTriangleSizeAndContent.Values[3]) { } }
            public class Bluetooth : Icon { public Bluetooth() : base("Bluetooth", IconVariant.Regular, BluetoothSizeAndContent.Values[4]) { } }
            public class Book : Icon { public Book() : base("Book", IconVariant.Regular, BookSizeAndContent.Values[3]) { } }
            public class BookContacts : Icon { public BookContacts() : base("BookContacts", IconVariant.Regular, BookContactsSizeAndContent.Values[3]) { } }
            public class BookDatabase : Icon { public BookDatabase() : base("BookDatabase", IconVariant.Regular, BookDatabaseSizeAndContent.Values[3]) { } }
            public class Bookmark : Icon { public Bookmark() : base("Bookmark", IconVariant.Regular, BookmarkSizeAndContent.Values[4]) { } }
            public class BookmarkMultiple : Icon { public BookmarkMultiple() : base("BookmarkMultiple", IconVariant.Regular, BookmarkMultipleSizeAndContent.Values[4]) { } }
            public class BookOpen : Icon { public BookOpen() : base("BookOpen", IconVariant.Regular, BookOpenSizeAndContent.Values[4]) { } }
            public class BookOpenMicrophone : Icon { public BookOpenMicrophone() : base("BookOpenMicrophone", IconVariant.Regular, BookOpenMicrophoneSizeAndContent.Values[3]) { } }
            public class Braces : Icon { public Braces() : base("Braces", IconVariant.Regular, BracesSizeAndContent.Values[4]) { } }
            public class BranchFork : Icon { public BranchFork() : base("BranchFork", IconVariant.Regular, BranchForkSizeAndContent.Values[3]) { } }
            public class Briefcase : Icon { public Briefcase() : base("Briefcase", IconVariant.Regular, BriefcaseSizeAndContent.Values[5]) { } }
            public class BriefcaseMedical : Icon { public BriefcaseMedical() : base("BriefcaseMedical", IconVariant.Regular, BriefcaseMedicalSizeAndContent.Values[3]) { } }
            public class BriefcaseOff : Icon { public BriefcaseOff() : base("BriefcaseOff", IconVariant.Regular, BriefcaseOffSizeAndContent.Values[4]) { } }
            public class BrightnessHigh : Icon { public BrightnessHigh() : base("BrightnessHigh", IconVariant.Regular, BrightnessHighSizeAndContent.Values[4]) { } }
            public class BrightnessLow : Icon { public BrightnessLow() : base("BrightnessLow", IconVariant.Regular, BrightnessLowSizeAndContent.Values[4]) { } }
            public class Broom : Icon { public Broom() : base("Broom", IconVariant.Regular, BroomSizeAndContent.Values[4]) { } }
            public class Building : Icon { public Building() : base("Building", IconVariant.Regular, BuildingSizeAndContent.Values[3]) { } }
            public class BuildingDesktop : Icon { public BuildingDesktop() : base("BuildingDesktop", IconVariant.Regular, BuildingDesktopSizeAndContent.Values[3]) { } }
            public class BuildingFactory : Icon { public BuildingFactory() : base("BuildingFactory", IconVariant.Regular, BuildingFactorySizeAndContent.Values[4]) { } }
            public class BuildingGovernment : Icon { public BuildingGovernment() : base("BuildingGovernment", IconVariant.Regular, BuildingGovernmentSizeAndContent.Values[3]) { } }
            public class BuildingGovernmentSearch : Icon { public BuildingGovernmentSearch() : base("BuildingGovernmentSearch", IconVariant.Regular, BuildingGovernmentSearchSizeAndContent.Values[3]) { } }
            public class BuildingMosque : Icon { public BuildingMosque() : base("BuildingMosque", IconVariant.Regular, BuildingMosqueSizeAndContent.Values[5]) { } }
            public class BuildingRetailMore : Icon { public BuildingRetailMore() : base("BuildingRetailMore", IconVariant.Regular, BuildingRetailMoreSizeAndContent.Values[2]) { } }
            public class BuildingSwap : Icon { public BuildingSwap() : base("BuildingSwap", IconVariant.Regular, BuildingSwapSizeAndContent.Values[3]) { } }
            public class BuildingTownhouse : Icon { public BuildingTownhouse() : base("BuildingTownhouse", IconVariant.Regular, BuildingTownhouseSizeAndContent.Values[2]) { } }
            public class Calendar : Icon { public Calendar() : base("Calendar", IconVariant.Regular, CalendarSizeAndContent.Values[5]) { } }
            public class CalendarArrowCounterclockwise : Icon { public CalendarArrowCounterclockwise() : base("CalendarArrowCounterclockwise", IconVariant.Regular, CalendarArrowCounterclockwiseSizeAndContent.Values[4]) { } }
            public class CalendarEmpty : Icon { public CalendarEmpty() : base("CalendarEmpty", IconVariant.Regular, CalendarEmptySizeAndContent.Values[4]) { } }
            public class CalendarLock : Icon { public CalendarLock() : base("CalendarLock", IconVariant.Regular, CalendarLockSizeAndContent.Values[4]) { } }
            public class CalendarLtr : Icon { public CalendarLtr() : base("CalendarLtr", IconVariant.Regular, CalendarLtrSizeAndContent.Values[5]) { } }
            public class CalendarMonth : Icon { public CalendarMonth() : base("CalendarMonth", IconVariant.Regular, CalendarMonthSizeAndContent.Values[3]) { } }
            public class CalendarMultiple : Icon { public CalendarMultiple() : base("CalendarMultiple", IconVariant.Regular, CalendarMultipleSizeAndContent.Values[4]) { } }
            public class CalendarNote : Icon { public CalendarNote() : base("CalendarNote", IconVariant.Regular, CalendarNoteSizeAndContent.Values[3]) { } }
            public class CalendarRecord : Icon { public CalendarRecord() : base("CalendarRecord", IconVariant.Regular, CalendarRecordSizeAndContent.Values[4]) { } }
            public class CalendarRtl : Icon { public CalendarRtl() : base("CalendarRtl", IconVariant.Regular, CalendarRtlSizeAndContent.Values[5]) { } }
            public class CalendarSettings : Icon { public CalendarSettings() : base("CalendarSettings", IconVariant.Regular, CalendarSettingsSizeAndContent.Values[4]) { } }
            public class CalendarShield : Icon { public CalendarShield() : base("CalendarShield", IconVariant.Regular, CalendarShieldSizeAndContent.Values[4]) { } }
            public class Call : Icon { public Call() : base("Call", IconVariant.Regular, CallSizeAndContent.Values[5]) { } }
            public class CallEnd : Icon { public CallEnd() : base("CallEnd", IconVariant.Regular, CallEndSizeAndContent.Values[5]) { } }
            public class CallForward : Icon { public CallForward() : base("CallForward", IconVariant.Regular, CallForwardSizeAndContent.Values[4]) { } }
            public class CallPark : Icon { public CallPark() : base("CallPark", IconVariant.Regular, CallParkSizeAndContent.Values[4]) { } }
            public class CallTransfer : Icon { public CallTransfer() : base("CallTransfer", IconVariant.Regular, CallTransferSizeAndContent.Values[3]) { } }
            public class Certificate : Icon { public Certificate() : base("Certificate", IconVariant.Regular, CertificateSizeAndContent.Values[3]) { } }
            public class Chat : Icon { public Chat() : base("Chat", IconVariant.Regular, ChatSizeAndContent.Values[5]) { } }
            public class ChatAdd : Icon { public ChatAdd() : base("ChatAdd", IconVariant.Regular, ChatAddSizeAndContent.Values[4]) { } }
            public class ChatBubblesQuestion : Icon { public ChatBubblesQuestion() : base("ChatBubblesQuestion", IconVariant.Regular, ChatBubblesQuestionSizeAndContent.Values[4]) { } }
            public class ChatEmpty : Icon { public ChatEmpty() : base("ChatEmpty", IconVariant.Regular, ChatEmptySizeAndContent.Values[5]) { } }
            public class ChatMultiple : Icon { public ChatMultiple() : base("ChatMultiple", IconVariant.Regular, ChatMultipleSizeAndContent.Values[4]) { } }
            public class ChatMultipleHeart : Icon { public ChatMultipleHeart() : base("ChatMultipleHeart", IconVariant.Regular, ChatMultipleHeartSizeAndContent.Values[4]) { } }
            public class ChatSparkle : Icon { public ChatSparkle() : base("ChatSparkle", IconVariant.Regular, ChatSparkleSizeAndContent.Values[4]) { } }
            public class Checkmark : Icon { public Checkmark() : base("Checkmark", IconVariant.Regular, CheckmarkSizeAndContent.Values[5]) { } }
            public class CheckmarkCircle : Icon { public CheckmarkCircle() : base("CheckmarkCircle", IconVariant.Regular, CheckmarkCircleSizeAndContent.Values[4]) { } }
            public class ChevronCircleDown : Icon { public ChevronCircleDown() : base("ChevronCircleDown", IconVariant.Regular, ChevronCircleDownSizeAndContent.Values[5]) { } }
            public class ChevronCircleLeft : Icon { public ChevronCircleLeft() : base("ChevronCircleLeft", IconVariant.Regular, ChevronCircleLeftSizeAndContent.Values[5]) { } }
            public class ChevronCircleRight : Icon { public ChevronCircleRight() : base("ChevronCircleRight", IconVariant.Regular, ChevronCircleRightSizeAndContent.Values[5]) { } }
            public class ChevronCircleUp : Icon { public ChevronCircleUp() : base("ChevronCircleUp", IconVariant.Regular, ChevronCircleUpSizeAndContent.Values[5]) { } }
            public class ChevronDown : Icon { public ChevronDown() : base("ChevronDown", IconVariant.Regular, ChevronDownSizeAndContent.Values[5]) { } }
            public class ChevronLeft : Icon { public ChevronLeft() : base("ChevronLeft", IconVariant.Regular, ChevronLeftSizeAndContent.Values[5]) { } }
            public class ChevronRight : Icon { public ChevronRight() : base("ChevronRight", IconVariant.Regular, ChevronRightSizeAndContent.Values[5]) { } }
            public class ChevronUp : Icon { public ChevronUp() : base("ChevronUp", IconVariant.Regular, ChevronUpSizeAndContent.Values[5]) { } }
            public class Circle : Icon { public Circle() : base("Circle", IconVariant.Regular, CircleSizeAndContent.Values[5]) { } }
            public class Clipboard : Icon { public Clipboard() : base("Clipboard", IconVariant.Regular, ClipboardSizeAndContent.Values[4]) { } }
            public class ClipboardBrush : Icon { public ClipboardBrush() : base("ClipboardBrush", IconVariant.Regular, ClipboardBrushSizeAndContent.Values[4]) { } }
            public class ClipboardDataBar : Icon { public ClipboardDataBar() : base("ClipboardDataBar", IconVariant.Regular, ClipboardDataBarSizeAndContent.Values[2]) { } }
            public class ClipboardMathFormula : Icon { public ClipboardMathFormula() : base("ClipboardMathFormula", IconVariant.Regular, ClipboardMathFormulaSizeAndContent.Values[4]) { } }
            public class ClipboardNumber123 : Icon { public ClipboardNumber123() : base("ClipboardNumber123", IconVariant.Regular, ClipboardNumber123SizeAndContent.Values[4]) { } }
            public class ClipboardPaste : Icon { public ClipboardPaste() : base("ClipboardPaste", IconVariant.Regular, ClipboardPasteSizeAndContent.Values[3]) { } }
            public class ClipboardText : Icon { public ClipboardText() : base("ClipboardText", IconVariant.Regular, ClipboardTextSizeAndContent.Values[0]) { } }
            public class ClipboardTextEdit : Icon { public ClipboardTextEdit() : base("ClipboardTextEdit", IconVariant.Regular, ClipboardTextEditSizeAndContent.Values[2]) { } }
            public class ClipboardTextLtr : Icon { public ClipboardTextLtr() : base("ClipboardTextLtr", IconVariant.Regular, ClipboardTextLtrSizeAndContent.Values[3]) { } }
            public class Clock : Icon { public Clock() : base("Clock", IconVariant.Regular, ClockSizeAndContent.Values[5]) { } }
            public class ClockAlarm : Icon { public ClockAlarm() : base("ClockAlarm", IconVariant.Regular, ClockAlarmSizeAndContent.Values[3]) { } }
            public class ClosedCaption : Icon { public ClosedCaption() : base("ClosedCaption", IconVariant.Regular, ClosedCaptionSizeAndContent.Values[4]) { } }
            public class Cloud : Icon { public Cloud() : base("Cloud", IconVariant.Regular, CloudSizeAndContent.Values[4]) { } }
            public class CloudArchive : Icon { public CloudArchive() : base("CloudArchive", IconVariant.Regular, CloudArchiveSizeAndContent.Values[4]) { } }
            public class CloudArrowDown : Icon { public CloudArrowDown() : base("CloudArrowDown", IconVariant.Regular, CloudArrowDownSizeAndContent.Values[4]) { } }
            public class CloudArrowUp : Icon { public CloudArrowUp() : base("CloudArrowUp", IconVariant.Regular, CloudArrowUpSizeAndContent.Values[4]) { } }
            public class CloudBeaker : Icon { public CloudBeaker() : base("CloudBeaker", IconVariant.Regular, CloudBeakerSizeAndContent.Values[4]) { } }
            public class CloudCheckmark : Icon { public CloudCheckmark() : base("CloudCheckmark", IconVariant.Regular, CloudCheckmarkSizeAndContent.Values[4]) { } }
            public class CloudCube : Icon { public CloudCube() : base("CloudCube", IconVariant.Regular, CloudCubeSizeAndContent.Values[4]) { } }
            public class CloudDismiss : Icon { public CloudDismiss() : base("CloudDismiss", IconVariant.Regular, CloudDismissSizeAndContent.Values[4]) { } }
            public class CloudError : Icon { public CloudError() : base("CloudError", IconVariant.Regular, CloudErrorSizeAndContent.Values[4]) { } }
            public class CloudOff : Icon { public CloudOff() : base("CloudOff", IconVariant.Regular, CloudOffSizeAndContent.Values[4]) { } }
            public class CloudSync : Icon { public CloudSync() : base("CloudSync", IconVariant.Regular, CloudSyncSizeAndContent.Values[4]) { } }
            public class CloudWords : Icon { public CloudWords() : base("CloudWords", IconVariant.Regular, CloudWordsSizeAndContent.Values[4]) { } }
            public class Clover : Icon { public Clover() : base("Clover", IconVariant.Regular, CloverSizeAndContent.Values[4]) { } }
            public class CodeBlock : Icon { public CodeBlock() : base("CodeBlock", IconVariant.Regular, CodeBlockSizeAndContent.Values[4]) { } }
            public class CodeCircle : Icon { public CodeCircle() : base("CodeCircle", IconVariant.Regular, CodeCircleSizeAndContent.Values[2]) { } }
            public class CommentMultiple : Icon { public CommentMultiple() : base("CommentMultiple", IconVariant.Regular, CommentMultipleSizeAndContent.Values[4]) { } }
            public class CommentMultipleLink : Icon { public CommentMultipleLink() : base("CommentMultipleLink", IconVariant.Regular, CommentMultipleLinkSizeAndContent.Values[4]) { } }
            public class ContactCard : Icon { public ContactCard() : base("ContactCard", IconVariant.Regular, ContactCardSizeAndContent.Values[4]) { } }
            public class ContactCardRibbon : Icon { public ContactCardRibbon() : base("ContactCardRibbon", IconVariant.Regular, ContactCardRibbonSizeAndContent.Values[4]) { } }
            public class ContentSettings : Icon { public ContentSettings() : base("ContentSettings", IconVariant.Regular, ContentSettingsSizeAndContent.Values[3]) { } }
            public class ContentView : Icon { public ContentView() : base("ContentView", IconVariant.Regular, ContentViewSizeAndContent.Values[3]) { } }
            public class ContractDownLeft : Icon { public ContractDownLeft() : base("ContractDownLeft", IconVariant.Regular, ContractDownLeftSizeAndContent.Values[4]) { } }
            public class ContractUpRight : Icon { public ContractUpRight() : base("ContractUpRight", IconVariant.Regular, ContractUpRightSizeAndContent.Values[4]) { } }
            public class Copy : Icon { public Copy() : base("Copy", IconVariant.Regular, CopySizeAndContent.Values[3]) { } }
            public class Couch : Icon { public Couch() : base("Couch", IconVariant.Regular, CouchSizeAndContent.Values[3]) { } }
            public class CreditCardClock : Icon { public CreditCardClock() : base("CreditCardClock", IconVariant.Regular, CreditCardClockSizeAndContent.Values[3]) { } }
            public class Crop : Icon { public Crop() : base("Crop", IconVariant.Regular, CropSizeAndContent.Values[4]) { } }
            public class Cube : Icon { public Cube() : base("Cube", IconVariant.Regular, CubeSizeAndContent.Values[4]) { } }
            public class CursorHover : Icon { public CursorHover() : base("CursorHover", IconVariant.Regular, CursorHoverSizeAndContent.Values[4]) { } }
            public class DataBarVertical : Icon { public DataBarVertical() : base("DataBarVertical", IconVariant.Regular, DataBarVerticalSizeAndContent.Values[3]) { } }
            public class DataBarVerticalStar : Icon { public DataBarVerticalStar() : base("DataBarVerticalStar", IconVariant.Regular, DataBarVerticalStarSizeAndContent.Values[3]) { } }
            public class Database : Icon { public Database() : base("Database", IconVariant.Regular, DatabaseSizeAndContent.Values[3]) { } }
            public class DatabaseArrowRight : Icon { public DatabaseArrowRight() : base("DatabaseArrowRight", IconVariant.Regular, DatabaseArrowRightSizeAndContent.Values[2]) { } }
            public class DatabaseMultiple : Icon { public DatabaseMultiple() : base("DatabaseMultiple", IconVariant.Regular, DatabaseMultipleSizeAndContent.Values[1]) { } }
            public class DataTrending : Icon { public DataTrending() : base("DataTrending", IconVariant.Regular, DataTrendingSizeAndContent.Values[4]) { } }
            public class Delete : Icon { public Delete() : base("Delete", IconVariant.Regular, DeleteSizeAndContent.Values[5]) { } }
            public class Desk : Icon { public Desk() : base("Desk", IconVariant.Regular, DeskSizeAndContent.Values[4]) { } }
            public class Desktop : Icon { public Desktop() : base("Desktop", IconVariant.Regular, DesktopSizeAndContent.Values[4]) { } }
            public class DesktopMac : Icon { public DesktopMac() : base("DesktopMac", IconVariant.Regular, DesktopMacSizeAndContent.Values[3]) { } }
            public class DesktopPulse : Icon { public DesktopPulse() : base("DesktopPulse", IconVariant.Regular, DesktopPulseSizeAndContent.Values[4]) { } }
            public class DeviceMeetingRoom : Icon { public DeviceMeetingRoom() : base("DeviceMeetingRoom", IconVariant.Regular, DeviceMeetingRoomSizeAndContent.Values[4]) { } }
            public class DeviceMeetingRoomRemote : Icon { public DeviceMeetingRoomRemote() : base("DeviceMeetingRoomRemote", IconVariant.Regular, DeviceMeetingRoomRemoteSizeAndContent.Values[4]) { } }
            public class Dialpad : Icon { public Dialpad() : base("Dialpad", IconVariant.Regular, DialpadSizeAndContent.Values[3]) { } }
            public class Diamond : Icon { public Diamond() : base("Diamond", IconVariant.Regular, DiamondSizeAndContent.Values[4]) { } }
            public class Dishwasher : Icon { public Dishwasher() : base("Dishwasher", IconVariant.Regular, DishwasherSizeAndContent.Values[2]) { } }
            public class Dismiss : Icon { public Dismiss() : base("Dismiss", IconVariant.Regular, DismissSizeAndContent.Values[5]) { } }
            public class DismissCircle : Icon { public DismissCircle() : base("DismissCircle", IconVariant.Regular, DismissCircleSizeAndContent.Values[5]) { } }
            public class Document : Icon { public Document() : base("Document", IconVariant.Regular, DocumentSizeAndContent.Values[4]) { } }
            public class DocumentBorder : Icon { public DocumentBorder() : base("DocumentBorder", IconVariant.Regular, DocumentBorderSizeAndContent.Values[2]) { } }
            public class DocumentBorderPrint : Icon { public DocumentBorderPrint() : base("DocumentBorderPrint", IconVariant.Regular, DocumentBorderPrintSizeAndContent.Values[2]) { } }
            public class DocumentBriefcase : Icon { public DocumentBriefcase() : base("DocumentBriefcase", IconVariant.Regular, DocumentBriefcaseSizeAndContent.Values[3]) { } }
            public class DocumentData : Icon { public DocumentData() : base("DocumentData", IconVariant.Regular, DocumentDataSizeAndContent.Values[3]) { } }
            public class DocumentDataLink : Icon { public DocumentDataLink() : base("DocumentDataLink", IconVariant.Regular, DocumentDataLinkSizeAndContent.Values[3]) { } }
            public class DocumentDataLock : Icon { public DocumentDataLock() : base("DocumentDataLock", IconVariant.Regular, DocumentDataLockSizeAndContent.Values[3]) { } }
            public class DocumentLightning : Icon { public DocumentLightning() : base("DocumentLightning", IconVariant.Regular, DocumentLightningSizeAndContent.Values[4]) { } }
            public class DocumentLock : Icon { public DocumentLock() : base("DocumentLock", IconVariant.Regular, DocumentLockSizeAndContent.Values[4]) { } }
            public class DocumentPdf : Icon { public DocumentPdf() : base("DocumentPdf", IconVariant.Regular, DocumentPdfSizeAndContent.Values[3]) { } }
            public class DocumentPrint : Icon { public DocumentPrint() : base("DocumentPrint", IconVariant.Regular, DocumentPrintSizeAndContent.Values[3]) { } }
            public class DocumentRibbon : Icon { public DocumentRibbon() : base("DocumentRibbon", IconVariant.Regular, DocumentRibbonSizeAndContent.Values[4]) { } }
            public class DocumentSearch : Icon { public DocumentSearch() : base("DocumentSearch", IconVariant.Regular, DocumentSearchSizeAndContent.Values[3]) { } }
            public class DocumentSync : Icon { public DocumentSync() : base("DocumentSync", IconVariant.Regular, DocumentSyncSizeAndContent.Values[3]) { } }
            public class DrinkBottle : Icon { public DrinkBottle() : base("DrinkBottle", IconVariant.Regular, DrinkBottleSizeAndContent.Values[1]) { } }
            public class DrinkBottleOff : Icon { public DrinkBottleOff() : base("DrinkBottleOff", IconVariant.Regular, DrinkBottleOffSizeAndContent.Values[1]) { } }
            public class Earth : Icon { public Earth() : base("Earth", IconVariant.Regular, EarthSizeAndContent.Values[3]) { } }
            public class EarthLeaf : Icon { public EarthLeaf() : base("EarthLeaf", IconVariant.Regular, EarthLeafSizeAndContent.Values[3]) { } }
            public class Edit : Icon { public Edit() : base("Edit", IconVariant.Regular, EditSizeAndContent.Values[5]) { } }
            public class EditOff : Icon { public EditOff() : base("EditOff", IconVariant.Regular, EditOffSizeAndContent.Values[4]) { } }
            public class EditProhibited : Icon { public EditProhibited() : base("EditProhibited", IconVariant.Regular, EditProhibitedSizeAndContent.Values[4]) { } }
            public class Elevator : Icon { public Elevator() : base("Elevator", IconVariant.Regular, ElevatorSizeAndContent.Values[2]) { } }
            public class Emoji : Icon { public Emoji() : base("Emoji", IconVariant.Regular, EmojiSizeAndContent.Values[4]) { } }
            public class EmojiHand : Icon { public EmojiHand() : base("EmojiHand", IconVariant.Regular, EmojiHandSizeAndContent.Values[4]) { } }
            public class EmojiHint : Icon { public EmojiHint() : base("EmojiHint", IconVariant.Regular, EmojiHintSizeAndContent.Values[4]) { } }
            public class EmojiSparkle : Icon { public EmojiSparkle() : base("EmojiSparkle", IconVariant.Regular, EmojiSparkleSizeAndContent.Values[4]) { } }
            public class ExpandUpLeft : Icon { public ExpandUpLeft() : base("ExpandUpLeft", IconVariant.Regular, ExpandUpLeftSizeAndContent.Values[4]) { } }
            public class ExpandUpRight : Icon { public ExpandUpRight() : base("ExpandUpRight", IconVariant.Regular, ExpandUpRightSizeAndContent.Values[4]) { } }
            public class Eye : Icon { public Eye() : base("Eye", IconVariant.Regular, EyeSizeAndContent.Values[5]) { } }
            public class EyeLines : Icon { public EyeLines() : base("EyeLines", IconVariant.Regular, EyeLinesSizeAndContent.Values[3]) { } }
            public class Feed : Icon { public Feed() : base("Feed", IconVariant.Regular, FeedSizeAndContent.Values[4]) { } }
            public class Filmstrip : Icon { public Filmstrip() : base("Filmstrip", IconVariant.Regular, FilmstripSizeAndContent.Values[3]) { } }
            public class FilmstripPlay : Icon { public FilmstripPlay() : base("FilmstripPlay", IconVariant.Regular, FilmstripPlaySizeAndContent.Values[3]) { } }
            public class FilmstripSplit : Icon { public FilmstripSplit() : base("FilmstripSplit", IconVariant.Regular, FilmstripSplitSizeAndContent.Values[3]) { } }
            public class Filter : Icon { public Filter() : base("Filter", IconVariant.Regular, FilterSizeAndContent.Values[5]) { } }
            public class Fingerprint : Icon { public Fingerprint() : base("Fingerprint", IconVariant.Regular, FingerprintSizeAndContent.Values[3]) { } }
            public class Fireplace : Icon { public Fireplace() : base("Fireplace", IconVariant.Regular, FireplaceSizeAndContent.Values[2]) { } }
            public class Flag : Icon { public Flag() : base("Flag", IconVariant.Regular, FlagSizeAndContent.Values[4]) { } }
            public class FlagClock : Icon { public FlagClock() : base("FlagClock", IconVariant.Regular, FlagClockSizeAndContent.Values[4]) { } }
            public class Flash : Icon { public Flash() : base("Flash", IconVariant.Regular, FlashSizeAndContent.Values[4]) { } }
            public class FlipHorizontal : Icon { public FlipHorizontal() : base("FlipHorizontal", IconVariant.Regular, FlipHorizontalSizeAndContent.Values[4]) { } }
            public class FlipVertical : Icon { public FlipVertical() : base("FlipVertical", IconVariant.Regular, FlipVerticalSizeAndContent.Values[4]) { } }
            public class Flow : Icon { public Flow() : base("Flow", IconVariant.Regular, FlowSizeAndContent.Values[3]) { } }
            public class Fluent : Icon { public Fluent() : base("Fluent", IconVariant.Regular, FluentSizeAndContent.Values[2]) { } }
            public class Folder : Icon { public Folder() : base("Folder", IconVariant.Regular, FolderSizeAndContent.Values[4]) { } }
            public class FolderAdd : Icon { public FolderAdd() : base("FolderAdd", IconVariant.Regular, FolderAddSizeAndContent.Values[4]) { } }
            public class FolderArrowLeft : Icon { public FolderArrowLeft() : base("FolderArrowLeft", IconVariant.Regular, FolderArrowLeftSizeAndContent.Values[4]) { } }
            public class FolderArrowRight : Icon { public FolderArrowRight() : base("FolderArrowRight", IconVariant.Regular, FolderArrowRightSizeAndContent.Values[4]) { } }
            public class FolderArrowUp : Icon { public FolderArrowUp() : base("FolderArrowUp", IconVariant.Regular, FolderArrowUpSizeAndContent.Values[4]) { } }
            public class FolderLink : Icon { public FolderLink() : base("FolderLink", IconVariant.Regular, FolderLinkSizeAndContent.Values[4]) { } }
            public class FolderMail : Icon { public FolderMail() : base("FolderMail", IconVariant.Regular, FolderMailSizeAndContent.Values[4]) { } }
            public class FolderPerson : Icon { public FolderPerson() : base("FolderPerson", IconVariant.Regular, FolderPersonSizeAndContent.Values[4]) { } }
            public class FolderProhibited : Icon { public FolderProhibited() : base("FolderProhibited", IconVariant.Regular, FolderProhibitedSizeAndContent.Values[4]) { } }
            public class FoodChickenLeg : Icon { public FoodChickenLeg() : base("FoodChickenLeg", IconVariant.Regular, FoodChickenLegSizeAndContent.Values[3]) { } }
            public class FullScreenMaximize : Icon { public FullScreenMaximize() : base("FullScreenMaximize", IconVariant.Regular, FullScreenMaximizeSizeAndContent.Values[4]) { } }
            public class FullScreenMinimize : Icon { public FullScreenMinimize() : base("FullScreenMinimize", IconVariant.Regular, FullScreenMinimizeSizeAndContent.Values[4]) { } }
            public class Games : Icon { public Games() : base("Games", IconVariant.Regular, GamesSizeAndContent.Values[4]) { } }
            public class Gauge : Icon { public Gauge() : base("Gauge", IconVariant.Regular, GaugeSizeAndContent.Values[2]) { } }
            public class Gavel : Icon { public Gavel() : base("Gavel", IconVariant.Regular, GavelSizeAndContent.Values[3]) { } }
            public class GlanceHorizontal : Icon { public GlanceHorizontal() : base("GlanceHorizontal", IconVariant.Regular, GlanceHorizontalSizeAndContent.Values[4]) { } }
            public class GlanceHorizontalSparkle : Icon { public GlanceHorizontalSparkle() : base("GlanceHorizontalSparkle", IconVariant.Regular, GlanceHorizontalSparkleSizeAndContent.Values[0]) { } }
            public class Glasses : Icon { public Glasses() : base("Glasses", IconVariant.Regular, GlassesSizeAndContent.Values[4]) { } }
            public class GlassesOff : Icon { public GlassesOff() : base("GlassesOff", IconVariant.Regular, GlassesOffSizeAndContent.Values[4]) { } }
            public class Globe : Icon { public Globe() : base("Globe", IconVariant.Regular, GlobeSizeAndContent.Values[4]) { } }
            public class GlobeArrowForward : Icon { public GlobeArrowForward() : base("GlobeArrowForward", IconVariant.Regular, GlobeArrowForwardSizeAndContent.Values[3]) { } }
            public class GlobeSurface : Icon { public GlobeSurface() : base("GlobeSurface", IconVariant.Regular, GlobeSurfaceSizeAndContent.Values[2]) { } }
            public class GlobeVideo : Icon { public GlobeVideo() : base("GlobeVideo", IconVariant.Regular, GlobeVideoSizeAndContent.Values[3]) { } }
            public class HandOpenHeart : Icon { public HandOpenHeart() : base("HandOpenHeart", IconVariant.Regular, HandOpenHeartSizeAndContent.Values[1]) { } }
            public class Handshake : Icon { public Handshake() : base("Handshake", IconVariant.Regular, HandshakeSizeAndContent.Values[3]) { } }
            public class HardDrive : Icon { public HardDrive() : base("HardDrive", IconVariant.Regular, HardDriveSizeAndContent.Values[3]) { } }
            public class HardDriveCall : Icon { public HardDriveCall() : base("HardDriveCall", IconVariant.Regular, HardDriveCallSizeAndContent.Values[1]) { } }
            public class Headphones : Icon { public Headphones() : base("Headphones", IconVariant.Regular, HeadphonesSizeAndContent.Values[3]) { } }
            public class HeadphonesSoundWave : Icon { public HeadphonesSoundWave() : base("HeadphonesSoundWave", IconVariant.Regular, HeadphonesSoundWaveSizeAndContent.Values[3]) { } }
            public class Headset : Icon { public Headset() : base("Headset", IconVariant.Regular, HeadsetSizeAndContent.Values[4]) { } }
            public class Heart : Icon { public Heart() : base("Heart", IconVariant.Regular, HeartSizeAndContent.Values[5]) { } }
            public class HeartCircleHint : Icon { public HeartCircleHint() : base("HeartCircleHint", IconVariant.Regular, HeartCircleHintSizeAndContent.Values[4]) { } }
            public class HeartPulse : Icon { public HeartPulse() : base("HeartPulse", IconVariant.Regular, HeartPulseSizeAndContent.Values[2]) { } }
            public class Hexagon : Icon { public Hexagon() : base("Hexagon", IconVariant.Regular, HexagonSizeAndContent.Values[5]) { } }
            public class History : Icon { public History() : base("History", IconVariant.Regular, HistorySizeAndContent.Values[4]) { } }
            public class HistoryDismiss : Icon { public HistoryDismiss() : base("HistoryDismiss", IconVariant.Regular, HistoryDismissSizeAndContent.Values[3]) { } }
            public class Home : Icon { public Home() : base("Home", IconVariant.Regular, HomeSizeAndContent.Values[5]) { } }
            public class HomeDatabase : Icon { public HomeDatabase() : base("HomeDatabase", IconVariant.Regular, HomeDatabaseSizeAndContent.Values[2]) { } }
            public class HomeHeart : Icon { public HomeHeart() : base("HomeHeart", IconVariant.Regular, HomeHeartSizeAndContent.Values[3]) { } }
            public class HomeMore : Icon { public HomeMore() : base("HomeMore", IconVariant.Regular, HomeMoreSizeAndContent.Values[2]) { } }
            public class HomeSplit : Icon { public HomeSplit() : base("HomeSplit", IconVariant.Regular, HomeSplitSizeAndContent.Values[2]) { } }
            public class Image : Icon { public Image() : base("Image", IconVariant.Regular, ImageSizeAndContent.Values[4]) { } }
            public class ImageBorder : Icon { public ImageBorder() : base("ImageBorder", IconVariant.Regular, ImageBorderSizeAndContent.Values[4]) { } }
            public class ImageCircle : Icon { public ImageCircle() : base("ImageCircle", IconVariant.Regular, ImageCircleSizeAndContent.Values[4]) { } }
            public class ImageMultiple : Icon { public ImageMultiple() : base("ImageMultiple", IconVariant.Regular, ImageMultipleSizeAndContent.Values[4]) { } }
            public class ImageOff : Icon { public ImageOff() : base("ImageOff", IconVariant.Regular, ImageOffSizeAndContent.Values[3]) { } }
            public class ImageTable : Icon { public ImageTable() : base("ImageTable", IconVariant.Regular, ImageTableSizeAndContent.Values[4]) { } }
            public class Important : Icon { public Important() : base("Important", IconVariant.Regular, ImportantSizeAndContent.Values[4]) { } }
            public class Info : Icon { public Info() : base("Info", IconVariant.Regular, InfoSizeAndContent.Values[5]) { } }
            public class InkingTool : Icon { public InkingTool() : base("InkingTool", IconVariant.Regular, InkingToolSizeAndContent.Values[3]) { } }
            public class Key : Icon { public Key() : base("Key", IconVariant.Regular, KeySizeAndContent.Values[3]) { } }
            public class LeafOne : Icon { public LeafOne() : base("LeafOne", IconVariant.Regular, LeafOneSizeAndContent.Values[3]) { } }
            public class LeafTwo : Icon { public LeafTwo() : base("LeafTwo", IconVariant.Regular, LeafTwoSizeAndContent.Values[3]) { } }
            public class Library : Icon { public Library() : base("Library", IconVariant.Regular, LibrarySizeAndContent.Values[4]) { } }
            public class Lightbulb : Icon { public Lightbulb() : base("Lightbulb", IconVariant.Regular, LightbulbSizeAndContent.Values[4]) { } }
            public class LightbulbFilament : Icon { public LightbulbFilament() : base("LightbulbFilament", IconVariant.Regular, LightbulbFilamentSizeAndContent.Values[3]) { } }
            public class LightbulbPerson : Icon { public LightbulbPerson() : base("LightbulbPerson", IconVariant.Regular, LightbulbPersonSizeAndContent.Values[4]) { } }
            public class Line : Icon { public Line() : base("Line", IconVariant.Regular, LineSizeAndContent.Values[2]) { } }
            public class LineDashes : Icon { public LineDashes() : base("LineDashes", IconVariant.Regular, LineDashesSizeAndContent.Values[2]) { } }
            public class Link : Icon { public Link() : base("Link", IconVariant.Regular, LinkSizeAndContent.Values[5]) { } }
            public class LinkPerson : Icon { public LinkPerson() : base("LinkPerson", IconVariant.Regular, LinkPersonSizeAndContent.Values[3]) { } }
            public class LocationArrow : Icon { public LocationArrow() : base("LocationArrow", IconVariant.Regular, LocationArrowSizeAndContent.Values[5]) { } }
            public class LocationTargetSquare : Icon { public LocationTargetSquare() : base("LocationTargetSquare", IconVariant.Regular, LocationTargetSquareSizeAndContent.Values[3]) { } }
            public class LockClosed : Icon { public LockClosed() : base("LockClosed", IconVariant.Regular, LockClosedSizeAndContent.Values[5]) { } }
            public class LockOpen : Icon { public LockOpen() : base("LockOpen", IconVariant.Regular, LockOpenSizeAndContent.Values[5]) { } }
            public class LockShield : Icon { public LockShield() : base("LockShield", IconVariant.Regular, LockShieldSizeAndContent.Values[4]) { } }
            public class Luggage : Icon { public Luggage() : base("Luggage", IconVariant.Regular, LuggageSizeAndContent.Values[4]) { } }
            public class Mail : Icon { public Mail() : base("Mail", IconVariant.Regular, MailSizeAndContent.Values[5]) { } }
            public class MailMultiple : Icon { public MailMultiple() : base("MailMultiple", IconVariant.Regular, MailMultipleSizeAndContent.Values[4]) { } }
            public class MailRead : Icon { public MailRead() : base("MailRead", IconVariant.Regular, MailReadSizeAndContent.Values[4]) { } }
            public class MailReadMultiple : Icon { public MailReadMultiple() : base("MailReadMultiple", IconVariant.Regular, MailReadMultipleSizeAndContent.Values[4]) { } }
            public class MailUnread : Icon { public MailUnread() : base("MailUnread", IconVariant.Regular, MailUnreadSizeAndContent.Values[5]) { } }
            public class MathFormula : Icon { public MathFormula() : base("MathFormula", IconVariant.Regular, MathFormulaSizeAndContent.Values[3]) { } }
            public class MathSymbols : Icon { public MathSymbols() : base("MathSymbols", IconVariant.Regular, MathSymbolsSizeAndContent.Values[4]) { } }
            public class MeetNow : Icon { public MeetNow() : base("MeetNow", IconVariant.Regular, MeetNowSizeAndContent.Values[4]) { } }
            public class MegaphoneLoud : Icon { public MegaphoneLoud() : base("MegaphoneLoud", IconVariant.Regular, MegaphoneLoudSizeAndContent.Values[4]) { } }
            public class Mention : Icon { public Mention() : base("Mention", IconVariant.Regular, MentionSizeAndContent.Values[4]) { } }
            public class Mic : Icon { public Mic() : base("Mic", IconVariant.Regular, MicSizeAndContent.Values[4]) { } }
            public class MicOff : Icon { public MicOff() : base("MicOff", IconVariant.Regular, MicOffSizeAndContent.Values[5]) { } }
            public class MicPulse : Icon { public MicPulse() : base("MicPulse", IconVariant.Regular, MicPulseSizeAndContent.Values[4]) { } }
            public class MicPulseOff : Icon { public MicPulseOff() : base("MicPulseOff", IconVariant.Regular, MicPulseOffSizeAndContent.Values[4]) { } }
            public class Molecule : Icon { public Molecule() : base("Molecule", IconVariant.Regular, MoleculeSizeAndContent.Values[4]) { } }
            public class MoreCircle : Icon { public MoreCircle() : base("MoreCircle", IconVariant.Regular, MoreCircleSizeAndContent.Values[4]) { } }
            public class MoreHorizontal : Icon { public MoreHorizontal() : base("MoreHorizontal", IconVariant.Regular, MoreHorizontalSizeAndContent.Values[4]) { } }
            public class MoreVertical : Icon { public MoreVertical() : base("MoreVertical", IconVariant.Regular, MoreVerticalSizeAndContent.Values[4]) { } }
            public class Multiplier12x : Icon { public Multiplier12x() : base("Multiplier12x", IconVariant.Regular, Multiplier12xSizeAndContent.Values[3]) { } }
            public class Multiplier15x : Icon { public Multiplier15x() : base("Multiplier15x", IconVariant.Regular, Multiplier15xSizeAndContent.Values[3]) { } }
            public class Multiplier18x : Icon { public Multiplier18x() : base("Multiplier18x", IconVariant.Regular, Multiplier18xSizeAndContent.Values[3]) { } }
            public class Multiplier1x : Icon { public Multiplier1x() : base("Multiplier1x", IconVariant.Regular, Multiplier1xSizeAndContent.Values[3]) { } }
            public class Multiplier2x : Icon { public Multiplier2x() : base("Multiplier2x", IconVariant.Regular, Multiplier2xSizeAndContent.Values[3]) { } }
            public class Multiplier5x : Icon { public Multiplier5x() : base("Multiplier5x", IconVariant.Regular, Multiplier5xSizeAndContent.Values[3]) { } }
            public class Next : Icon { public Next() : base("Next", IconVariant.Regular, NextSizeAndContent.Values[4]) { } }
            public class Notebook : Icon { public Notebook() : base("Notebook", IconVariant.Regular, NotebookSizeAndContent.Values[3]) { } }
            public class Notepad : Icon { public Notepad() : base("Notepad", IconVariant.Regular, NotepadSizeAndContent.Values[5]) { } }
            public class NumberCircle0 : Icon { public NumberCircle0() : base("NumberCircle0", IconVariant.Regular, NumberCircle0SizeAndContent.Values[4]) { } }
            public class NumberCircle1 : Icon { public NumberCircle1() : base("NumberCircle1", IconVariant.Regular, NumberCircle1SizeAndContent.Values[4]) { } }
            public class NumberCircle2 : Icon { public NumberCircle2() : base("NumberCircle2", IconVariant.Regular, NumberCircle2SizeAndContent.Values[4]) { } }
            public class NumberCircle3 : Icon { public NumberCircle3() : base("NumberCircle3", IconVariant.Regular, NumberCircle3SizeAndContent.Values[4]) { } }
            public class NumberCircle4 : Icon { public NumberCircle4() : base("NumberCircle4", IconVariant.Regular, NumberCircle4SizeAndContent.Values[4]) { } }
            public class NumberCircle5 : Icon { public NumberCircle5() : base("NumberCircle5", IconVariant.Regular, NumberCircle5SizeAndContent.Values[4]) { } }
            public class NumberCircle6 : Icon { public NumberCircle6() : base("NumberCircle6", IconVariant.Regular, NumberCircle6SizeAndContent.Values[4]) { } }
            public class NumberCircle7 : Icon { public NumberCircle7() : base("NumberCircle7", IconVariant.Regular, NumberCircle7SizeAndContent.Values[4]) { } }
            public class NumberCircle8 : Icon { public NumberCircle8() : base("NumberCircle8", IconVariant.Regular, NumberCircle8SizeAndContent.Values[4]) { } }
            public class NumberCircle9 : Icon { public NumberCircle9() : base("NumberCircle9", IconVariant.Regular, NumberCircle9SizeAndContent.Values[4]) { } }
            public class NumberSymbol : Icon { public NumberSymbol() : base("NumberSymbol", IconVariant.Regular, NumberSymbolSizeAndContent.Values[4]) { } }
            public class Open : Icon { public Open() : base("Open", IconVariant.Regular, OpenSizeAndContent.Values[5]) { } }
            public class Organization : Icon { public Organization() : base("Organization", IconVariant.Regular, OrganizationSizeAndContent.Values[5]) { } }
            public class Oval : Icon { public Oval() : base("Oval", IconVariant.Regular, OvalSizeAndContent.Values[4]) { } }
            public class Oven : Icon { public Oven() : base("Oven", IconVariant.Regular, OvenSizeAndContent.Values[2]) { } }
            public class PaintBrush : Icon { public PaintBrush() : base("PaintBrush", IconVariant.Regular, PaintBrushSizeAndContent.Values[3]) { } }
            public class PanelLeft : Icon { public PanelLeft() : base("PanelLeft", IconVariant.Regular, PanelLeftSizeAndContent.Values[4]) { } }
            public class PanelLeftAdd : Icon { public PanelLeftAdd() : base("PanelLeftAdd", IconVariant.Regular, PanelLeftAddSizeAndContent.Values[4]) { } }
            public class PanelLeftHeader : Icon { public PanelLeftHeader() : base("PanelLeftHeader", IconVariant.Regular, PanelLeftHeaderSizeAndContent.Values[4]) { } }
            public class PanelLeftHeaderAdd : Icon { public PanelLeftHeaderAdd() : base("PanelLeftHeaderAdd", IconVariant.Regular, PanelLeftHeaderAddSizeAndContent.Values[4]) { } }
            public class PanelLeftText : Icon { public PanelLeftText() : base("PanelLeftText", IconVariant.Regular, PanelLeftTextSizeAndContent.Values[4]) { } }
            public class PanelLeftTextAdd : Icon { public PanelLeftTextAdd() : base("PanelLeftTextAdd", IconVariant.Regular, PanelLeftTextAddSizeAndContent.Values[4]) { } }
            public class PanelLeftTextDismiss : Icon { public PanelLeftTextDismiss() : base("PanelLeftTextDismiss", IconVariant.Regular, PanelLeftTextDismissSizeAndContent.Values[4]) { } }
            public class PanelRight : Icon { public PanelRight() : base("PanelRight", IconVariant.Regular, PanelRightSizeAndContent.Values[4]) { } }
            public class Patient : Icon { public Patient() : base("Patient", IconVariant.Regular, PatientSizeAndContent.Values[2]) { } }
            public class Pause : Icon { public Pause() : base("Pause", IconVariant.Regular, PauseSizeAndContent.Values[5]) { } }
            public class PauseCircle : Icon { public PauseCircle() : base("PauseCircle", IconVariant.Regular, PauseCircleSizeAndContent.Values[2]) { } }
            public class Payment : Icon { public Payment() : base("Payment", IconVariant.Regular, PaymentSizeAndContent.Values[4]) { } }
            public class Pen : Icon { public Pen() : base("Pen", IconVariant.Regular, PenSizeAndContent.Values[4]) { } }
            public class PenDismiss : Icon { public PenDismiss() : base("PenDismiss", IconVariant.Regular, PenDismissSizeAndContent.Values[4]) { } }
            public class PenOff : Icon { public PenOff() : base("PenOff", IconVariant.Regular, PenOffSizeAndContent.Values[4]) { } }
            public class PenProhibited : Icon { public PenProhibited() : base("PenProhibited", IconVariant.Regular, PenProhibitedSizeAndContent.Values[4]) { } }
            public class PenSparkle : Icon { public PenSparkle() : base("PenSparkle", IconVariant.Regular, PenSparkleSizeAndContent.Values[4]) { } }
            public class Pentagon : Icon { public Pentagon() : base("Pentagon", IconVariant.Regular, PentagonSizeAndContent.Values[1]) { } }
            public class People : Icon { public People() : base("People", IconVariant.Regular, PeopleSizeAndContent.Values[5]) { } }
            public class PeopleCommunity : Icon { public PeopleCommunity() : base("PeopleCommunity", IconVariant.Regular, PeopleCommunitySizeAndContent.Values[4]) { } }
            public class PeopleList : Icon { public PeopleList() : base("PeopleList", IconVariant.Regular, PeopleListSizeAndContent.Values[4]) { } }
            public class PeopleStar : Icon { public PeopleStar() : base("PeopleStar", IconVariant.Regular, PeopleStarSizeAndContent.Values[4]) { } }
            public class PeopleTeam : Icon { public PeopleTeam() : base("PeopleTeam", IconVariant.Regular, PeopleTeamSizeAndContent.Values[4]) { } }
            public class PeopleTeamDelete : Icon { public PeopleTeamDelete() : base("PeopleTeamDelete", IconVariant.Regular, PeopleTeamDeleteSizeAndContent.Values[4]) { } }
            public class Person : Icon { public Person() : base("Person", IconVariant.Regular, PersonSizeAndContent.Values[5]) { } }
            public class Person5 : Icon { public Person5() : base("Person5", IconVariant.Regular, Person5SizeAndContent.Values[1]) { } }
            public class Person6 : Icon { public Person6() : base("Person6", IconVariant.Regular, Person6SizeAndContent.Values[1]) { } }
            public class PersonAdd : Icon { public PersonAdd() : base("PersonAdd", IconVariant.Regular, PersonAddSizeAndContent.Values[4]) { } }
            public class PersonArrowBack : Icon { public PersonArrowBack() : base("PersonArrowBack", IconVariant.Regular, PersonArrowBackSizeAndContent.Values[4]) { } }
            public class PersonBoard : Icon { public PersonBoard() : base("PersonBoard", IconVariant.Regular, PersonBoardSizeAndContent.Values[4]) { } }
            public class PersonCircle : Icon { public PersonCircle() : base("PersonCircle", IconVariant.Regular, PersonCircleSizeAndContent.Values[4]) { } }
            public class PersonFeedback : Icon { public PersonFeedback() : base("PersonFeedback", IconVariant.Regular, PersonFeedbackSizeAndContent.Values[4]) { } }
            public class PersonLink : Icon { public PersonLink() : base("PersonLink", IconVariant.Regular, PersonLinkSizeAndContent.Values[4]) { } }
            public class PersonSearch : Icon { public PersonSearch() : base("PersonSearch", IconVariant.Regular, PersonSearchSizeAndContent.Values[3]) { } }
            public class PersonSquare : Icon { public PersonSquare() : base("PersonSquare", IconVariant.Regular, PersonSquareSizeAndContent.Values[3]) { } }
            public class PersonSquareCheckmark : Icon { public PersonSquareCheckmark() : base("PersonSquareCheckmark", IconVariant.Regular, PersonSquareCheckmarkSizeAndContent.Values[3]) { } }
            public class PersonStar : Icon { public PersonStar() : base("PersonStar", IconVariant.Regular, PersonStarSizeAndContent.Values[4]) { } }
            public class PersonSync : Icon { public PersonSync() : base("PersonSync", IconVariant.Regular, PersonSyncSizeAndContent.Values[4]) { } }
            public class PersonTag : Icon { public PersonTag() : base("PersonTag", IconVariant.Regular, PersonTagSizeAndContent.Values[3]) { } }
            public class PersonWarning : Icon { public PersonWarning() : base("PersonWarning", IconVariant.Regular, PersonWarningSizeAndContent.Values[4]) { } }
            public class Phone : Icon { public Phone() : base("Phone", IconVariant.Regular, PhoneSizeAndContent.Values[5]) { } }
            public class PhoneDesktop : Icon { public PhoneDesktop() : base("PhoneDesktop", IconVariant.Regular, PhoneDesktopSizeAndContent.Values[4]) { } }
            public class PhoneLaptop : Icon { public PhoneLaptop() : base("PhoneLaptop", IconVariant.Regular, PhoneLaptopSizeAndContent.Values[3]) { } }
            public class Pin : Icon { public Pin() : base("Pin", IconVariant.Regular, PinSizeAndContent.Values[5]) { } }
            public class PinOff : Icon { public PinOff() : base("PinOff", IconVariant.Regular, PinOffSizeAndContent.Values[4]) { } }
            public class Pipeline : Icon { public Pipeline() : base("Pipeline", IconVariant.Regular, PipelineSizeAndContent.Values[2]) { } }
            public class PipelineAdd : Icon { public PipelineAdd() : base("PipelineAdd", IconVariant.Regular, PipelineAddSizeAndContent.Values[1]) { } }
            public class Play : Icon { public Play() : base("Play", IconVariant.Regular, PlaySizeAndContent.Values[5]) { } }
            public class Poll : Icon { public Poll() : base("Poll", IconVariant.Regular, PollSizeAndContent.Values[3]) { } }
            public class Premium : Icon { public Premium() : base("Premium", IconVariant.Regular, PremiumSizeAndContent.Values[5]) { } }
            public class Previous : Icon { public Previous() : base("Previous", IconVariant.Regular, PreviousSizeAndContent.Values[4]) { } }
            public class Print : Icon { public Print() : base("Print", IconVariant.Regular, PrintSizeAndContent.Values[4]) { } }
            public class Prohibited : Icon { public Prohibited() : base("Prohibited", IconVariant.Regular, ProhibitedSizeAndContent.Values[5]) { } }
            public class Pulse : Icon { public Pulse() : base("Pulse", IconVariant.Regular, PulseSizeAndContent.Values[3]) { } }
            public class Question : Icon { public Question() : base("Question", IconVariant.Regular, QuestionSizeAndContent.Values[4]) { } }
            public class QuestionCircle : Icon { public QuestionCircle() : base("QuestionCircle", IconVariant.Regular, QuestionCircleSizeAndContent.Values[5]) { } }
            public class Receipt : Icon { public Receipt() : base("Receipt", IconVariant.Regular, ReceiptSizeAndContent.Values[4]) { } }
            public class Record : Icon { public Record() : base("Record", IconVariant.Regular, RecordSizeAndContent.Values[5]) { } }
            public class RecordStop : Icon { public RecordStop() : base("RecordStop", IconVariant.Regular, RecordStopSizeAndContent.Values[5]) { } }
            public class RectangleLandscape : Icon { public RectangleLandscape() : base("RectangleLandscape", IconVariant.Regular, RectangleLandscapeSizeAndContent.Values[5]) { } }
            public class RectangleLandscapeSparkle : Icon { public RectangleLandscapeSparkle() : base("RectangleLandscapeSparkle", IconVariant.Regular, RectangleLandscapeSparkleSizeAndContent.Values[4]) { } }
            public class Recycle : Icon { public Recycle() : base("Recycle", IconVariant.Regular, RecycleSizeAndContent.Values[1]) { } }
            public class RemixAdd : Icon { public RemixAdd() : base("RemixAdd", IconVariant.Regular, RemixAddSizeAndContent.Values[3]) { } }
            public class Resize : Icon { public Resize() : base("Resize", IconVariant.Regular, ResizeSizeAndContent.Values[4]) { } }
            public class Rhombus : Icon { public Rhombus() : base("Rhombus", IconVariant.Regular, RhombusSizeAndContent.Values[4]) { } }
            public class Ribbon : Icon { public Ribbon() : base("Ribbon", IconVariant.Regular, RibbonSizeAndContent.Values[4]) { } }
            public class RibbonOff : Icon { public RibbonOff() : base("RibbonOff", IconVariant.Regular, RibbonOffSizeAndContent.Values[4]) { } }
            public class RoadCone : Icon { public RoadCone() : base("RoadCone", IconVariant.Regular, RoadConeSizeAndContent.Values[4]) { } }
            public class Ruler : Icon { public Ruler() : base("Ruler", IconVariant.Regular, RulerSizeAndContent.Values[4]) { } }
            public class Scales : Icon { public Scales() : base("Scales", IconVariant.Regular, ScalesSizeAndContent.Values[2]) { } }
            public class ScanDash : Icon { public ScanDash() : base("ScanDash", IconVariant.Regular, ScanDashSizeAndContent.Values[5]) { } }
            public class Script : Icon { public Script() : base("Script", IconVariant.Regular, ScriptSizeAndContent.Values[3]) { } }
            public class Search : Icon { public Search() : base("Search", IconVariant.Regular, SearchSizeAndContent.Values[5]) { } }
            public class Send : Icon { public Send() : base("Send", IconVariant.Regular, SendSizeAndContent.Values[4]) { } }
            public class SendBeaker : Icon { public SendBeaker() : base("SendBeaker", IconVariant.Regular, SendBeakerSizeAndContent.Values[4]) { } }
            public class Settings : Icon { public Settings() : base("Settings", IconVariant.Regular, SettingsSizeAndContent.Values[4]) { } }
            public class ShapeOrganic : Icon { public ShapeOrganic() : base("ShapeOrganic", IconVariant.Regular, ShapeOrganicSizeAndContent.Values[4]) { } }
            public class Shapes : Icon { public Shapes() : base("Shapes", IconVariant.Regular, ShapesSizeAndContent.Values[4]) { } }
            public class ShareAndroid : Icon { public ShareAndroid() : base("ShareAndroid", IconVariant.Regular, ShareAndroidSizeAndContent.Values[3]) { } }
            public class Shield : Icon { public Shield() : base("Shield", IconVariant.Regular, ShieldSizeAndContent.Values[5]) { } }
            public class ShieldQuestion : Icon { public ShieldQuestion() : base("ShieldQuestion", IconVariant.Regular, ShieldQuestionSizeAndContent.Values[3]) { } }
            public class Shifts : Icon { public Shifts() : base("Shifts", IconVariant.Regular, ShiftsSizeAndContent.Values[4]) { } }
            public class Showerhead : Icon { public Showerhead() : base("Showerhead", IconVariant.Regular, ShowerheadSizeAndContent.Values[2]) { } }
            public class Signature : Icon { public Signature() : base("Signature", IconVariant.Regular, SignatureSizeAndContent.Values[4]) { } }
            public class SkipBack10 : Icon { public SkipBack10() : base("SkipBack10", IconVariant.Regular, SkipBack10SizeAndContent.Values[3]) { } }
            public class SkipForward10 : Icon { public SkipForward10() : base("SkipForward10", IconVariant.Regular, SkipForward10SizeAndContent.Values[3]) { } }
            public class SkipForward30 : Icon { public SkipForward30() : base("SkipForward30", IconVariant.Regular, SkipForward30SizeAndContent.Values[3]) { } }
            public class SlideAdd : Icon { public SlideAdd() : base("SlideAdd", IconVariant.Regular, SlideAddSizeAndContent.Values[4]) { } }
            public class SlideMicrophone : Icon { public SlideMicrophone() : base("SlideMicrophone", IconVariant.Regular, SlideMicrophoneSizeAndContent.Values[2]) { } }
            public class SlideSearch : Icon { public SlideSearch() : base("SlideSearch", IconVariant.Regular, SlideSearchSizeAndContent.Values[4]) { } }
            public class SlideTextMultiple : Icon { public SlideTextMultiple() : base("SlideTextMultiple", IconVariant.Regular, SlideTextMultipleSizeAndContent.Values[3]) { } }
            public class SlideTextPerson : Icon { public SlideTextPerson() : base("SlideTextPerson", IconVariant.Regular, SlideTextPersonSizeAndContent.Values[4]) { } }
            public class SlideTextSparkle : Icon { public SlideTextSparkle() : base("SlideTextSparkle", IconVariant.Regular, SlideTextSparkleSizeAndContent.Values[4]) { } }
            public class Space3d : Icon { public Space3d() : base("Space3d", IconVariant.Regular, Space3dSizeAndContent.Values[4]) { } }
            public class Sparkle : Icon { public Sparkle() : base("Sparkle", IconVariant.Regular, SparkleSizeAndContent.Values[4]) { } }
            public class SparkleCircle : Icon { public SparkleCircle() : base("SparkleCircle", IconVariant.Regular, SparkleCircleSizeAndContent.Values[4]) { } }
            public class Speaker0 : Icon { public Speaker0() : base("Speaker0", IconVariant.Regular, Speaker0SizeAndContent.Values[4]) { } }
            public class Speaker1 : Icon { public Speaker1() : base("Speaker1", IconVariant.Regular, Speaker1SizeAndContent.Values[4]) { } }
            public class Speaker2 : Icon { public Speaker2() : base("Speaker2", IconVariant.Regular, Speaker2SizeAndContent.Values[4]) { } }
            public class SpeakerMute : Icon { public SpeakerMute() : base("SpeakerMute", IconVariant.Regular, SpeakerMuteSizeAndContent.Values[4]) { } }
            public class SplitHorizontal : Icon { public SplitHorizontal() : base("SplitHorizontal", IconVariant.Regular, SplitHorizontalSizeAndContent.Values[5]) { } }
            public class SplitVertical : Icon { public SplitVertical() : base("SplitVertical", IconVariant.Regular, SplitVerticalSizeAndContent.Values[5]) { } }
            public class Square : Icon { public Square() : base("Square", IconVariant.Regular, SquareSizeAndContent.Values[5]) { } }
            public class SquareArrowForward : Icon { public SquareArrowForward() : base("SquareArrowForward", IconVariant.Regular, SquareArrowForwardSizeAndContent.Values[4]) { } }
            public class SquareHint : Icon { public SquareHint() : base("SquareHint", IconVariant.Regular, SquareHintSizeAndContent.Values[4]) { } }
            public class SquareHintHexagon : Icon { public SquareHintHexagon() : base("SquareHintHexagon", IconVariant.Regular, SquareHintHexagonSizeAndContent.Values[5]) { } }
            public class SquareHintSparkles : Icon { public SquareHintSparkles() : base("SquareHintSparkles", IconVariant.Regular, SquareHintSparklesSizeAndContent.Values[4]) { } }
            public class SquareMultiple : Icon { public SquareMultiple() : base("SquareMultiple", IconVariant.Regular, SquareMultipleSizeAndContent.Values[4]) { } }
            public class Stack : Icon { public Stack() : base("Stack", IconVariant.Regular, StackSizeAndContent.Values[3]) { } }
            public class Star : Icon { public Star() : base("Star", IconVariant.Regular, StarSizeAndContent.Values[5]) { } }
            public class StarEmphasis : Icon { public StarEmphasis() : base("StarEmphasis", IconVariant.Regular, StarEmphasisSizeAndContent.Values[3]) { } }
            public class Stream : Icon { public Stream() : base("Stream", IconVariant.Regular, StreamSizeAndContent.Values[2]) { } }
            public class SubtractCircle : Icon { public SubtractCircle() : base("SubtractCircle", IconVariant.Regular, SubtractCircleSizeAndContent.Values[5]) { } }
            public class SubtractParentheses : Icon { public SubtractParentheses() : base("SubtractParentheses", IconVariant.Regular, SubtractParenthesesSizeAndContent.Values[4]) { } }
            public class SwimmingPool : Icon { public SwimmingPool() : base("SwimmingPool", IconVariant.Regular, SwimmingPoolSizeAndContent.Values[2]) { } }
            public class Table : Icon { public Table() : base("Table", IconVariant.Regular, TableSizeAndContent.Values[4]) { } }
            public class TableBottomRow : Icon { public TableBottomRow() : base("TableBottomRow", IconVariant.Regular, TableBottomRowSizeAndContent.Values[4]) { } }
            public class TableDefault : Icon { public TableDefault() : base("TableDefault", IconVariant.Regular, TableDefaultSizeAndContent.Values[0]) { } }
            public class TableLock : Icon { public TableLock() : base("TableLock", IconVariant.Regular, TableLockSizeAndContent.Values[4]) { } }
            public class TableSimple : Icon { public TableSimple() : base("TableSimple", IconVariant.Regular, TableSimpleSizeAndContent.Values[4]) { } }
            public class TableSimpleCheckmark : Icon { public TableSimpleCheckmark() : base("TableSimpleCheckmark", IconVariant.Regular, TableSimpleCheckmarkSizeAndContent.Values[4]) { } }
            public class TableSimpleExclude : Icon { public TableSimpleExclude() : base("TableSimpleExclude", IconVariant.Regular, TableSimpleExcludeSizeAndContent.Values[4]) { } }
            public class TableSimpleInclude : Icon { public TableSimpleInclude() : base("TableSimpleInclude", IconVariant.Regular, TableSimpleIncludeSizeAndContent.Values[4]) { } }
            public class Tablet : Icon { public Tablet() : base("Tablet", IconVariant.Regular, TabletSizeAndContent.Values[4]) { } }
            public class Tag : Icon { public Tag() : base("Tag", IconVariant.Regular, TagSizeAndContent.Values[4]) { } }
            public class TagLock : Icon { public TagLock() : base("TagLock", IconVariant.Regular, TagLockSizeAndContent.Values[3]) { } }
            public class TagQuestionMark : Icon { public TagQuestionMark() : base("TagQuestionMark", IconVariant.Regular, TagQuestionMarkSizeAndContent.Values[3]) { } }
            public class TapDouble : Icon { public TapDouble() : base("TapDouble", IconVariant.Regular, TapDoubleSizeAndContent.Values[2]) { } }
            public class TapSingle : Icon { public TapSingle() : base("TapSingle", IconVariant.Regular, TapSingleSizeAndContent.Values[2]) { } }
            public class Target : Icon { public Target() : base("Target", IconVariant.Regular, TargetSizeAndContent.Values[3]) { } }
            public class TeardropBottomRight : Icon { public TeardropBottomRight() : base("TeardropBottomRight", IconVariant.Regular, TeardropBottomRightSizeAndContent.Values[4]) { } }
            public class Temperature : Icon { public Temperature() : base("Temperature", IconVariant.Regular, TemperatureSizeAndContent.Values[3]) { } }
            public class TetrisApp : Icon { public TetrisApp() : base("TetrisApp", IconVariant.Regular, TetrisAppSizeAndContent.Values[4]) { } }
            public class Text : Icon { public Text() : base("Text", IconVariant.Regular, TextSizeAndContent.Values[2]) { } }
            public class TextAbcUnderlineDouble : Icon { public TextAbcUnderlineDouble() : base("TextAbcUnderlineDouble", IconVariant.Regular, TextAbcUnderlineDoubleSizeAndContent.Values[0]) { } }
            public class TextArrowDownRightColumn : Icon { public TextArrowDownRightColumn() : base("TextArrowDownRightColumn", IconVariant.Regular, TextArrowDownRightColumnSizeAndContent.Values[4]) { } }
            public class TextBulletListSquare : Icon { public TextBulletListSquare() : base("TextBulletListSquare", IconVariant.Regular, TextBulletListSquareSizeAndContent.Values[3]) { } }
            public class TextBulletListSquarePerson : Icon { public TextBulletListSquarePerson() : base("TextBulletListSquarePerson", IconVariant.Regular, TextBulletListSquarePersonSizeAndContent.Values[1]) { } }
            public class TextDensity : Icon { public TextDensity() : base("TextDensity", IconVariant.Regular, TextDensitySizeAndContent.Values[4]) { } }
            public class TextDescription : Icon { public TextDescription() : base("TextDescription", IconVariant.Regular, TextDescriptionSizeAndContent.Values[4]) { } }
            public class TextEditStyleCharacterA : Icon { public TextEditStyleCharacterA() : base("TextEditStyleCharacterA", IconVariant.Regular, TextEditStyleCharacterASizeAndContent.Values[0]) { } }
            public class TextGrammarLightning : Icon { public TextGrammarLightning() : base("TextGrammarLightning", IconVariant.Regular, TextGrammarLightningSizeAndContent.Values[4]) { } }
            public class TextT : Icon { public TextT() : base("TextT", IconVariant.Regular, TextTSizeAndContent.Values[5]) { } }
            public class Timer : Icon { public Timer() : base("Timer", IconVariant.Regular, TimerSizeAndContent.Values[5]) { } }
            public class Triangle : Icon { public Triangle() : base("Triangle", IconVariant.Regular, TriangleSizeAndContent.Values[5]) { } }
            public class TriangleDown : Icon { public TriangleDown() : base("TriangleDown", IconVariant.Regular, TriangleDownSizeAndContent.Values[4]) { } }
            public class TriangleLeft : Icon { public TriangleLeft() : base("TriangleLeft", IconVariant.Regular, TriangleLeftSizeAndContent.Values[3]) { } }
            public class TriangleRight : Icon { public TriangleRight() : base("TriangleRight", IconVariant.Regular, TriangleRightSizeAndContent.Values[3]) { } }
            public class Trophy : Icon { public Trophy() : base("Trophy", IconVariant.Regular, TrophySizeAndContent.Values[4]) { } }
            public class TrophyLock : Icon { public TrophyLock() : base("TrophyLock", IconVariant.Regular, TrophyLockSizeAndContent.Values[4]) { } }
            public class TrophyOff : Icon { public TrophyOff() : base("TrophyOff", IconVariant.Regular, TrophyOffSizeAndContent.Values[4]) { } }
            public class VehicleCar : Icon { public VehicleCar() : base("VehicleCar", IconVariant.Regular, VehicleCarSizeAndContent.Values[4]) { } }
            public class VehicleCarCollision : Icon { public VehicleCarCollision() : base("VehicleCarCollision", IconVariant.Regular, VehicleCarCollisionSizeAndContent.Values[4]) { } }
            public class VehicleCarParking : Icon { public VehicleCarParking() : base("VehicleCarParking", IconVariant.Regular, VehicleCarParkingSizeAndContent.Values[3]) { } }
            public class Video : Icon { public Video() : base("Video", IconVariant.Regular, VideoSizeAndContent.Values[4]) { } }
            public class VideoBackgroundEffect : Icon { public VideoBackgroundEffect() : base("VideoBackgroundEffect", IconVariant.Regular, VideoBackgroundEffectSizeAndContent.Values[4]) { } }
            public class VideoBackgroundEffectHorizontal : Icon { public VideoBackgroundEffectHorizontal() : base("VideoBackgroundEffectHorizontal", IconVariant.Regular, VideoBackgroundEffectHorizontalSizeAndContent.Values[4]) { } }
            public class VideoChat : Icon { public VideoChat() : base("VideoChat", IconVariant.Regular, VideoChatSizeAndContent.Values[4]) { } }
            public class VideoClip : Icon { public VideoClip() : base("VideoClip", IconVariant.Regular, VideoClipSizeAndContent.Values[4]) { } }
            public class VideoOff : Icon { public VideoOff() : base("VideoOff", IconVariant.Regular, VideoOffSizeAndContent.Values[3]) { } }
            public class VideoPeople : Icon { public VideoPeople() : base("VideoPeople", IconVariant.Regular, VideoPeopleSizeAndContent.Values[0]) { } }
            public class VideoPerson : Icon { public VideoPerson() : base("VideoPerson", IconVariant.Regular, VideoPersonSizeAndContent.Values[5]) { } }
            public class VideoPersonCall : Icon { public VideoPersonCall() : base("VideoPersonCall", IconVariant.Regular, VideoPersonCallSizeAndContent.Values[3]) { } }
            public class VideoPersonClock : Icon { public VideoPersonClock() : base("VideoPersonClock", IconVariant.Regular, VideoPersonClockSizeAndContent.Values[4]) { } }
            public class Voicemail : Icon { public Voicemail() : base("Voicemail", IconVariant.Regular, VoicemailSizeAndContent.Values[4]) { } }
            public class VoicemailShield : Icon { public VoicemailShield() : base("VoicemailShield", IconVariant.Regular, VoicemailShieldSizeAndContent.Values[3]) { } }
            public class Wallet : Icon { public Wallet() : base("Wallet", IconVariant.Regular, WalletSizeAndContent.Values[4]) { } }
            public class WalletCreditCard : Icon { public WalletCreditCard() : base("WalletCreditCard", IconVariant.Regular, WalletCreditCardSizeAndContent.Values[3]) { } }
            public class Warning : Icon { public Warning() : base("Warning", IconVariant.Regular, WarningSizeAndContent.Values[5]) { } }
            public class Washer : Icon { public Washer() : base("Washer", IconVariant.Regular, WasherSizeAndContent.Values[2]) { } }
            public class Water : Icon { public Water() : base("Water", IconVariant.Regular, WaterSizeAndContent.Values[3]) { } }
            public class WeatherSnowflake : Icon { public WeatherSnowflake() : base("WeatherSnowflake", IconVariant.Regular, WeatherSnowflakeSizeAndContent.Values[2]) { } }
            public class WeatherSunny : Icon { public WeatherSunny() : base("WeatherSunny", IconVariant.Regular, WeatherSunnySizeAndContent.Values[4]) { } }
            public class Window : Icon { public Window() : base("Window", IconVariant.Regular, WindowSizeAndContent.Values[4]) { } }
            public class WindowApps : Icon { public WindowApps() : base("WindowApps", IconVariant.Regular, WindowAppsSizeAndContent.Values[4]) { } }
            public class WindowDatabase : Icon { public WindowDatabase() : base("WindowDatabase", IconVariant.Regular, WindowDatabaseSizeAndContent.Values[2]) { } }
            public class WindowWrench : Icon { public WindowWrench() : base("WindowWrench", IconVariant.Regular, WindowWrenchSizeAndContent.Values[4]) { } }
            public class WrenchScrewdriver : Icon { public WrenchScrewdriver() : base("WrenchScrewdriver", IconVariant.Regular, WrenchScrewdriverSizeAndContent.Values[2]) { } }
            public class XboxController : Icon { public XboxController() : base("XboxController", IconVariant.Regular, XboxControllerSizeAndContent.Values[4]) { } }
            public class XboxControllerError : Icon { public XboxControllerError() : base("XboxControllerError", IconVariant.Regular, XboxControllerErrorSizeAndContent.Values[2]) { } }
        }
    }
}

#pragma warning restore 1591
