// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

#pragma warning disable 1591

namespace Microsoft.FluentUI.AspNetCore.Components;

public static partial class Icons
{
    public static partial class Regular
    {
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public static partial class Size12
        {
            public class Add : Icon { public Add() : base("Add", IconVariant.Regular, AddSizeAndContent.Values[0]) { } }
            public class AddCircle : Icon { public AddCircle() : base("AddCircle", IconVariant.Regular, AddCircleSizeAndContent.Values[0]) { } }
            public class Alert : Icon { public Alert() : base("Alert", IconVariant.Regular, AlertSizeAndContent.Values[0]) { } }
            public class AlertSnooze : Icon { public AlertSnooze() : base("AlertSnooze", IconVariant.Regular, AlertSnoozeSizeAndContent.Values[0]) { } }
            public class ArrowBidirectionalUpDown : Icon { public ArrowBidirectionalUpDown() : base("ArrowBidirectionalUpDown", IconVariant.Regular, ArrowBidirectionalUpDownSizeAndContent.Values[0]) { } }
            public class ArrowCircleDown : Icon { public ArrowCircleDown() : base("ArrowCircleDown", IconVariant.Regular, ArrowCircleDownSizeAndContent.Values[0]) { } }
            public class ArrowCircleLeft : Icon { public ArrowCircleLeft() : base("ArrowCircleLeft", IconVariant.Regular, ArrowCircleLeftSizeAndContent.Values[0]) { } }
            public class ArrowCircleRight : Icon { public ArrowCircleRight() : base("ArrowCircleRight", IconVariant.Regular, ArrowCircleRightSizeAndContent.Values[0]) { } }
            public class ArrowCircleUp : Icon { public ArrowCircleUp() : base("ArrowCircleUp", IconVariant.Regular, ArrowCircleUpSizeAndContent.Values[0]) { } }
            public class ArrowClockwise : Icon { public ArrowClockwise() : base("ArrowClockwise", IconVariant.Regular, ArrowClockwiseSizeAndContent.Values[0]) { } }
            public class ArrowCounterclockwise : Icon { public ArrowCounterclockwise() : base("ArrowCounterclockwise", IconVariant.Regular, ArrowCounterclockwiseSizeAndContent.Values[0]) { } }
            public class ArrowDown : Icon { public ArrowDown() : base("ArrowDown", IconVariant.Regular, ArrowDownSizeAndContent.Values[0]) { } }
            public class ArrowLeft : Icon { public ArrowLeft() : base("ArrowLeft", IconVariant.Regular, ArrowLeftSizeAndContent.Values[0]) { } }
            public class ArrowNext : Icon { public ArrowNext() : base("ArrowNext", IconVariant.Regular, ArrowNextSizeAndContent.Values[0]) { } }
            public class ArrowPrevious : Icon { public ArrowPrevious() : base("ArrowPrevious", IconVariant.Regular, ArrowPreviousSizeAndContent.Values[0]) { } }
            public class ArrowRight : Icon { public ArrowRight() : base("ArrowRight", IconVariant.Regular, ArrowRightSizeAndContent.Values[0]) { } }
            public class ArrowStepIn : Icon { public ArrowStepIn() : base("ArrowStepIn", IconVariant.Regular, ArrowStepInSizeAndContent.Values[0]) { } }
            public class ArrowStepInLeft : Icon { public ArrowStepInLeft() : base("ArrowStepInLeft", IconVariant.Regular, ArrowStepInLeftSizeAndContent.Values[0]) { } }
            public class ArrowStepInRight : Icon { public ArrowStepInRight() : base("ArrowStepInRight", IconVariant.Regular, ArrowStepInRightSizeAndContent.Values[0]) { } }
            public class ArrowStepOut : Icon { public ArrowStepOut() : base("ArrowStepOut", IconVariant.Regular, ArrowStepOutSizeAndContent.Values[0]) { } }
            public class ArrowSync : Icon { public ArrowSync() : base("ArrowSync", IconVariant.Regular, ArrowSyncSizeAndContent.Values[0]) { } }
            public class ArrowSyncOff : Icon { public ArrowSyncOff() : base("ArrowSyncOff", IconVariant.Regular, ArrowSyncOffSizeAndContent.Values[0]) { } }
            public class ArrowTrending : Icon { public ArrowTrending() : base("ArrowTrending", IconVariant.Regular, ArrowTrendingSizeAndContent.Values[0]) { } }
            public class ArrowUp : Icon { public ArrowUp() : base("ArrowUp", IconVariant.Regular, ArrowUpSizeAndContent.Values[0]) { } }
            public class Attach : Icon { public Attach() : base("Attach", IconVariant.Regular, AttachSizeAndContent.Values[0]) { } }
            public class Backpack : Icon { public Backpack() : base("Backpack", IconVariant.Regular, BackpackSizeAndContent.Values[0]) { } }
            public class Balloon : Icon { public Balloon() : base("Balloon", IconVariant.Regular, BalloonSizeAndContent.Values[0]) { } }
            public class BezierCurveSquare : Icon { public BezierCurveSquare() : base("BezierCurveSquare", IconVariant.Regular, BezierCurveSquareSizeAndContent.Values[0]) { } }
            public class Briefcase : Icon { public Briefcase() : base("Briefcase", IconVariant.Regular, BriefcaseSizeAndContent.Values[0]) { } }
            public class BuildingMosque : Icon { public BuildingMosque() : base("BuildingMosque", IconVariant.Regular, BuildingMosqueSizeAndContent.Values[0]) { } }
            public class Calendar : Icon { public Calendar() : base("Calendar", IconVariant.Regular, CalendarSizeAndContent.Values[0]) { } }
            public class CalendarLtr : Icon { public CalendarLtr() : base("CalendarLtr", IconVariant.Regular, CalendarLtrSizeAndContent.Values[0]) { } }
            public class CalendarRtl : Icon { public CalendarRtl() : base("CalendarRtl", IconVariant.Regular, CalendarRtlSizeAndContent.Values[0]) { } }
            public class Call : Icon { public Call() : base("Call", IconVariant.Regular, CallSizeAndContent.Values[0]) { } }
            public class CallEnd : Icon { public CallEnd() : base("CallEnd", IconVariant.Regular, CallEndSizeAndContent.Values[0]) { } }
            public class CallMissed : Icon { public CallMissed() : base("CallMissed", IconVariant.Regular, CallMissedSizeAndContent.Values[0]) { } }
            public class CaretDown : Icon { public CaretDown() : base("CaretDown", IconVariant.Regular, CaretDownSizeAndContent.Values[0]) { } }
            public class CaretDownRight : Icon { public CaretDownRight() : base("CaretDownRight", IconVariant.Regular, CaretDownRightSizeAndContent.Values[0]) { } }
            public class CaretLeft : Icon { public CaretLeft() : base("CaretLeft", IconVariant.Regular, CaretLeftSizeAndContent.Values[0]) { } }
            public class CaretRight : Icon { public CaretRight() : base("CaretRight", IconVariant.Regular, CaretRightSizeAndContent.Values[0]) { } }
            public class CaretUp : Icon { public CaretUp() : base("CaretUp", IconVariant.Regular, CaretUpSizeAndContent.Values[0]) { } }
            public class ChannelShare : Icon { public ChannelShare() : base("ChannelShare", IconVariant.Regular, ChannelShareSizeAndContent.Values[0]) { } }
            public class Chat : Icon { public Chat() : base("Chat", IconVariant.Regular, ChatSizeAndContent.Values[0]) { } }
            public class ChatEmpty : Icon { public ChatEmpty() : base("ChatEmpty", IconVariant.Regular, ChatEmptySizeAndContent.Values[0]) { } }
            public class CheckboxUnchecked : Icon { public CheckboxUnchecked() : base("CheckboxUnchecked", IconVariant.Regular, CheckboxUncheckedSizeAndContent.Values[0]) { } }
            public class Checkmark : Icon { public Checkmark() : base("Checkmark", IconVariant.Regular, CheckmarkSizeAndContent.Values[0]) { } }
            public class CheckmarkCircle : Icon { public CheckmarkCircle() : base("CheckmarkCircle", IconVariant.Regular, CheckmarkCircleSizeAndContent.Values[0]) { } }
            public class ChevronCircleDown : Icon { public ChevronCircleDown() : base("ChevronCircleDown", IconVariant.Regular, ChevronCircleDownSizeAndContent.Values[0]) { } }
            public class ChevronCircleLeft : Icon { public ChevronCircleLeft() : base("ChevronCircleLeft", IconVariant.Regular, ChevronCircleLeftSizeAndContent.Values[0]) { } }
            public class ChevronCircleRight : Icon { public ChevronCircleRight() : base("ChevronCircleRight", IconVariant.Regular, ChevronCircleRightSizeAndContent.Values[0]) { } }
            public class ChevronCircleUp : Icon { public ChevronCircleUp() : base("ChevronCircleUp", IconVariant.Regular, ChevronCircleUpSizeAndContent.Values[0]) { } }
            public class ChevronDown : Icon { public ChevronDown() : base("ChevronDown", IconVariant.Regular, ChevronDownSizeAndContent.Values[0]) { } }
            public class ChevronLeft : Icon { public ChevronLeft() : base("ChevronLeft", IconVariant.Regular, ChevronLeftSizeAndContent.Values[0]) { } }
            public class ChevronRight : Icon { public ChevronRight() : base("ChevronRight", IconVariant.Regular, ChevronRightSizeAndContent.Values[0]) { } }
            public class ChevronUp : Icon { public ChevronUp() : base("ChevronUp", IconVariant.Regular, ChevronUpSizeAndContent.Values[0]) { } }
            public class Circle : Icon { public Circle() : base("Circle", IconVariant.Regular, CircleSizeAndContent.Values[0]) { } }
            public class CircleHalfFill : Icon { public CircleHalfFill() : base("CircleHalfFill", IconVariant.Regular, CircleHalfFillSizeAndContent.Values[0]) { } }
            public class CircleLine : Icon { public CircleLine() : base("CircleLine", IconVariant.Regular, CircleLineSizeAndContent.Values[0]) { } }
            public class Clock : Icon { public Clock() : base("Clock", IconVariant.Regular, ClockSizeAndContent.Values[0]) { } }
            public class Comment : Icon { public Comment() : base("Comment", IconVariant.Regular, CommentSizeAndContent.Values[0]) { } }
            public class CommentAdd : Icon { public CommentAdd() : base("CommentAdd", IconVariant.Regular, CommentAddSizeAndContent.Values[0]) { } }
            public class CommentArrowLeft : Icon { public CommentArrowLeft() : base("CommentArrowLeft", IconVariant.Regular, CommentArrowLeftSizeAndContent.Values[0]) { } }
            public class CommentArrowRight : Icon { public CommentArrowRight() : base("CommentArrowRight", IconVariant.Regular, CommentArrowRightSizeAndContent.Values[0]) { } }
            public class CommentCheckmark : Icon { public CommentCheckmark() : base("CommentCheckmark", IconVariant.Regular, CommentCheckmarkSizeAndContent.Values[0]) { } }
            public class Couch : Icon { public Couch() : base("Couch", IconVariant.Regular, CouchSizeAndContent.Values[0]) { } }
            public class Cube : Icon { public Cube() : base("Cube", IconVariant.Regular, CubeSizeAndContent.Values[0]) { } }
            public class Delete : Icon { public Delete() : base("Delete", IconVariant.Regular, DeleteSizeAndContent.Values[0]) { } }
            public class Dentist : Icon { public Dentist() : base("Dentist", IconVariant.Regular, DentistSizeAndContent.Values[0]) { } }
            public class Dismiss : Icon { public Dismiss() : base("Dismiss", IconVariant.Regular, DismissSizeAndContent.Values[0]) { } }
            public class DismissCircle : Icon { public DismissCircle() : base("DismissCircle", IconVariant.Regular, DismissCircleSizeAndContent.Values[0]) { } }
            public class Doctor : Icon { public Doctor() : base("Doctor", IconVariant.Regular, DoctorSizeAndContent.Values[0]) { } }
            public class Drop : Icon { public Drop() : base("Drop", IconVariant.Regular, DropSizeAndContent.Values[0]) { } }
            public class Edit : Icon { public Edit() : base("Edit", IconVariant.Regular, EditSizeAndContent.Values[0]) { } }
            public class EqualOff : Icon { public EqualOff() : base("EqualOff", IconVariant.Regular, EqualOffSizeAndContent.Values[0]) { } }
            public class ErrorCircle : Icon { public ErrorCircle() : base("ErrorCircle", IconVariant.Regular, ErrorCircleSizeAndContent.Values[0]) { } }
            public class Eye : Icon { public Eye() : base("Eye", IconVariant.Regular, EyeSizeAndContent.Values[0]) { } }
            public class Filter : Icon { public Filter() : base("Filter", IconVariant.Regular, FilterSizeAndContent.Values[0]) { } }
            public class FoodCake : Icon { public FoodCake() : base("FoodCake", IconVariant.Regular, FoodCakeSizeAndContent.Values[0]) { } }
            public class Glance : Icon { public Glance() : base("Glance", IconVariant.Regular, GlanceSizeAndContent.Values[0]) { } }
            public class GlanceDefault : Icon { public GlanceDefault() : base("GlanceDefault", IconVariant.Regular, GlanceDefaultSizeAndContent.Values[0]) { } }
            public class GlanceHorizontal : Icon { public GlanceHorizontal() : base("GlanceHorizontal", IconVariant.Regular, GlanceHorizontalSizeAndContent.Values[0]) { } }
            public class Globe : Icon { public Globe() : base("Globe", IconVariant.Regular, GlobeSizeAndContent.Values[0]) { } }
            public class HatGraduation : Icon { public HatGraduation() : base("HatGraduation", IconVariant.Regular, HatGraduationSizeAndContent.Values[0]) { } }
            public class Heart : Icon { public Heart() : base("Heart", IconVariant.Regular, HeartSizeAndContent.Values[0]) { } }
            public class Hexagon : Icon { public Hexagon() : base("Hexagon", IconVariant.Regular, HexagonSizeAndContent.Values[0]) { } }
            public class HexagonThree : Icon { public HexagonThree() : base("HexagonThree", IconVariant.Regular, HexagonThreeSizeAndContent.Values[0]) { } }
            public class Home : Icon { public Home() : base("Home", IconVariant.Regular, HomeSizeAndContent.Values[0]) { } }
            public class Important : Icon { public Important() : base("Important", IconVariant.Regular, ImportantSizeAndContent.Values[0]) { } }
            public class Info : Icon { public Info() : base("Info", IconVariant.Regular, InfoSizeAndContent.Values[0]) { } }
            public class Link : Icon { public Link() : base("Link", IconVariant.Regular, LinkSizeAndContent.Values[0]) { } }
            public class LinkSquare : Icon { public LinkSquare() : base("LinkSquare", IconVariant.Regular, LinkSquareSizeAndContent.Values[0]) { } }
            public class Location : Icon { public Location() : base("Location", IconVariant.Regular, LocationSizeAndContent.Values[0]) { } }
            public class LocationArrow : Icon { public LocationArrow() : base("LocationArrow", IconVariant.Regular, LocationArrowSizeAndContent.Values[0]) { } }
            public class LockClosed : Icon { public LockClosed() : base("LockClosed", IconVariant.Regular, LockClosedSizeAndContent.Values[0]) { } }
            public class LockOpen : Icon { public LockOpen() : base("LockOpen", IconVariant.Regular, LockOpenSizeAndContent.Values[0]) { } }
            public class Mail : Icon { public Mail() : base("Mail", IconVariant.Regular, MailSizeAndContent.Values[0]) { } }
            public class MailUnread : Icon { public MailUnread() : base("MailUnread", IconVariant.Regular, MailUnreadSizeAndContent.Values[0]) { } }
            public class Mention : Icon { public Mention() : base("Mention", IconVariant.Regular, MentionSizeAndContent.Values[0]) { } }
            public class MicOff : Icon { public MicOff() : base("MicOff", IconVariant.Regular, MicOffSizeAndContent.Values[0]) { } }
            public class MyLocation : Icon { public MyLocation() : base("MyLocation", IconVariant.Regular, MyLocationSizeAndContent.Values[0]) { } }
            public class Notepad : Icon { public Notepad() : base("Notepad", IconVariant.Regular, NotepadSizeAndContent.Values[0]) { } }
            public class Open : Icon { public Open() : base("Open", IconVariant.Regular, OpenSizeAndContent.Values[0]) { } }
            public class Organization : Icon { public Organization() : base("Organization", IconVariant.Regular, OrganizationSizeAndContent.Values[0]) { } }
            public class Pause : Icon { public Pause() : base("Pause", IconVariant.Regular, PauseSizeAndContent.Values[0]) { } }
            public class People : Icon { public People() : base("People", IconVariant.Regular, PeopleSizeAndContent.Values[0]) { } }
            public class Person : Icon { public Person() : base("Person", IconVariant.Regular, PersonSizeAndContent.Values[0]) { } }
            public class PersonCircle : Icon { public PersonCircle() : base("PersonCircle", IconVariant.Regular, PersonCircleSizeAndContent.Values[0]) { } }
            public class Phone : Icon { public Phone() : base("Phone", IconVariant.Regular, PhoneSizeAndContent.Values[0]) { } }
            public class Pin : Icon { public Pin() : base("Pin", IconVariant.Regular, PinSizeAndContent.Values[0]) { } }
            public class Play : Icon { public Play() : base("Play", IconVariant.Regular, PlaySizeAndContent.Values[0]) { } }
            public class Premium : Icon { public Premium() : base("Premium", IconVariant.Regular, PremiumSizeAndContent.Values[0]) { } }
            public class PresenceAvailable : Icon { public PresenceAvailable() : base("PresenceAvailable", IconVariant.Regular, PresenceAvailableSizeAndContent.Values[1]) { } }
            public class PresenceAway : Icon { public PresenceAway() : base("PresenceAway", IconVariant.Regular, PresenceAwaySizeAndContent.Values[1]) { } }
            public class PresenceBlocked : Icon { public PresenceBlocked() : base("PresenceBlocked", IconVariant.Regular, PresenceBlockedSizeAndContent.Values[1]) { } }
            public class PresenceDnd : Icon { public PresenceDnd() : base("PresenceDnd", IconVariant.Regular, PresenceDndSizeAndContent.Values[1]) { } }
            public class PresenceOffline : Icon { public PresenceOffline() : base("PresenceOffline", IconVariant.Regular, PresenceOfflineSizeAndContent.Values[1]) { } }
            public class PresenceOof : Icon { public PresenceOof() : base("PresenceOof", IconVariant.Regular, PresenceOofSizeAndContent.Values[1]) { } }
            public class PresenceUnknown : Icon { public PresenceUnknown() : base("PresenceUnknown", IconVariant.Regular, PresenceUnknownSizeAndContent.Values[1]) { } }
            public class Prohibited : Icon { public Prohibited() : base("Prohibited", IconVariant.Regular, ProhibitedSizeAndContent.Values[0]) { } }
            public class QuestionCircle : Icon { public QuestionCircle() : base("QuestionCircle", IconVariant.Regular, QuestionCircleSizeAndContent.Values[0]) { } }
            public class Record : Icon { public Record() : base("Record", IconVariant.Regular, RecordSizeAndContent.Values[0]) { } }
            public class RecordStop : Icon { public RecordStop() : base("RecordStop", IconVariant.Regular, RecordStopSizeAndContent.Values[0]) { } }
            public class RectangleLandscape : Icon { public RectangleLandscape() : base("RectangleLandscape", IconVariant.Regular, RectangleLandscapeSizeAndContent.Values[0]) { } }
            public class Reward : Icon { public Reward() : base("Reward", IconVariant.Regular, RewardSizeAndContent.Values[0]) { } }
            public class Ribbon : Icon { public Ribbon() : base("Ribbon", IconVariant.Regular, RibbonSizeAndContent.Values[0]) { } }
            public class RibbonOff : Icon { public RibbonOff() : base("RibbonOff", IconVariant.Regular, RibbonOffSizeAndContent.Values[0]) { } }
            public class ScanDash : Icon { public ScanDash() : base("ScanDash", IconVariant.Regular, ScanDashSizeAndContent.Values[0]) { } }
            public class Search : Icon { public Search() : base("Search", IconVariant.Regular, SearchSizeAndContent.Values[0]) { } }
            public class Server : Icon { public Server() : base("Server", IconVariant.Regular, ServerSizeAndContent.Values[0]) { } }
            public class Shield : Icon { public Shield() : base("Shield", IconVariant.Regular, ShieldSizeAndContent.Values[0]) { } }
            public class SlashForward : Icon { public SlashForward() : base("SlashForward", IconVariant.Regular, SlashForwardSizeAndContent.Values[0]) { } }
            public class SplitHorizontal : Icon { public SplitHorizontal() : base("SplitHorizontal", IconVariant.Regular, SplitHorizontalSizeAndContent.Values[0]) { } }
            public class SplitVertical : Icon { public SplitVertical() : base("SplitVertical", IconVariant.Regular, SplitVerticalSizeAndContent.Values[0]) { } }
            public class Square : Icon { public Square() : base("Square", IconVariant.Regular, SquareSizeAndContent.Values[0]) { } }
            public class SquareHintHexagon : Icon { public SquareHintHexagon() : base("SquareHintHexagon", IconVariant.Regular, SquareHintHexagonSizeAndContent.Values[0]) { } }
            public class SquareShadow : Icon { public SquareShadow() : base("SquareShadow", IconVariant.Regular, SquareShadowSizeAndContent.Values[0]) { } }
            public class Star : Icon { public Star() : base("Star", IconVariant.Regular, StarSizeAndContent.Values[0]) { } }
            public class StarHalf : Icon { public StarHalf() : base("StarHalf", IconVariant.Regular, StarHalfSizeAndContent.Values[0]) { } }
            public class StarOff : Icon { public StarOff() : base("StarOff", IconVariant.Regular, StarOffSizeAndContent.Values[0]) { } }
            public class StarOneQuarter : Icon { public StarOneQuarter() : base("StarOneQuarter", IconVariant.Regular, StarOneQuarterSizeAndContent.Values[0]) { } }
            public class StarThreeQuarter : Icon { public StarThreeQuarter() : base("StarThreeQuarter", IconVariant.Regular, StarThreeQuarterSizeAndContent.Values[0]) { } }
            public class Status : Icon { public Status() : base("Status", IconVariant.Regular, StatusSizeAndContent.Values[0]) { } }
            public class Sticker : Icon { public Sticker() : base("Sticker", IconVariant.Regular, StickerSizeAndContent.Values[0]) { } }
            public class Subtract : Icon { public Subtract() : base("Subtract", IconVariant.Regular, SubtractSizeAndContent.Values[0]) { } }
            public class SubtractCircle : Icon { public SubtractCircle() : base("SubtractCircle", IconVariant.Regular, SubtractCircleSizeAndContent.Values[0]) { } }
            public class Tablet : Icon { public Tablet() : base("Tablet", IconVariant.Regular, TabletSizeAndContent.Values[0]) { } }
            public class Tent : Icon { public Tent() : base("Tent", IconVariant.Regular, TentSizeAndContent.Values[0]) { } }
            public class Text : Icon { public Text() : base("Text", IconVariant.Regular, TextSizeAndContent.Values[0]) { } }
            public class TextT : Icon { public TextT() : base("TextT", IconVariant.Regular, TextTSizeAndContent.Values[0]) { } }
            public class Timer : Icon { public Timer() : base("Timer", IconVariant.Regular, TimerSizeAndContent.Values[0]) { } }
            public class Toolbox : Icon { public Toolbox() : base("Toolbox", IconVariant.Regular, ToolboxSizeAndContent.Values[0]) { } }
            public class Triangle : Icon { public Triangle() : base("Triangle", IconVariant.Regular, TriangleSizeAndContent.Values[0]) { } }
            public class TriangleDown : Icon { public TriangleDown() : base("TriangleDown", IconVariant.Regular, TriangleDownSizeAndContent.Values[0]) { } }
            public class TriangleLeft : Icon { public TriangleLeft() : base("TriangleLeft", IconVariant.Regular, TriangleLeftSizeAndContent.Values[0]) { } }
            public class TriangleRight : Icon { public TriangleRight() : base("TriangleRight", IconVariant.Regular, TriangleRightSizeAndContent.Values[0]) { } }
            public class VideoPerson : Icon { public VideoPerson() : base("VideoPerson", IconVariant.Regular, VideoPersonSizeAndContent.Values[0]) { } }
            public class Warning : Icon { public Warning() : base("Warning", IconVariant.Regular, WarningSizeAndContent.Values[0]) { } }
        }
    }
}

#pragma warning restore 1591
