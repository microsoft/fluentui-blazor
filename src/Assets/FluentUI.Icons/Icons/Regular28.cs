// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

#pragma warning disable 1591

namespace Microsoft.FluentUI.AspNetCore.Components;

public static partial class Icons
{
    public static partial class Regular
    {
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public static partial class Size28
        {
            public class Accessibility : Icon { public Accessibility() : base("Accessibility", IconVariant.Regular, AccessibilitySizeAndContent.Values[3]) { } }
            public class AccessibilityCheckmark : Icon { public AccessibilityCheckmark() : base("AccessibilityCheckmark", IconVariant.Regular, AccessibilityCheckmarkSizeAndContent.Values[2]) { } }
            public class Add : Icon { public Add() : base("Add", IconVariant.Regular, AddSizeAndContent.Values[4]) { } }
            public class AddCircle : Icon { public AddCircle() : base("AddCircle", IconVariant.Regular, AddCircleSizeAndContent.Values[4]) { } }
            public class AddSquare : Icon { public AddSquare() : base("AddSquare", IconVariant.Regular, AddSquareSizeAndContent.Values[3]) { } }
            public class AddSubtractCircle : Icon { public AddSubtractCircle() : base("AddSubtractCircle", IconVariant.Regular, AddSubtractCircleSizeAndContent.Values[3]) { } }
            public class Alert : Icon { public Alert() : base("Alert", IconVariant.Regular, AlertSizeAndContent.Values[4]) { } }
            public class AlertOff : Icon { public AlertOff() : base("AlertOff", IconVariant.Regular, AlertOffSizeAndContent.Values[3]) { } }
            public class AlignBottom : Icon { public AlignBottom() : base("AlignBottom", IconVariant.Regular, AlignBottomSizeAndContent.Values[3]) { } }
            public class AlignCenterHorizontal : Icon { public AlignCenterHorizontal() : base("AlignCenterHorizontal", IconVariant.Regular, AlignCenterHorizontalSizeAndContent.Values[3]) { } }
            public class AlignCenterVertical : Icon { public AlignCenterVertical() : base("AlignCenterVertical", IconVariant.Regular, AlignCenterVerticalSizeAndContent.Values[3]) { } }
            public class AlignLeft : Icon { public AlignLeft() : base("AlignLeft", IconVariant.Regular, AlignLeftSizeAndContent.Values[3]) { } }
            public class AlignRight : Icon { public AlignRight() : base("AlignRight", IconVariant.Regular, AlignRightSizeAndContent.Values[3]) { } }
            public class AlignTop : Icon { public AlignTop() : base("AlignTop", IconVariant.Regular, AlignTopSizeAndContent.Values[3]) { } }
            public class AnimalCat : Icon { public AnimalCat() : base("AnimalCat", IconVariant.Regular, AnimalCatSizeAndContent.Values[3]) { } }
            public class AnimalRabbit : Icon { public AnimalRabbit() : base("AnimalRabbit", IconVariant.Regular, AnimalRabbitSizeAndContent.Values[3]) { } }
            public class AnimalTurtle : Icon { public AnimalTurtle() : base("AnimalTurtle", IconVariant.Regular, AnimalTurtleSizeAndContent.Values[3]) { } }
            public class AppFolder : Icon { public AppFolder() : base("AppFolder", IconVariant.Regular, AppFolderSizeAndContent.Values[3]) { } }
            public class ApprovalsApp : Icon { public ApprovalsApp() : base("ApprovalsApp", IconVariant.Regular, ApprovalsAppSizeAndContent.Values[3]) { } }
            public class Apps : Icon { public Apps() : base("Apps", IconVariant.Regular, AppsSizeAndContent.Values[3]) { } }
            public class AppsAddIn : Icon { public AppsAddIn() : base("AppsAddIn", IconVariant.Regular, AppsAddInSizeAndContent.Values[3]) { } }
            public class Archive : Icon { public Archive() : base("Archive", IconVariant.Regular, ArchiveSizeAndContent.Values[3]) { } }
            public class ArchiveArrowBack : Icon { public ArchiveArrowBack() : base("ArchiveArrowBack", IconVariant.Regular, ArchiveArrowBackSizeAndContent.Values[3]) { } }
            public class ArchiveSettings : Icon { public ArchiveSettings() : base("ArchiveSettings", IconVariant.Regular, ArchiveSettingsSizeAndContent.Values[3]) { } }
            public class ArrowBidirectionalLeftRight : Icon { public ArrowBidirectionalLeftRight() : base("ArrowBidirectionalLeftRight", IconVariant.Regular, ArrowBidirectionalLeftRightSizeAndContent.Values[3]) { } }
            public class ArrowCircleDown : Icon { public ArrowCircleDown() : base("ArrowCircleDown", IconVariant.Regular, ArrowCircleDownSizeAndContent.Values[4]) { } }
            public class ArrowCircleLeft : Icon { public ArrowCircleLeft() : base("ArrowCircleLeft", IconVariant.Regular, ArrowCircleLeftSizeAndContent.Values[4]) { } }
            public class ArrowCircleRight : Icon { public ArrowCircleRight() : base("ArrowCircleRight", IconVariant.Regular, ArrowCircleRightSizeAndContent.Values[4]) { } }
            public class ArrowCircleUp : Icon { public ArrowCircleUp() : base("ArrowCircleUp", IconVariant.Regular, ArrowCircleUpSizeAndContent.Values[4]) { } }
            public class ArrowClockwise : Icon { public ArrowClockwise() : base("ArrowClockwise", IconVariant.Regular, ArrowClockwiseSizeAndContent.Values[4]) { } }
            public class ArrowCounterclockwise : Icon { public ArrowCounterclockwise() : base("ArrowCounterclockwise", IconVariant.Regular, ArrowCounterclockwiseSizeAndContent.Values[4]) { } }
            public class ArrowCurveDownLeft : Icon { public ArrowCurveDownLeft() : base("ArrowCurveDownLeft", IconVariant.Regular, ArrowCurveDownLeftSizeAndContent.Values[3]) { } }
            public class ArrowDown : Icon { public ArrowDown() : base("ArrowDown", IconVariant.Regular, ArrowDownSizeAndContent.Values[4]) { } }
            public class ArrowDownload : Icon { public ArrowDownload() : base("ArrowDownload", IconVariant.Regular, ArrowDownloadSizeAndContent.Values[3]) { } }
            public class ArrowDownloadOff : Icon { public ArrowDownloadOff() : base("ArrowDownloadOff", IconVariant.Regular, ArrowDownloadOffSizeAndContent.Values[3]) { } }
            public class ArrowForward : Icon { public ArrowForward() : base("ArrowForward", IconVariant.Regular, ArrowForwardSizeAndContent.Values[3]) { } }
            public class ArrowHookDownLeft : Icon { public ArrowHookDownLeft() : base("ArrowHookDownLeft", IconVariant.Regular, ArrowHookDownLeftSizeAndContent.Values[3]) { } }
            public class ArrowHookDownRight : Icon { public ArrowHookDownRight() : base("ArrowHookDownRight", IconVariant.Regular, ArrowHookDownRightSizeAndContent.Values[3]) { } }
            public class ArrowHookUpLeft : Icon { public ArrowHookUpLeft() : base("ArrowHookUpLeft", IconVariant.Regular, ArrowHookUpLeftSizeAndContent.Values[3]) { } }
            public class ArrowHookUpRight : Icon { public ArrowHookUpRight() : base("ArrowHookUpRight", IconVariant.Regular, ArrowHookUpRightSizeAndContent.Values[3]) { } }
            public class ArrowLeft : Icon { public ArrowLeft() : base("ArrowLeft", IconVariant.Regular, ArrowLeftSizeAndContent.Values[4]) { } }
            public class ArrowMaximize : Icon { public ArrowMaximize() : base("ArrowMaximize", IconVariant.Regular, ArrowMaximizeSizeAndContent.Values[3]) { } }
            public class ArrowMinimize : Icon { public ArrowMinimize() : base("ArrowMinimize", IconVariant.Regular, ArrowMinimizeSizeAndContent.Values[3]) { } }
            public class ArrowOutlineDownLeft : Icon { public ArrowOutlineDownLeft() : base("ArrowOutlineDownLeft", IconVariant.Regular, ArrowOutlineDownLeftSizeAndContent.Values[3]) { } }
            public class ArrowRedo : Icon { public ArrowRedo() : base("ArrowRedo", IconVariant.Regular, ArrowRedoSizeAndContent.Values[3]) { } }
            public class ArrowReply : Icon { public ArrowReply() : base("ArrowReply", IconVariant.Regular, ArrowReplySizeAndContent.Values[3]) { } }
            public class ArrowReplyAll : Icon { public ArrowReplyAll() : base("ArrowReplyAll", IconVariant.Regular, ArrowReplyAllSizeAndContent.Values[3]) { } }
            public class ArrowRight : Icon { public ArrowRight() : base("ArrowRight", IconVariant.Regular, ArrowRightSizeAndContent.Values[4]) { } }
            public class ArrowShuffle : Icon { public ArrowShuffle() : base("ArrowShuffle", IconVariant.Regular, ArrowShuffleSizeAndContent.Values[3]) { } }
            public class ArrowShuffleOff : Icon { public ArrowShuffleOff() : base("ArrowShuffleOff", IconVariant.Regular, ArrowShuffleOffSizeAndContent.Values[3]) { } }
            public class ArrowSort : Icon { public ArrowSort() : base("ArrowSort", IconVariant.Regular, ArrowSortSizeAndContent.Values[3]) { } }
            public class ArrowStepIn : Icon { public ArrowStepIn() : base("ArrowStepIn", IconVariant.Regular, ArrowStepInSizeAndContent.Values[4]) { } }
            public class ArrowStepInDiagonalDownLeft : Icon { public ArrowStepInDiagonalDownLeft() : base("ArrowStepInDiagonalDownLeft", IconVariant.Regular, ArrowStepInDiagonalDownLeftSizeAndContent.Values[3]) { } }
            public class ArrowStepInLeft : Icon { public ArrowStepInLeft() : base("ArrowStepInLeft", IconVariant.Regular, ArrowStepInLeftSizeAndContent.Values[4]) { } }
            public class ArrowStepInRight : Icon { public ArrowStepInRight() : base("ArrowStepInRight", IconVariant.Regular, ArrowStepInRightSizeAndContent.Values[4]) { } }
            public class ArrowStepOut : Icon { public ArrowStepOut() : base("ArrowStepOut", IconVariant.Regular, ArrowStepOutSizeAndContent.Values[4]) { } }
            public class ArrowSwap : Icon { public ArrowSwap() : base("ArrowSwap", IconVariant.Regular, ArrowSwapSizeAndContent.Values[3]) { } }
            public class ArrowUndo : Icon { public ArrowUndo() : base("ArrowUndo", IconVariant.Regular, ArrowUndoSizeAndContent.Values[3]) { } }
            public class ArrowUp : Icon { public ArrowUp() : base("ArrowUp", IconVariant.Regular, ArrowUpSizeAndContent.Values[4]) { } }
            public class Backpack : Icon { public Backpack() : base("Backpack", IconVariant.Regular, BackpackSizeAndContent.Values[4]) { } }
            public class BackpackAdd : Icon { public BackpackAdd() : base("BackpackAdd", IconVariant.Regular, BackpackAddSizeAndContent.Values[2]) { } }
            public class Beach : Icon { public Beach() : base("Beach", IconVariant.Regular, BeachSizeAndContent.Values[3]) { } }
            public class Bluetooth : Icon { public Bluetooth() : base("Bluetooth", IconVariant.Regular, BluetoothSizeAndContent.Values[3]) { } }
            public class Blur : Icon { public Blur() : base("Blur", IconVariant.Regular, BlurSizeAndContent.Values[3]) { } }
            public class Board : Icon { public Board() : base("Board", IconVariant.Regular, BoardSizeAndContent.Values[3]) { } }
            public class BoardSplit : Icon { public BoardSplit() : base("BoardSplit", IconVariant.Regular, BoardSplitSizeAndContent.Values[3]) { } }
            public class BookAdd : Icon { public BookAdd() : base("BookAdd", IconVariant.Regular, BookAddSizeAndContent.Values[2]) { } }
            public class BookContacts : Icon { public BookContacts() : base("BookContacts", IconVariant.Regular, BookContactsSizeAndContent.Values[2]) { } }
            public class BookDefault : Icon { public BookDefault() : base("BookDefault", IconVariant.Regular, BookDefaultSizeAndContent.Values[0]) { } }
            public class Bookmark : Icon { public Bookmark() : base("Bookmark", IconVariant.Regular, BookmarkSizeAndContent.Values[3]) { } }
            public class BookmarkMultiple : Icon { public BookmarkMultiple() : base("BookmarkMultiple", IconVariant.Regular, BookmarkMultipleSizeAndContent.Values[3]) { } }
            public class BookOpen : Icon { public BookOpen() : base("BookOpen", IconVariant.Regular, BookOpenSizeAndContent.Values[3]) { } }
            public class BookOpenMicrophone : Icon { public BookOpenMicrophone() : base("BookOpenMicrophone", IconVariant.Regular, BookOpenMicrophoneSizeAndContent.Values[2]) { } }
            public class BowlChopsticks : Icon { public BowlChopsticks() : base("BowlChopsticks", IconVariant.Regular, BowlChopsticksSizeAndContent.Values[3]) { } }
            public class Braces : Icon { public Braces() : base("Braces", IconVariant.Regular, BracesSizeAndContent.Values[3]) { } }
            public class BreakoutRoom : Icon { public BreakoutRoom() : base("BreakoutRoom", IconVariant.Regular, BreakoutRoomSizeAndContent.Values[2]) { } }
            public class Briefcase : Icon { public Briefcase() : base("Briefcase", IconVariant.Regular, BriefcaseSizeAndContent.Values[4]) { } }
            public class BriefcaseOff : Icon { public BriefcaseOff() : base("BriefcaseOff", IconVariant.Regular, BriefcaseOffSizeAndContent.Values[3]) { } }
            public class BrightnessHigh : Icon { public BrightnessHigh() : base("BrightnessHigh", IconVariant.Regular, BrightnessHighSizeAndContent.Values[3]) { } }
            public class BrightnessLow : Icon { public BrightnessLow() : base("BrightnessLow", IconVariant.Regular, BrightnessLowSizeAndContent.Values[3]) { } }
            public class Broom : Icon { public Broom() : base("Broom", IconVariant.Regular, BroomSizeAndContent.Values[3]) { } }
            public class BuildingBank : Icon { public BuildingBank() : base("BuildingBank", IconVariant.Regular, BuildingBankSizeAndContent.Values[3]) { } }
            public class BuildingBankLink : Icon { public BuildingBankLink() : base("BuildingBankLink", IconVariant.Regular, BuildingBankLinkSizeAndContent.Values[3]) { } }
            public class BuildingFactory : Icon { public BuildingFactory() : base("BuildingFactory", IconVariant.Regular, BuildingFactorySizeAndContent.Values[3]) { } }
            public class BuildingMosque : Icon { public BuildingMosque() : base("BuildingMosque", IconVariant.Regular, BuildingMosqueSizeAndContent.Values[4]) { } }
            public class Calendar : Icon { public Calendar() : base("Calendar", IconVariant.Regular, CalendarSizeAndContent.Values[4]) { } }
            public class Calendar3Day : Icon { public Calendar3Day() : base("Calendar3Day", IconVariant.Regular, Calendar3DaySizeAndContent.Values[3]) { } }
            public class CalendarAdd : Icon { public CalendarAdd() : base("CalendarAdd", IconVariant.Regular, CalendarAddSizeAndContent.Values[3]) { } }
            public class CalendarAgenda : Icon { public CalendarAgenda() : base("CalendarAgenda", IconVariant.Regular, CalendarAgendaSizeAndContent.Values[2]) { } }
            public class CalendarArrowCounterclockwise : Icon { public CalendarArrowCounterclockwise() : base("CalendarArrowCounterclockwise", IconVariant.Regular, CalendarArrowCounterclockwiseSizeAndContent.Values[3]) { } }
            public class CalendarCheckmark : Icon { public CalendarCheckmark() : base("CalendarCheckmark", IconVariant.Regular, CalendarCheckmarkSizeAndContent.Values[3]) { } }
            public class CalendarDataBar : Icon { public CalendarDataBar() : base("CalendarDataBar", IconVariant.Regular, CalendarDataBarSizeAndContent.Values[3]) { } }
            public class CalendarDate : Icon { public CalendarDate() : base("CalendarDate", IconVariant.Regular, CalendarDateSizeAndContent.Values[2]) { } }
            public class CalendarDay : Icon { public CalendarDay() : base("CalendarDay", IconVariant.Regular, CalendarDaySizeAndContent.Values[3]) { } }
            public class CalendarEmpty : Icon { public CalendarEmpty() : base("CalendarEmpty", IconVariant.Regular, CalendarEmptySizeAndContent.Values[3]) { } }
            public class CalendarLock : Icon { public CalendarLock() : base("CalendarLock", IconVariant.Regular, CalendarLockSizeAndContent.Values[3]) { } }
            public class CalendarLtr : Icon { public CalendarLtr() : base("CalendarLtr", IconVariant.Regular, CalendarLtrSizeAndContent.Values[4]) { } }
            public class CalendarMonth : Icon { public CalendarMonth() : base("CalendarMonth", IconVariant.Regular, CalendarMonthSizeAndContent.Values[2]) { } }
            public class CalendarMultiple : Icon { public CalendarMultiple() : base("CalendarMultiple", IconVariant.Regular, CalendarMultipleSizeAndContent.Values[3]) { } }
            public class CalendarPlay : Icon { public CalendarPlay() : base("CalendarPlay", IconVariant.Regular, CalendarPlaySizeAndContent.Values[3]) { } }
            public class CalendarRecord : Icon { public CalendarRecord() : base("CalendarRecord", IconVariant.Regular, CalendarRecordSizeAndContent.Values[3]) { } }
            public class CalendarReply : Icon { public CalendarReply() : base("CalendarReply", IconVariant.Regular, CalendarReplySizeAndContent.Values[3]) { } }
            public class CalendarRtl : Icon { public CalendarRtl() : base("CalendarRtl", IconVariant.Regular, CalendarRtlSizeAndContent.Values[4]) { } }
            public class CalendarSettings : Icon { public CalendarSettings() : base("CalendarSettings", IconVariant.Regular, CalendarSettingsSizeAndContent.Values[3]) { } }
            public class CalendarShield : Icon { public CalendarShield() : base("CalendarShield", IconVariant.Regular, CalendarShieldSizeAndContent.Values[3]) { } }
            public class CalendarToday : Icon { public CalendarToday() : base("CalendarToday", IconVariant.Regular, CalendarTodaySizeAndContent.Values[3]) { } }
            public class CalendarWeekStart : Icon { public CalendarWeekStart() : base("CalendarWeekStart", IconVariant.Regular, CalendarWeekStartSizeAndContent.Values[2]) { } }
            public class CalendarWorkWeek : Icon { public CalendarWorkWeek() : base("CalendarWorkWeek", IconVariant.Regular, CalendarWorkWeekSizeAndContent.Values[3]) { } }
            public class Call : Icon { public Call() : base("Call", IconVariant.Regular, CallSizeAndContent.Values[4]) { } }
            public class CallEnd : Icon { public CallEnd() : base("CallEnd", IconVariant.Regular, CallEndSizeAndContent.Values[4]) { } }
            public class CallForward : Icon { public CallForward() : base("CallForward", IconVariant.Regular, CallForwardSizeAndContent.Values[3]) { } }
            public class CallInbound : Icon { public CallInbound() : base("CallInbound", IconVariant.Regular, CallInboundSizeAndContent.Values[3]) { } }
            public class CallMissed : Icon { public CallMissed() : base("CallMissed", IconVariant.Regular, CallMissedSizeAndContent.Values[4]) { } }
            public class CallOutbound : Icon { public CallOutbound() : base("CallOutbound", IconVariant.Regular, CallOutboundSizeAndContent.Values[3]) { } }
            public class CallPark : Icon { public CallPark() : base("CallPark", IconVariant.Regular, CallParkSizeAndContent.Values[3]) { } }
            public class CallProhibited : Icon { public CallProhibited() : base("CallProhibited", IconVariant.Regular, CallProhibitedSizeAndContent.Values[3]) { } }
            public class Camera : Icon { public Camera() : base("Camera", IconVariant.Regular, CameraSizeAndContent.Values[3]) { } }
            public class CameraDome : Icon { public CameraDome() : base("CameraDome", IconVariant.Regular, CameraDomeSizeAndContent.Values[3]) { } }
            public class Cast : Icon { public Cast() : base("Cast", IconVariant.Regular, CastSizeAndContent.Values[2]) { } }
            public class CastMultiple : Icon { public CastMultiple() : base("CastMultiple", IconVariant.Regular, CastMultipleSizeAndContent.Values[2]) { } }
            public class Channel : Icon { public Channel() : base("Channel", IconVariant.Regular, ChannelSizeAndContent.Values[3]) { } }
            public class ChannelAdd : Icon { public ChannelAdd() : base("ChannelAdd", IconVariant.Regular, ChannelAddSizeAndContent.Values[3]) { } }
            public class ChannelAlert : Icon { public ChannelAlert() : base("ChannelAlert", IconVariant.Regular, ChannelAlertSizeAndContent.Values[3]) { } }
            public class ChannelArrowLeft : Icon { public ChannelArrowLeft() : base("ChannelArrowLeft", IconVariant.Regular, ChannelArrowLeftSizeAndContent.Values[3]) { } }
            public class ChannelDismiss : Icon { public ChannelDismiss() : base("ChannelDismiss", IconVariant.Regular, ChannelDismissSizeAndContent.Values[3]) { } }
            public class ChannelShare : Icon { public ChannelShare() : base("ChannelShare", IconVariant.Regular, ChannelShareSizeAndContent.Values[4]) { } }
            public class ChannelSubtract : Icon { public ChannelSubtract() : base("ChannelSubtract", IconVariant.Regular, ChannelSubtractSizeAndContent.Values[3]) { } }
            public class ChartPerson : Icon { public ChartPerson() : base("ChartPerson", IconVariant.Regular, ChartPersonSizeAndContent.Values[2]) { } }
            public class Chat : Icon { public Chat() : base("Chat", IconVariant.Regular, ChatSizeAndContent.Values[4]) { } }
            public class ChatAdd : Icon { public ChatAdd() : base("ChatAdd", IconVariant.Regular, ChatAddSizeAndContent.Values[3]) { } }
            public class ChatBubblesQuestion : Icon { public ChatBubblesQuestion() : base("ChatBubblesQuestion", IconVariant.Regular, ChatBubblesQuestionSizeAndContent.Values[3]) { } }
            public class ChatEmpty : Icon { public ChatEmpty() : base("ChatEmpty", IconVariant.Regular, ChatEmptySizeAndContent.Values[4]) { } }
            public class ChatLock : Icon { public ChatLock() : base("ChatLock", IconVariant.Regular, ChatLockSizeAndContent.Values[3]) { } }
            public class ChatMultiple : Icon { public ChatMultiple() : base("ChatMultiple", IconVariant.Regular, ChatMultipleSizeAndContent.Values[3]) { } }
            public class ChatMultipleHeart : Icon { public ChatMultipleHeart() : base("ChatMultipleHeart", IconVariant.Regular, ChatMultipleHeartSizeAndContent.Values[3]) { } }
            public class ChatSparkle : Icon { public ChatSparkle() : base("ChatSparkle", IconVariant.Regular, ChatSparkleSizeAndContent.Values[3]) { } }
            public class Checkmark : Icon { public Checkmark() : base("Checkmark", IconVariant.Regular, CheckmarkSizeAndContent.Values[4]) { } }
            public class ChevronCircleDown : Icon { public ChevronCircleDown() : base("ChevronCircleDown", IconVariant.Regular, ChevronCircleDownSizeAndContent.Values[4]) { } }
            public class ChevronCircleLeft : Icon { public ChevronCircleLeft() : base("ChevronCircleLeft", IconVariant.Regular, ChevronCircleLeftSizeAndContent.Values[4]) { } }
            public class ChevronCircleRight : Icon { public ChevronCircleRight() : base("ChevronCircleRight", IconVariant.Regular, ChevronCircleRightSizeAndContent.Values[4]) { } }
            public class ChevronCircleUp : Icon { public ChevronCircleUp() : base("ChevronCircleUp", IconVariant.Regular, ChevronCircleUpSizeAndContent.Values[4]) { } }
            public class ChevronDown : Icon { public ChevronDown() : base("ChevronDown", IconVariant.Regular, ChevronDownSizeAndContent.Values[4]) { } }
            public class ChevronLeft : Icon { public ChevronLeft() : base("ChevronLeft", IconVariant.Regular, ChevronLeftSizeAndContent.Values[4]) { } }
            public class ChevronRight : Icon { public ChevronRight() : base("ChevronRight", IconVariant.Regular, ChevronRightSizeAndContent.Values[4]) { } }
            public class ChevronUp : Icon { public ChevronUp() : base("ChevronUp", IconVariant.Regular, ChevronUpSizeAndContent.Values[4]) { } }
            public class Circle : Icon { public Circle() : base("Circle", IconVariant.Regular, CircleSizeAndContent.Values[4]) { } }
            public class CircleImage : Icon { public CircleImage() : base("CircleImage", IconVariant.Regular, CircleImageSizeAndContent.Values[3]) { } }
            public class Clipboard : Icon { public Clipboard() : base("Clipboard", IconVariant.Regular, ClipboardSizeAndContent.Values[3]) { } }
            public class ClipboardBrush : Icon { public ClipboardBrush() : base("ClipboardBrush", IconVariant.Regular, ClipboardBrushSizeAndContent.Values[3]) { } }
            public class ClipboardMathFormula : Icon { public ClipboardMathFormula() : base("ClipboardMathFormula", IconVariant.Regular, ClipboardMathFormulaSizeAndContent.Values[3]) { } }
            public class ClipboardNumber123 : Icon { public ClipboardNumber123() : base("ClipboardNumber123", IconVariant.Regular, ClipboardNumber123SizeAndContent.Values[3]) { } }
            public class Clock : Icon { public Clock() : base("Clock", IconVariant.Regular, ClockSizeAndContent.Values[4]) { } }
            public class ClosedCaption : Icon { public ClosedCaption() : base("ClosedCaption", IconVariant.Regular, ClosedCaptionSizeAndContent.Values[3]) { } }
            public class ClosedCaptionOff : Icon { public ClosedCaptionOff() : base("ClosedCaptionOff", IconVariant.Regular, ClosedCaptionOffSizeAndContent.Values[3]) { } }
            public class Cloud : Icon { public Cloud() : base("Cloud", IconVariant.Regular, CloudSizeAndContent.Values[3]) { } }
            public class CloudArchive : Icon { public CloudArchive() : base("CloudArchive", IconVariant.Regular, CloudArchiveSizeAndContent.Values[3]) { } }
            public class CloudArrowDown : Icon { public CloudArrowDown() : base("CloudArrowDown", IconVariant.Regular, CloudArrowDownSizeAndContent.Values[3]) { } }
            public class CloudArrowUp : Icon { public CloudArrowUp() : base("CloudArrowUp", IconVariant.Regular, CloudArrowUpSizeAndContent.Values[3]) { } }
            public class CloudBeaker : Icon { public CloudBeaker() : base("CloudBeaker", IconVariant.Regular, CloudBeakerSizeAndContent.Values[3]) { } }
            public class CloudCheckmark : Icon { public CloudCheckmark() : base("CloudCheckmark", IconVariant.Regular, CloudCheckmarkSizeAndContent.Values[3]) { } }
            public class CloudCube : Icon { public CloudCube() : base("CloudCube", IconVariant.Regular, CloudCubeSizeAndContent.Values[3]) { } }
            public class CloudDismiss : Icon { public CloudDismiss() : base("CloudDismiss", IconVariant.Regular, CloudDismissSizeAndContent.Values[3]) { } }
            public class CloudError : Icon { public CloudError() : base("CloudError", IconVariant.Regular, CloudErrorSizeAndContent.Values[3]) { } }
            public class CloudOff : Icon { public CloudOff() : base("CloudOff", IconVariant.Regular, CloudOffSizeAndContent.Values[3]) { } }
            public class CloudSync : Icon { public CloudSync() : base("CloudSync", IconVariant.Regular, CloudSyncSizeAndContent.Values[3]) { } }
            public class CloudWords : Icon { public CloudWords() : base("CloudWords", IconVariant.Regular, CloudWordsSizeAndContent.Values[3]) { } }
            public class Clover : Icon { public Clover() : base("Clover", IconVariant.Regular, CloverSizeAndContent.Values[3]) { } }
            public class CodeBlock : Icon { public CodeBlock() : base("CodeBlock", IconVariant.Regular, CodeBlockSizeAndContent.Values[3]) { } }
            public class ColorFill : Icon { public ColorFill() : base("ColorFill", IconVariant.Regular, ColorFillSizeAndContent.Values[3]) { } }
            public class ColorFillAccent : Icon { public ColorFillAccent() : base("ColorFillAccent", IconVariant.Regular, ColorFillAccentSizeAndContent.Values[3]) { } }
            public class Comment : Icon { public Comment() : base("Comment", IconVariant.Regular, CommentSizeAndContent.Values[4]) { } }
            public class CommentAdd : Icon { public CommentAdd() : base("CommentAdd", IconVariant.Regular, CommentAddSizeAndContent.Values[4]) { } }
            public class CommentArrowLeft : Icon { public CommentArrowLeft() : base("CommentArrowLeft", IconVariant.Regular, CommentArrowLeftSizeAndContent.Values[4]) { } }
            public class CommentArrowRight : Icon { public CommentArrowRight() : base("CommentArrowRight", IconVariant.Regular, CommentArrowRightSizeAndContent.Values[4]) { } }
            public class CommentCheckmark : Icon { public CommentCheckmark() : base("CommentCheckmark", IconVariant.Regular, CommentCheckmarkSizeAndContent.Values[4]) { } }
            public class CommentLink : Icon { public CommentLink() : base("CommentLink", IconVariant.Regular, CommentLinkSizeAndContent.Values[3]) { } }
            public class CommentMultiple : Icon { public CommentMultiple() : base("CommentMultiple", IconVariant.Regular, CommentMultipleSizeAndContent.Values[3]) { } }
            public class CommentMultipleCheckmark : Icon { public CommentMultipleCheckmark() : base("CommentMultipleCheckmark", IconVariant.Regular, CommentMultipleCheckmarkSizeAndContent.Values[3]) { } }
            public class CommentMultipleLink : Icon { public CommentMultipleLink() : base("CommentMultipleLink", IconVariant.Regular, CommentMultipleLinkSizeAndContent.Values[3]) { } }
            public class CommentOff : Icon { public CommentOff() : base("CommentOff", IconVariant.Regular, CommentOffSizeAndContent.Values[3]) { } }
            public class CompassNorthwest : Icon { public CompassNorthwest() : base("CompassNorthwest", IconVariant.Regular, CompassNorthwestSizeAndContent.Values[3]) { } }
            public class Compose : Icon { public Compose() : base("Compose", IconVariant.Regular, ComposeSizeAndContent.Values[3]) { } }
            public class ConferenceRoom : Icon { public ConferenceRoom() : base("ConferenceRoom", IconVariant.Regular, ConferenceRoomSizeAndContent.Values[3]) { } }
            public class ContactCard : Icon { public ContactCard() : base("ContactCard", IconVariant.Regular, ContactCardSizeAndContent.Values[3]) { } }
            public class ContactCardGroup : Icon { public ContactCardGroup() : base("ContactCardGroup", IconVariant.Regular, ContactCardGroupSizeAndContent.Values[3]) { } }
            public class ContactCardRibbon : Icon { public ContactCardRibbon() : base("ContactCardRibbon", IconVariant.Regular, ContactCardRibbonSizeAndContent.Values[3]) { } }
            public class ContentView : Icon { public ContentView() : base("ContentView", IconVariant.Regular, ContentViewSizeAndContent.Values[2]) { } }
            public class ContentViewGallery : Icon { public ContentViewGallery() : base("ContentViewGallery", IconVariant.Regular, ContentViewGallerySizeAndContent.Values[3]) { } }
            public class ContentViewGalleryLightning : Icon { public ContentViewGalleryLightning() : base("ContentViewGalleryLightning", IconVariant.Regular, ContentViewGalleryLightningSizeAndContent.Values[3]) { } }
            public class ContractDownLeft : Icon { public ContractDownLeft() : base("ContractDownLeft", IconVariant.Regular, ContractDownLeftSizeAndContent.Values[3]) { } }
            public class ContractUpRight : Icon { public ContractUpRight() : base("ContractUpRight", IconVariant.Regular, ContractUpRightSizeAndContent.Values[3]) { } }
            public class CreditCardClock : Icon { public CreditCardClock() : base("CreditCardClock", IconVariant.Regular, CreditCardClockSizeAndContent.Values[2]) { } }
            public class Crop : Icon { public Crop() : base("Crop", IconVariant.Regular, CropSizeAndContent.Values[3]) { } }
            public class CubeQuick : Icon { public CubeQuick() : base("CubeQuick", IconVariant.Regular, CubeQuickSizeAndContent.Values[3]) { } }
            public class CursorHover : Icon { public CursorHover() : base("CursorHover", IconVariant.Regular, CursorHoverSizeAndContent.Values[3]) { } }
            public class CursorHoverOff : Icon { public CursorHoverOff() : base("CursorHoverOff", IconVariant.Regular, CursorHoverOffSizeAndContent.Values[3]) { } }
            public class DataTrending : Icon { public DataTrending() : base("DataTrending", IconVariant.Regular, DataTrendingSizeAndContent.Values[3]) { } }
            public class Delete : Icon { public Delete() : base("Delete", IconVariant.Regular, DeleteSizeAndContent.Values[4]) { } }
            public class DeleteDismiss : Icon { public DeleteDismiss() : base("DeleteDismiss", IconVariant.Regular, DeleteDismissSizeAndContent.Values[2]) { } }
            public class Dentist : Icon { public Dentist() : base("Dentist", IconVariant.Regular, DentistSizeAndContent.Values[4]) { } }
            public class Desk : Icon { public Desk() : base("Desk", IconVariant.Regular, DeskSizeAndContent.Values[3]) { } }
            public class Desktop : Icon { public Desktop() : base("Desktop", IconVariant.Regular, DesktopSizeAndContent.Values[3]) { } }
            public class DesktopCursor : Icon { public DesktopCursor() : base("DesktopCursor", IconVariant.Regular, DesktopCursorSizeAndContent.Values[3]) { } }
            public class DesktopKeyboard : Icon { public DesktopKeyboard() : base("DesktopKeyboard", IconVariant.Regular, DesktopKeyboardSizeAndContent.Values[3]) { } }
            public class DesktopPulse : Icon { public DesktopPulse() : base("DesktopPulse", IconVariant.Regular, DesktopPulseSizeAndContent.Values[3]) { } }
            public class DeviceMeetingRoom : Icon { public DeviceMeetingRoom() : base("DeviceMeetingRoom", IconVariant.Regular, DeviceMeetingRoomSizeAndContent.Values[3]) { } }
            public class DeviceMeetingRoomRemote : Icon { public DeviceMeetingRoomRemote() : base("DeviceMeetingRoomRemote", IconVariant.Regular, DeviceMeetingRoomRemoteSizeAndContent.Values[3]) { } }
            public class Dialpad : Icon { public Dialpad() : base("Dialpad", IconVariant.Regular, DialpadSizeAndContent.Values[2]) { } }
            public class Diamond : Icon { public Diamond() : base("Diamond", IconVariant.Regular, DiamondSizeAndContent.Values[3]) { } }
            public class Dismiss : Icon { public Dismiss() : base("Dismiss", IconVariant.Regular, DismissSizeAndContent.Values[4]) { } }
            public class DismissCircle : Icon { public DismissCircle() : base("DismissCircle", IconVariant.Regular, DismissCircleSizeAndContent.Values[4]) { } }
            public class Diversity : Icon { public Diversity() : base("Diversity", IconVariant.Regular, DiversitySizeAndContent.Values[3]) { } }
            public class Doctor : Icon { public Doctor() : base("Doctor", IconVariant.Regular, DoctorSizeAndContent.Values[4]) { } }
            public class Document : Icon { public Document() : base("Document", IconVariant.Regular, DocumentSizeAndContent.Values[3]) { } }
            public class DocumentAdd : Icon { public DocumentAdd() : base("DocumentAdd", IconVariant.Regular, DocumentAddSizeAndContent.Values[3]) { } }
            public class DocumentArrowLeft : Icon { public DocumentArrowLeft() : base("DocumentArrowLeft", IconVariant.Regular, DocumentArrowLeftSizeAndContent.Values[3]) { } }
            public class DocumentLightning : Icon { public DocumentLightning() : base("DocumentLightning", IconVariant.Regular, DocumentLightningSizeAndContent.Values[3]) { } }
            public class DocumentLock : Icon { public DocumentLock() : base("DocumentLock", IconVariant.Regular, DocumentLockSizeAndContent.Values[3]) { } }
            public class DocumentMention : Icon { public DocumentMention() : base("DocumentMention", IconVariant.Regular, DocumentMentionSizeAndContent.Values[3]) { } }
            public class DocumentPrint : Icon { public DocumentPrint() : base("DocumentPrint", IconVariant.Regular, DocumentPrintSizeAndContent.Values[2]) { } }
            public class DocumentRibbon : Icon { public DocumentRibbon() : base("DocumentRibbon", IconVariant.Regular, DocumentRibbonSizeAndContent.Values[3]) { } }
            public class Door : Icon { public Door() : base("Door", IconVariant.Regular, DoorSizeAndContent.Values[2]) { } }
            public class DoorArrowRight : Icon { public DoorArrowRight() : base("DoorArrowRight", IconVariant.Regular, DoorArrowRightSizeAndContent.Values[2]) { } }
            public class Drop : Icon { public Drop() : base("Drop", IconVariant.Regular, DropSizeAndContent.Values[4]) { } }
            public class Dumbbell : Icon { public Dumbbell() : base("Dumbbell", IconVariant.Regular, DumbbellSizeAndContent.Values[3]) { } }
            public class Dust : Icon { public Dust() : base("Dust", IconVariant.Regular, DustSizeAndContent.Values[2]) { } }
            public class Edit : Icon { public Edit() : base("Edit", IconVariant.Regular, EditSizeAndContent.Values[4]) { } }
            public class EditOff : Icon { public EditOff() : base("EditOff", IconVariant.Regular, EditOffSizeAndContent.Values[3]) { } }
            public class EditProhibited : Icon { public EditProhibited() : base("EditProhibited", IconVariant.Regular, EditProhibitedSizeAndContent.Values[3]) { } }
            public class Emoji : Icon { public Emoji() : base("Emoji", IconVariant.Regular, EmojiSizeAndContent.Values[3]) { } }
            public class EmojiEdit : Icon { public EmojiEdit() : base("EmojiEdit", IconVariant.Regular, EmojiEditSizeAndContent.Values[3]) { } }
            public class EmojiHand : Icon { public EmojiHand() : base("EmojiHand", IconVariant.Regular, EmojiHandSizeAndContent.Values[3]) { } }
            public class EmojiHint : Icon { public EmojiHint() : base("EmojiHint", IconVariant.Regular, EmojiHintSizeAndContent.Values[3]) { } }
            public class EmojiSparkle : Icon { public EmojiSparkle() : base("EmojiSparkle", IconVariant.Regular, EmojiSparkleSizeAndContent.Values[3]) { } }
            public class ExpandUpLeft : Icon { public ExpandUpLeft() : base("ExpandUpLeft", IconVariant.Regular, ExpandUpLeftSizeAndContent.Values[3]) { } }
            public class ExpandUpRight : Icon { public ExpandUpRight() : base("ExpandUpRight", IconVariant.Regular, ExpandUpRightSizeAndContent.Values[3]) { } }
            public class Eye : Icon { public Eye() : base("Eye", IconVariant.Regular, EyeSizeAndContent.Values[4]) { } }
            public class EyeLines : Icon { public EyeLines() : base("EyeLines", IconVariant.Regular, EyeLinesSizeAndContent.Values[2]) { } }
            public class FastForward : Icon { public FastForward() : base("FastForward", IconVariant.Regular, FastForwardSizeAndContent.Values[3]) { } }
            public class Feed : Icon { public Feed() : base("Feed", IconVariant.Regular, FeedSizeAndContent.Values[3]) { } }
            public class Filter : Icon { public Filter() : base("Filter", IconVariant.Regular, FilterSizeAndContent.Values[4]) { } }
            public class Flag : Icon { public Flag() : base("Flag", IconVariant.Regular, FlagSizeAndContent.Values[3]) { } }
            public class FlagClock : Icon { public FlagClock() : base("FlagClock", IconVariant.Regular, FlagClockSizeAndContent.Values[3]) { } }
            public class FlagOff : Icon { public FlagOff() : base("FlagOff", IconVariant.Regular, FlagOffSizeAndContent.Values[3]) { } }
            public class Flash : Icon { public Flash() : base("Flash", IconVariant.Regular, FlashSizeAndContent.Values[3]) { } }
            public class FlashCheckmark : Icon { public FlashCheckmark() : base("FlashCheckmark", IconVariant.Regular, FlashCheckmarkSizeAndContent.Values[3]) { } }
            public class FlipHorizontal : Icon { public FlipHorizontal() : base("FlipHorizontal", IconVariant.Regular, FlipHorizontalSizeAndContent.Values[3]) { } }
            public class FlipVertical : Icon { public FlipVertical() : base("FlipVertical", IconVariant.Regular, FlipVerticalSizeAndContent.Values[3]) { } }
            public class Folder : Icon { public Folder() : base("Folder", IconVariant.Regular, FolderSizeAndContent.Values[3]) { } }
            public class FolderAdd : Icon { public FolderAdd() : base("FolderAdd", IconVariant.Regular, FolderAddSizeAndContent.Values[3]) { } }
            public class FolderArrowLeft : Icon { public FolderArrowLeft() : base("FolderArrowLeft", IconVariant.Regular, FolderArrowLeftSizeAndContent.Values[3]) { } }
            public class FolderArrowRight : Icon { public FolderArrowRight() : base("FolderArrowRight", IconVariant.Regular, FolderArrowRightSizeAndContent.Values[3]) { } }
            public class FolderArrowUp : Icon { public FolderArrowUp() : base("FolderArrowUp", IconVariant.Regular, FolderArrowUpSizeAndContent.Values[3]) { } }
            public class FolderLink : Icon { public FolderLink() : base("FolderLink", IconVariant.Regular, FolderLinkSizeAndContent.Values[3]) { } }
            public class FolderMail : Icon { public FolderMail() : base("FolderMail", IconVariant.Regular, FolderMailSizeAndContent.Values[3]) { } }
            public class FolderPerson : Icon { public FolderPerson() : base("FolderPerson", IconVariant.Regular, FolderPersonSizeAndContent.Values[3]) { } }
            public class FolderProhibited : Icon { public FolderProhibited() : base("FolderProhibited", IconVariant.Regular, FolderProhibitedSizeAndContent.Values[3]) { } }
            public class FontSpaceTrackingIn : Icon { public FontSpaceTrackingIn() : base("FontSpaceTrackingIn", IconVariant.Regular, FontSpaceTrackingInSizeAndContent.Values[3]) { } }
            public class FontSpaceTrackingOut : Icon { public FontSpaceTrackingOut() : base("FontSpaceTrackingOut", IconVariant.Regular, FontSpaceTrackingOutSizeAndContent.Values[3]) { } }
            public class Form : Icon { public Form() : base("Form", IconVariant.Regular, FormSizeAndContent.Values[2]) { } }
            public class FormMultiple : Icon { public FormMultiple() : base("FormMultiple", IconVariant.Regular, FormMultipleSizeAndContent.Values[2]) { } }
            public class FormNew : Icon { public FormNew() : base("FormNew", IconVariant.Regular, FormNewSizeAndContent.Values[2]) { } }
            public class Fps30 : Icon { public Fps30() : base("Fps30", IconVariant.Regular, Fps30SizeAndContent.Values[3]) { } }
            public class Fps60 : Icon { public Fps60() : base("Fps60", IconVariant.Regular, Fps60SizeAndContent.Values[3]) { } }
            public class FStop : Icon { public FStop() : base("FStop", IconVariant.Regular, FStopSizeAndContent.Values[3]) { } }
            public class FullScreenMaximize : Icon { public FullScreenMaximize() : base("FullScreenMaximize", IconVariant.Regular, FullScreenMaximizeSizeAndContent.Values[3]) { } }
            public class FullScreenMinimize : Icon { public FullScreenMinimize() : base("FullScreenMinimize", IconVariant.Regular, FullScreenMinimizeSizeAndContent.Values[3]) { } }
            public class Games : Icon { public Games() : base("Games", IconVariant.Regular, GamesSizeAndContent.Values[3]) { } }
            public class Glasses : Icon { public Glasses() : base("Glasses", IconVariant.Regular, GlassesSizeAndContent.Values[3]) { } }
            public class GlassesOff : Icon { public GlassesOff() : base("GlassesOff", IconVariant.Regular, GlassesOffSizeAndContent.Values[3]) { } }
            public class GlobeVideo : Icon { public GlobeVideo() : base("GlobeVideo", IconVariant.Regular, GlobeVideoSizeAndContent.Values[2]) { } }
            public class Grid : Icon { public Grid() : base("Grid", IconVariant.Regular, GridSizeAndContent.Values[3]) { } }
            public class GridCircles : Icon { public GridCircles() : base("GridCircles", IconVariant.Regular, GridCirclesSizeAndContent.Values[1]) { } }
            public class GridDots : Icon { public GridDots() : base("GridDots", IconVariant.Regular, GridDotsSizeAndContent.Values[2]) { } }
            public class Guardian : Icon { public Guardian() : base("Guardian", IconVariant.Regular, GuardianSizeAndContent.Values[2]) { } }
            public class Guest : Icon { public Guest() : base("Guest", IconVariant.Regular, GuestSizeAndContent.Values[3]) { } }
            public class Guitar : Icon { public Guitar() : base("Guitar", IconVariant.Regular, GuitarSizeAndContent.Values[3]) { } }
            public class HandDraw : Icon { public HandDraw() : base("HandDraw", IconVariant.Regular, HandDrawSizeAndContent.Values[3]) { } }
            public class HandLeft : Icon { public HandLeft() : base("HandLeft", IconVariant.Regular, HandLeftSizeAndContent.Values[3]) { } }
            public class HandLeftChat : Icon { public HandLeftChat() : base("HandLeftChat", IconVariant.Regular, HandLeftChatSizeAndContent.Values[3]) { } }
            public class HandRight : Icon { public HandRight() : base("HandRight", IconVariant.Regular, HandRightSizeAndContent.Values[3]) { } }
            public class HandRightOff : Icon { public HandRightOff() : base("HandRightOff", IconVariant.Regular, HandRightOffSizeAndContent.Values[3]) { } }
            public class HatGraduation : Icon { public HatGraduation() : base("HatGraduation", IconVariant.Regular, HatGraduationSizeAndContent.Values[4]) { } }
            public class HatGraduationSparkle : Icon { public HatGraduationSparkle() : base("HatGraduationSparkle", IconVariant.Regular, HatGraduationSparkleSizeAndContent.Values[3]) { } }
            public class Headphones : Icon { public Headphones() : base("Headphones", IconVariant.Regular, HeadphonesSizeAndContent.Values[2]) { } }
            public class HeadphonesSoundWave : Icon { public HeadphonesSoundWave() : base("HeadphonesSoundWave", IconVariant.Regular, HeadphonesSoundWaveSizeAndContent.Values[2]) { } }
            public class Headset : Icon { public Headset() : base("Headset", IconVariant.Regular, HeadsetSizeAndContent.Values[3]) { } }
            public class Heart : Icon { public Heart() : base("Heart", IconVariant.Regular, HeartSizeAndContent.Values[4]) { } }
            public class HeartCircleHint : Icon { public HeartCircleHint() : base("HeartCircleHint", IconVariant.Regular, HeartCircleHintSizeAndContent.Values[3]) { } }
            public class Hexagon : Icon { public Hexagon() : base("Hexagon", IconVariant.Regular, HexagonSizeAndContent.Values[4]) { } }
            public class History : Icon { public History() : base("History", IconVariant.Regular, HistorySizeAndContent.Values[3]) { } }
            public class HistoryDismiss : Icon { public HistoryDismiss() : base("HistoryDismiss", IconVariant.Regular, HistoryDismissSizeAndContent.Values[2]) { } }
            public class Home : Icon { public Home() : base("Home", IconVariant.Regular, HomeSizeAndContent.Values[4]) { } }
            public class Image : Icon { public Image() : base("Image", IconVariant.Regular, ImageSizeAndContent.Values[3]) { } }
            public class ImageBorder : Icon { public ImageBorder() : base("ImageBorder", IconVariant.Regular, ImageBorderSizeAndContent.Values[3]) { } }
            public class ImageCircle : Icon { public ImageCircle() : base("ImageCircle", IconVariant.Regular, ImageCircleSizeAndContent.Values[3]) { } }
            public class ImageCopy : Icon { public ImageCopy() : base("ImageCopy", IconVariant.Regular, ImageCopySizeAndContent.Values[2]) { } }
            public class ImageMultiple : Icon { public ImageMultiple() : base("ImageMultiple", IconVariant.Regular, ImageMultipleSizeAndContent.Values[3]) { } }
            public class ImageOff : Icon { public ImageOff() : base("ImageOff", IconVariant.Regular, ImageOffSizeAndContent.Values[2]) { } }
            public class ImageTable : Icon { public ImageTable() : base("ImageTable", IconVariant.Regular, ImageTableSizeAndContent.Values[3]) { } }
            public class ImmersiveReader : Icon { public ImmersiveReader() : base("ImmersiveReader", IconVariant.Regular, ImmersiveReaderSizeAndContent.Values[3]) { } }
            public class Info : Icon { public Info() : base("Info", IconVariant.Regular, InfoSizeAndContent.Values[4]) { } }
            public class InprivateAccount : Icon { public InprivateAccount() : base("InprivateAccount", IconVariant.Regular, InprivateAccountSizeAndContent.Values[3]) { } }
            public class Laptop : Icon { public Laptop() : base("Laptop", IconVariant.Regular, LaptopSizeAndContent.Values[3]) { } }
            public class Lasso : Icon { public Lasso() : base("Lasso", IconVariant.Regular, LassoSizeAndContent.Values[2]) { } }
            public class Library : Icon { public Library() : base("Library", IconVariant.Regular, LibrarySizeAndContent.Values[3]) { } }
            public class Lightbulb : Icon { public Lightbulb() : base("Lightbulb", IconVariant.Regular, LightbulbSizeAndContent.Values[3]) { } }
            public class LightbulbPerson : Icon { public LightbulbPerson() : base("LightbulbPerson", IconVariant.Regular, LightbulbPersonSizeAndContent.Values[3]) { } }
            public class LineHorizontal1 : Icon { public LineHorizontal1() : base("LineHorizontal1", IconVariant.Regular, LineHorizontal1SizeAndContent.Values[3]) { } }
            public class LineHorizontal1Dashes : Icon { public LineHorizontal1Dashes() : base("LineHorizontal1Dashes", IconVariant.Regular, LineHorizontal1DashesSizeAndContent.Values[3]) { } }
            public class LineHorizontal2DashesSolid : Icon { public LineHorizontal2DashesSolid() : base("LineHorizontal2DashesSolid", IconVariant.Regular, LineHorizontal2DashesSolidSizeAndContent.Values[3]) { } }
            public class Link : Icon { public Link() : base("Link", IconVariant.Regular, LinkSizeAndContent.Values[4]) { } }
            public class List : Icon { public List() : base("List", IconVariant.Regular, ListSizeAndContent.Values[3]) { } }
            public class LocalLanguage : Icon { public LocalLanguage() : base("LocalLanguage", IconVariant.Regular, LocalLanguageSizeAndContent.Values[3]) { } }
            public class LocalLanguageEn : Icon { public LocalLanguageEn() : base("LocalLanguageEn", IconVariant.Regular, LocalLanguageEnSizeAndContent.Values[3]) { } }
            public class LocalLanguageKo : Icon { public LocalLanguageKo() : base("LocalLanguageKo", IconVariant.Regular, LocalLanguageKoSizeAndContent.Values[3]) { } }
            public class Location : Icon { public Location() : base("Location", IconVariant.Regular, LocationSizeAndContent.Values[4]) { } }
            public class LocationArrow : Icon { public LocationArrow() : base("LocationArrow", IconVariant.Regular, LocationArrowSizeAndContent.Values[4]) { } }
            public class LocationOff : Icon { public LocationOff() : base("LocationOff", IconVariant.Regular, LocationOffSizeAndContent.Values[3]) { } }
            public class LockClosed : Icon { public LockClosed() : base("LockClosed", IconVariant.Regular, LockClosedSizeAndContent.Values[4]) { } }
            public class LockOpen : Icon { public LockOpen() : base("LockOpen", IconVariant.Regular, LockOpenSizeAndContent.Values[4]) { } }
            public class LockShield : Icon { public LockShield() : base("LockShield", IconVariant.Regular, LockShieldSizeAndContent.Values[3]) { } }
            public class Luggage : Icon { public Luggage() : base("Luggage", IconVariant.Regular, LuggageSizeAndContent.Values[3]) { } }
            public class Mail : Icon { public Mail() : base("Mail", IconVariant.Regular, MailSizeAndContent.Values[4]) { } }
            public class MailAlert : Icon { public MailAlert() : base("MailAlert", IconVariant.Regular, MailAlertSizeAndContent.Values[3]) { } }
            public class MailAllRead : Icon { public MailAllRead() : base("MailAllRead", IconVariant.Regular, MailAllReadSizeAndContent.Values[3]) { } }
            public class MailAttach : Icon { public MailAttach() : base("MailAttach", IconVariant.Regular, MailAttachSizeAndContent.Values[3]) { } }
            public class MailDismiss : Icon { public MailDismiss() : base("MailDismiss", IconVariant.Regular, MailDismissSizeAndContent.Values[3]) { } }
            public class MailInbox : Icon { public MailInbox() : base("MailInbox", IconVariant.Regular, MailInboxSizeAndContent.Values[3]) { } }
            public class MailInboxAdd : Icon { public MailInboxAdd() : base("MailInboxAdd", IconVariant.Regular, MailInboxAddSizeAndContent.Values[3]) { } }
            public class MailInboxCheckmark : Icon { public MailInboxCheckmark() : base("MailInboxCheckmark", IconVariant.Regular, MailInboxCheckmarkSizeAndContent.Values[3]) { } }
            public class MailInboxDismiss : Icon { public MailInboxDismiss() : base("MailInboxDismiss", IconVariant.Regular, MailInboxDismissSizeAndContent.Values[3]) { } }
            public class MailList : Icon { public MailList() : base("MailList", IconVariant.Regular, MailListSizeAndContent.Values[3]) { } }
            public class MailMultiple : Icon { public MailMultiple() : base("MailMultiple", IconVariant.Regular, MailMultipleSizeAndContent.Values[3]) { } }
            public class MailProhibited : Icon { public MailProhibited() : base("MailProhibited", IconVariant.Regular, MailProhibitedSizeAndContent.Values[3]) { } }
            public class MailRead : Icon { public MailRead() : base("MailRead", IconVariant.Regular, MailReadSizeAndContent.Values[3]) { } }
            public class MailReadMultiple : Icon { public MailReadMultiple() : base("MailReadMultiple", IconVariant.Regular, MailReadMultipleSizeAndContent.Values[3]) { } }
            public class MailUnread : Icon { public MailUnread() : base("MailUnread", IconVariant.Regular, MailUnreadSizeAndContent.Values[4]) { } }
            public class MathSymbols : Icon { public MathSymbols() : base("MathSymbols", IconVariant.Regular, MathSymbolsSizeAndContent.Values[3]) { } }
            public class Maximize : Icon { public Maximize() : base("Maximize", IconVariant.Regular, MaximizeSizeAndContent.Values[3]) { } }
            public class MeetNow : Icon { public MeetNow() : base("MeetNow", IconVariant.Regular, MeetNowSizeAndContent.Values[3]) { } }
            public class Megaphone : Icon { public Megaphone() : base("Megaphone", IconVariant.Regular, MegaphoneSizeAndContent.Values[3]) { } }
            public class MegaphoneLoud : Icon { public MegaphoneLoud() : base("MegaphoneLoud", IconVariant.Regular, MegaphoneLoudSizeAndContent.Values[3]) { } }
            public class MegaphoneOff : Icon { public MegaphoneOff() : base("MegaphoneOff", IconVariant.Regular, MegaphoneOffSizeAndContent.Values[3]) { } }
            public class Mic : Icon { public Mic() : base("Mic", IconVariant.Regular, MicSizeAndContent.Values[3]) { } }
            public class MicOff : Icon { public MicOff() : base("MicOff", IconVariant.Regular, MicOffSizeAndContent.Values[4]) { } }
            public class MicProhibited : Icon { public MicProhibited() : base("MicProhibited", IconVariant.Regular, MicProhibitedSizeAndContent.Values[3]) { } }
            public class MicPulse : Icon { public MicPulse() : base("MicPulse", IconVariant.Regular, MicPulseSizeAndContent.Values[3]) { } }
            public class MicPulseOff : Icon { public MicPulseOff() : base("MicPulseOff", IconVariant.Regular, MicPulseOffSizeAndContent.Values[3]) { } }
            public class MicRecord : Icon { public MicRecord() : base("MicRecord", IconVariant.Regular, MicRecordSizeAndContent.Values[2]) { } }
            public class Mold : Icon { public Mold() : base("Mold", IconVariant.Regular, MoldSizeAndContent.Values[2]) { } }
            public class Molecule : Icon { public Molecule() : base("Molecule", IconVariant.Regular, MoleculeSizeAndContent.Values[3]) { } }
            public class MoreCircle : Icon { public MoreCircle() : base("MoreCircle", IconVariant.Regular, MoreCircleSizeAndContent.Values[3]) { } }
            public class MoreHorizontal : Icon { public MoreHorizontal() : base("MoreHorizontal", IconVariant.Regular, MoreHorizontalSizeAndContent.Values[3]) { } }
            public class MoreVertical : Icon { public MoreVertical() : base("MoreVertical", IconVariant.Regular, MoreVerticalSizeAndContent.Values[3]) { } }
            public class MountainLocationBottom : Icon { public MountainLocationBottom() : base("MountainLocationBottom", IconVariant.Regular, MountainLocationBottomSizeAndContent.Values[2]) { } }
            public class MountainLocationTop : Icon { public MountainLocationTop() : base("MountainLocationTop", IconVariant.Regular, MountainLocationTopSizeAndContent.Values[2]) { } }
            public class MountainTrail : Icon { public MountainTrail() : base("MountainTrail", IconVariant.Regular, MountainTrailSizeAndContent.Values[2]) { } }
            public class Multiplier12x : Icon { public Multiplier12x() : base("Multiplier12x", IconVariant.Regular, Multiplier12xSizeAndContent.Values[2]) { } }
            public class Multiplier15x : Icon { public Multiplier15x() : base("Multiplier15x", IconVariant.Regular, Multiplier15xSizeAndContent.Values[2]) { } }
            public class Multiplier18x : Icon { public Multiplier18x() : base("Multiplier18x", IconVariant.Regular, Multiplier18xSizeAndContent.Values[2]) { } }
            public class Multiplier1x : Icon { public Multiplier1x() : base("Multiplier1x", IconVariant.Regular, Multiplier1xSizeAndContent.Values[2]) { } }
            public class Multiplier2x : Icon { public Multiplier2x() : base("Multiplier2x", IconVariant.Regular, Multiplier2xSizeAndContent.Values[2]) { } }
            public class Multiplier5x : Icon { public Multiplier5x() : base("Multiplier5x", IconVariant.Regular, Multiplier5xSizeAndContent.Values[2]) { } }
            public class News : Icon { public News() : base("News", IconVariant.Regular, NewsSizeAndContent.Values[3]) { } }
            public class Next : Icon { public Next() : base("Next", IconVariant.Regular, NextSizeAndContent.Values[3]) { } }
            public class Note : Icon { public Note() : base("Note", IconVariant.Regular, NoteSizeAndContent.Values[3]) { } }
            public class NoteAdd : Icon { public NoteAdd() : base("NoteAdd", IconVariant.Regular, NoteAddSizeAndContent.Values[3]) { } }
            public class Notepad : Icon { public Notepad() : base("Notepad", IconVariant.Regular, NotepadSizeAndContent.Values[4]) { } }
            public class NumberCircle0 : Icon { public NumberCircle0() : base("NumberCircle0", IconVariant.Regular, NumberCircle0SizeAndContent.Values[3]) { } }
            public class NumberCircle1 : Icon { public NumberCircle1() : base("NumberCircle1", IconVariant.Regular, NumberCircle1SizeAndContent.Values[3]) { } }
            public class NumberCircle2 : Icon { public NumberCircle2() : base("NumberCircle2", IconVariant.Regular, NumberCircle2SizeAndContent.Values[3]) { } }
            public class NumberCircle3 : Icon { public NumberCircle3() : base("NumberCircle3", IconVariant.Regular, NumberCircle3SizeAndContent.Values[3]) { } }
            public class NumberCircle4 : Icon { public NumberCircle4() : base("NumberCircle4", IconVariant.Regular, NumberCircle4SizeAndContent.Values[3]) { } }
            public class NumberCircle5 : Icon { public NumberCircle5() : base("NumberCircle5", IconVariant.Regular, NumberCircle5SizeAndContent.Values[3]) { } }
            public class NumberCircle6 : Icon { public NumberCircle6() : base("NumberCircle6", IconVariant.Regular, NumberCircle6SizeAndContent.Values[3]) { } }
            public class NumberCircle7 : Icon { public NumberCircle7() : base("NumberCircle7", IconVariant.Regular, NumberCircle7SizeAndContent.Values[3]) { } }
            public class NumberCircle8 : Icon { public NumberCircle8() : base("NumberCircle8", IconVariant.Regular, NumberCircle8SizeAndContent.Values[3]) { } }
            public class NumberCircle9 : Icon { public NumberCircle9() : base("NumberCircle9", IconVariant.Regular, NumberCircle9SizeAndContent.Values[3]) { } }
            public class NumberSymbol : Icon { public NumberSymbol() : base("NumberSymbol", IconVariant.Regular, NumberSymbolSizeAndContent.Values[3]) { } }
            public class Open : Icon { public Open() : base("Open", IconVariant.Regular, OpenSizeAndContent.Values[4]) { } }
            public class OpenFolder : Icon { public OpenFolder() : base("OpenFolder", IconVariant.Regular, OpenFolderSizeAndContent.Values[3]) { } }
            public class OpenOff : Icon { public OpenOff() : base("OpenOff", IconVariant.Regular, OpenOffSizeAndContent.Values[3]) { } }
            public class Organization : Icon { public Organization() : base("Organization", IconVariant.Regular, OrganizationSizeAndContent.Values[4]) { } }
            public class Oval : Icon { public Oval() : base("Oval", IconVariant.Regular, OvalSizeAndContent.Values[3]) { } }
            public class PanelLeft : Icon { public PanelLeft() : base("PanelLeft", IconVariant.Regular, PanelLeftSizeAndContent.Values[3]) { } }
            public class PanelLeftAdd : Icon { public PanelLeftAdd() : base("PanelLeftAdd", IconVariant.Regular, PanelLeftAddSizeAndContent.Values[3]) { } }
            public class PanelLeftContract : Icon { public PanelLeftContract() : base("PanelLeftContract", IconVariant.Regular, PanelLeftContractSizeAndContent.Values[3]) { } }
            public class PanelLeftExpand : Icon { public PanelLeftExpand() : base("PanelLeftExpand", IconVariant.Regular, PanelLeftExpandSizeAndContent.Values[3]) { } }
            public class PanelLeftHeader : Icon { public PanelLeftHeader() : base("PanelLeftHeader", IconVariant.Regular, PanelLeftHeaderSizeAndContent.Values[3]) { } }
            public class PanelLeftHeaderAdd : Icon { public PanelLeftHeaderAdd() : base("PanelLeftHeaderAdd", IconVariant.Regular, PanelLeftHeaderAddSizeAndContent.Values[3]) { } }
            public class PanelLeftText : Icon { public PanelLeftText() : base("PanelLeftText", IconVariant.Regular, PanelLeftTextSizeAndContent.Values[3]) { } }
            public class PanelLeftTextAdd : Icon { public PanelLeftTextAdd() : base("PanelLeftTextAdd", IconVariant.Regular, PanelLeftTextAddSizeAndContent.Values[3]) { } }
            public class PanelLeftTextDismiss : Icon { public PanelLeftTextDismiss() : base("PanelLeftTextDismiss", IconVariant.Regular, PanelLeftTextDismissSizeAndContent.Values[3]) { } }
            public class PanelRight : Icon { public PanelRight() : base("PanelRight", IconVariant.Regular, PanelRightSizeAndContent.Values[3]) { } }
            public class PanelRightGallery : Icon { public PanelRightGallery() : base("PanelRightGallery", IconVariant.Regular, PanelRightGallerySizeAndContent.Values[3]) { } }
            public class PanelTopGallery : Icon { public PanelTopGallery() : base("PanelTopGallery", IconVariant.Regular, PanelTopGallerySizeAndContent.Values[3]) { } }
            public class Pause : Icon { public Pause() : base("Pause", IconVariant.Regular, PauseSizeAndContent.Values[4]) { } }
            public class Payment : Icon { public Payment() : base("Payment", IconVariant.Regular, PaymentSizeAndContent.Values[3]) { } }
            public class Pen : Icon { public Pen() : base("Pen", IconVariant.Regular, PenSizeAndContent.Values[3]) { } }
            public class PenDismiss : Icon { public PenDismiss() : base("PenDismiss", IconVariant.Regular, PenDismissSizeAndContent.Values[3]) { } }
            public class PenOff : Icon { public PenOff() : base("PenOff", IconVariant.Regular, PenOffSizeAndContent.Values[3]) { } }
            public class PenProhibited : Icon { public PenProhibited() : base("PenProhibited", IconVariant.Regular, PenProhibitedSizeAndContent.Values[3]) { } }
            public class PenSparkle : Icon { public PenSparkle() : base("PenSparkle", IconVariant.Regular, PenSparkleSizeAndContent.Values[3]) { } }
            public class People : Icon { public People() : base("People", IconVariant.Regular, PeopleSizeAndContent.Values[4]) { } }
            public class PeopleAdd : Icon { public PeopleAdd() : base("PeopleAdd", IconVariant.Regular, PeopleAddSizeAndContent.Values[3]) { } }
            public class PeopleCommunity : Icon { public PeopleCommunity() : base("PeopleCommunity", IconVariant.Regular, PeopleCommunitySizeAndContent.Values[3]) { } }
            public class PeopleCommunityAdd : Icon { public PeopleCommunityAdd() : base("PeopleCommunityAdd", IconVariant.Regular, PeopleCommunityAddSizeAndContent.Values[2]) { } }
            public class PeopleList : Icon { public PeopleList() : base("PeopleList", IconVariant.Regular, PeopleListSizeAndContent.Values[3]) { } }
            public class PeopleSettings : Icon { public PeopleSettings() : base("PeopleSettings", IconVariant.Regular, PeopleSettingsSizeAndContent.Values[2]) { } }
            public class PeopleStar : Icon { public PeopleStar() : base("PeopleStar", IconVariant.Regular, PeopleStarSizeAndContent.Values[3]) { } }
            public class PeopleSwap : Icon { public PeopleSwap() : base("PeopleSwap", IconVariant.Regular, PeopleSwapSizeAndContent.Values[3]) { } }
            public class PeopleSync : Icon { public PeopleSync() : base("PeopleSync", IconVariant.Regular, PeopleSyncSizeAndContent.Values[2]) { } }
            public class PeopleTeam : Icon { public PeopleTeam() : base("PeopleTeam", IconVariant.Regular, PeopleTeamSizeAndContent.Values[3]) { } }
            public class PeopleTeamDelete : Icon { public PeopleTeamDelete() : base("PeopleTeamDelete", IconVariant.Regular, PeopleTeamDeleteSizeAndContent.Values[3]) { } }
            public class Person : Icon { public Person() : base("Person", IconVariant.Regular, PersonSizeAndContent.Values[4]) { } }
            public class PersonAdd : Icon { public PersonAdd() : base("PersonAdd", IconVariant.Regular, PersonAddSizeAndContent.Values[3]) { } }
            public class PersonArrowBack : Icon { public PersonArrowBack() : base("PersonArrowBack", IconVariant.Regular, PersonArrowBackSizeAndContent.Values[3]) { } }
            public class PersonBoard : Icon { public PersonBoard() : base("PersonBoard", IconVariant.Regular, PersonBoardSizeAndContent.Values[3]) { } }
            public class PersonCircle : Icon { public PersonCircle() : base("PersonCircle", IconVariant.Regular, PersonCircleSizeAndContent.Values[3]) { } }
            public class PersonFeedback : Icon { public PersonFeedback() : base("PersonFeedback", IconVariant.Regular, PersonFeedbackSizeAndContent.Values[3]) { } }
            public class PersonLink : Icon { public PersonLink() : base("PersonLink", IconVariant.Regular, PersonLinkSizeAndContent.Values[3]) { } }
            public class PersonMail : Icon { public PersonMail() : base("PersonMail", IconVariant.Regular, PersonMailSizeAndContent.Values[3]) { } }
            public class PersonProhibited : Icon { public PersonProhibited() : base("PersonProhibited", IconVariant.Regular, PersonProhibitedSizeAndContent.Values[3]) { } }
            public class PersonStar : Icon { public PersonStar() : base("PersonStar", IconVariant.Regular, PersonStarSizeAndContent.Values[3]) { } }
            public class PersonSupport : Icon { public PersonSupport() : base("PersonSupport", IconVariant.Regular, PersonSupportSizeAndContent.Values[3]) { } }
            public class PersonSync : Icon { public PersonSync() : base("PersonSync", IconVariant.Regular, PersonSyncSizeAndContent.Values[3]) { } }
            public class PersonTag : Icon { public PersonTag() : base("PersonTag", IconVariant.Regular, PersonTagSizeAndContent.Values[2]) { } }
            public class PersonWarning : Icon { public PersonWarning() : base("PersonWarning", IconVariant.Regular, PersonWarningSizeAndContent.Values[3]) { } }
            public class Phone : Icon { public Phone() : base("Phone", IconVariant.Regular, PhoneSizeAndContent.Values[4]) { } }
            public class PhoneChat : Icon { public PhoneChat() : base("PhoneChat", IconVariant.Regular, PhoneChatSizeAndContent.Values[3]) { } }
            public class PhoneDesktop : Icon { public PhoneDesktop() : base("PhoneDesktop", IconVariant.Regular, PhoneDesktopSizeAndContent.Values[3]) { } }
            public class PhoneSpanIn : Icon { public PhoneSpanIn() : base("PhoneSpanIn", IconVariant.Regular, PhoneSpanInSizeAndContent.Values[3]) { } }
            public class PhoneSpanOut : Icon { public PhoneSpanOut() : base("PhoneSpanOut", IconVariant.Regular, PhoneSpanOutSizeAndContent.Values[3]) { } }
            public class Pill : Icon { public Pill() : base("Pill", IconVariant.Regular, PillSizeAndContent.Values[3]) { } }
            public class Pin : Icon { public Pin() : base("Pin", IconVariant.Regular, PinSizeAndContent.Values[4]) { } }
            public class PinOff : Icon { public PinOff() : base("PinOff", IconVariant.Regular, PinOffSizeAndContent.Values[3]) { } }
            public class PlantGrass : Icon { public PlantGrass() : base("PlantGrass", IconVariant.Regular, PlantGrassSizeAndContent.Values[2]) { } }
            public class PlantRagweed : Icon { public PlantRagweed() : base("PlantRagweed", IconVariant.Regular, PlantRagweedSizeAndContent.Values[2]) { } }
            public class Play : Icon { public Play() : base("Play", IconVariant.Regular, PlaySizeAndContent.Values[4]) { } }
            public class PlayCircle : Icon { public PlayCircle() : base("PlayCircle", IconVariant.Regular, PlayCircleSizeAndContent.Values[3]) { } }
            public class PlugDisconnected : Icon { public PlugDisconnected() : base("PlugDisconnected", IconVariant.Regular, PlugDisconnectedSizeAndContent.Values[3]) { } }
            public class Power : Icon { public Power() : base("Power", IconVariant.Regular, PowerSizeAndContent.Values[2]) { } }
            public class Premium : Icon { public Premium() : base("Premium", IconVariant.Regular, PremiumSizeAndContent.Values[4]) { } }
            public class Previous : Icon { public Previous() : base("Previous", IconVariant.Regular, PreviousSizeAndContent.Values[3]) { } }
            public class Print : Icon { public Print() : base("Print", IconVariant.Regular, PrintSizeAndContent.Values[3]) { } }
            public class Prohibited : Icon { public Prohibited() : base("Prohibited", IconVariant.Regular, ProhibitedSizeAndContent.Values[4]) { } }
            public class ProhibitedMultiple : Icon { public ProhibitedMultiple() : base("ProhibitedMultiple", IconVariant.Regular, ProhibitedMultipleSizeAndContent.Values[3]) { } }
            public class ProjectionScreen : Icon { public ProjectionScreen() : base("ProjectionScreen", IconVariant.Regular, ProjectionScreenSizeAndContent.Values[3]) { } }
            public class ProjectionScreenDismiss : Icon { public ProjectionScreenDismiss() : base("ProjectionScreenDismiss", IconVariant.Regular, ProjectionScreenDismissSizeAndContent.Values[3]) { } }
            public class Pulse : Icon { public Pulse() : base("Pulse", IconVariant.Regular, PulseSizeAndContent.Values[2]) { } }
            public class PuzzleCube : Icon { public PuzzleCube() : base("PuzzleCube", IconVariant.Regular, PuzzleCubeSizeAndContent.Values[3]) { } }
            public class QrCode : Icon { public QrCode() : base("QrCode", IconVariant.Regular, QrCodeSizeAndContent.Values[2]) { } }
            public class Question : Icon { public Question() : base("Question", IconVariant.Regular, QuestionSizeAndContent.Values[3]) { } }
            public class QuestionCircle : Icon { public QuestionCircle() : base("QuestionCircle", IconVariant.Regular, QuestionCircleSizeAndContent.Values[4]) { } }
            public class QuizNew : Icon { public QuizNew() : base("QuizNew", IconVariant.Regular, QuizNewSizeAndContent.Values[2]) { } }
            public class ReadAloud : Icon { public ReadAloud() : base("ReadAloud", IconVariant.Regular, ReadAloudSizeAndContent.Values[3]) { } }
            public class ReadingList : Icon { public ReadingList() : base("ReadingList", IconVariant.Regular, ReadingListSizeAndContent.Values[3]) { } }
            public class ReadingListAdd : Icon { public ReadingListAdd() : base("ReadingListAdd", IconVariant.Regular, ReadingListAddSizeAndContent.Values[3]) { } }
            public class Receipt : Icon { public Receipt() : base("Receipt", IconVariant.Regular, ReceiptSizeAndContent.Values[3]) { } }
            public class Record : Icon { public Record() : base("Record", IconVariant.Regular, RecordSizeAndContent.Values[4]) { } }
            public class RecordStop : Icon { public RecordStop() : base("RecordStop", IconVariant.Regular, RecordStopSizeAndContent.Values[4]) { } }
            public class RectangleLandscape : Icon { public RectangleLandscape() : base("RectangleLandscape", IconVariant.Regular, RectangleLandscapeSizeAndContent.Values[4]) { } }
            public class RectangleLandscapeSparkle : Icon { public RectangleLandscapeSparkle() : base("RectangleLandscapeSparkle", IconVariant.Regular, RectangleLandscapeSparkleSizeAndContent.Values[3]) { } }
            public class Rename : Icon { public Rename() : base("Rename", IconVariant.Regular, RenameSizeAndContent.Values[3]) { } }
            public class Resize : Icon { public Resize() : base("Resize", IconVariant.Regular, ResizeSizeAndContent.Values[3]) { } }
            public class Rewind : Icon { public Rewind() : base("Rewind", IconVariant.Regular, RewindSizeAndContent.Values[3]) { } }
            public class Rhombus : Icon { public Rhombus() : base("Rhombus", IconVariant.Regular, RhombusSizeAndContent.Values[3]) { } }
            public class RoadCone : Icon { public RoadCone() : base("RoadCone", IconVariant.Regular, RoadConeSizeAndContent.Values[3]) { } }
            public class Ruler : Icon { public Ruler() : base("Ruler", IconVariant.Regular, RulerSizeAndContent.Values[3]) { } }
            public class Save : Icon { public Save() : base("Save", IconVariant.Regular, SaveSizeAndContent.Values[3]) { } }
            public class ScanCamera : Icon { public ScanCamera() : base("ScanCamera", IconVariant.Regular, ScanCameraSizeAndContent.Values[3]) { } }
            public class ScanDash : Icon { public ScanDash() : base("ScanDash", IconVariant.Regular, ScanDashSizeAndContent.Values[4]) { } }
            public class ScanPerson : Icon { public ScanPerson() : base("ScanPerson", IconVariant.Regular, ScanPersonSizeAndContent.Values[3]) { } }
            public class ScanText : Icon { public ScanText() : base("ScanText", IconVariant.Regular, ScanTextSizeAndContent.Values[3]) { } }
            public class ScanThumbUp : Icon { public ScanThumbUp() : base("ScanThumbUp", IconVariant.Regular, ScanThumbUpSizeAndContent.Values[3]) { } }
            public class ScanThumbUpOff : Icon { public ScanThumbUpOff() : base("ScanThumbUpOff", IconVariant.Regular, ScanThumbUpOffSizeAndContent.Values[3]) { } }
            public class Screenshot : Icon { public Screenshot() : base("Screenshot", IconVariant.Regular, ScreenshotSizeAndContent.Values[3]) { } }
            public class ScreenshotRecord : Icon { public ScreenshotRecord() : base("ScreenshotRecord", IconVariant.Regular, ScreenshotRecordSizeAndContent.Values[3]) { } }
            public class Search : Icon { public Search() : base("Search", IconVariant.Regular, SearchSizeAndContent.Values[4]) { } }
            public class Send : Icon { public Send() : base("Send", IconVariant.Regular, SendSizeAndContent.Values[3]) { } }
            public class SendBeaker : Icon { public SendBeaker() : base("SendBeaker", IconVariant.Regular, SendBeakerSizeAndContent.Values[3]) { } }
            public class Settings : Icon { public Settings() : base("Settings", IconVariant.Regular, SettingsSizeAndContent.Values[3]) { } }
            public class ShapeOrganic : Icon { public ShapeOrganic() : base("ShapeOrganic", IconVariant.Regular, ShapeOrganicSizeAndContent.Values[3]) { } }
            public class Shapes : Icon { public Shapes() : base("Shapes", IconVariant.Regular, ShapesSizeAndContent.Values[3]) { } }
            public class Share : Icon { public Share() : base("Share", IconVariant.Regular, ShareSizeAndContent.Values[3]) { } }
            public class ShareIos : Icon { public ShareIos() : base("ShareIos", IconVariant.Regular, ShareIosSizeAndContent.Values[2]) { } }
            public class ShareScreenPerson : Icon { public ShareScreenPerson() : base("ShareScreenPerson", IconVariant.Regular, ShareScreenPersonSizeAndContent.Values[3]) { } }
            public class ShareScreenPersonOverlay : Icon { public ShareScreenPersonOverlay() : base("ShareScreenPersonOverlay", IconVariant.Regular, ShareScreenPersonOverlaySizeAndContent.Values[3]) { } }
            public class ShareScreenPersonOverlayInside : Icon { public ShareScreenPersonOverlayInside() : base("ShareScreenPersonOverlayInside", IconVariant.Regular, ShareScreenPersonOverlayInsideSizeAndContent.Values[3]) { } }
            public class ShareScreenPersonP : Icon { public ShareScreenPersonP() : base("ShareScreenPersonP", IconVariant.Regular, ShareScreenPersonPSizeAndContent.Values[3]) { } }
            public class ShareScreenStart : Icon { public ShareScreenStart() : base("ShareScreenStart", IconVariant.Regular, ShareScreenStartSizeAndContent.Values[2]) { } }
            public class ShareScreenStop : Icon { public ShareScreenStop() : base("ShareScreenStop", IconVariant.Regular, ShareScreenStopSizeAndContent.Values[3]) { } }
            public class Shield : Icon { public Shield() : base("Shield", IconVariant.Regular, ShieldSizeAndContent.Values[4]) { } }
            public class ShieldCheckmark : Icon { public ShieldCheckmark() : base("ShieldCheckmark", IconVariant.Regular, ShieldCheckmarkSizeAndContent.Values[3]) { } }
            public class ShieldLock : Icon { public ShieldLock() : base("ShieldLock", IconVariant.Regular, ShieldLockSizeAndContent.Values[3]) { } }
            public class ShieldTask : Icon { public ShieldTask() : base("ShieldTask", IconVariant.Regular, ShieldTaskSizeAndContent.Values[3]) { } }
            public class Shifts : Icon { public Shifts() : base("Shifts", IconVariant.Regular, ShiftsSizeAndContent.Values[3]) { } }
            public class Signature : Icon { public Signature() : base("Signature", IconVariant.Regular, SignatureSizeAndContent.Values[3]) { } }
            public class SkipBack10 : Icon { public SkipBack10() : base("SkipBack10", IconVariant.Regular, SkipBack10SizeAndContent.Values[2]) { } }
            public class SkipForward10 : Icon { public SkipForward10() : base("SkipForward10", IconVariant.Regular, SkipForward10SizeAndContent.Values[2]) { } }
            public class SkipForward30 : Icon { public SkipForward30() : base("SkipForward30", IconVariant.Regular, SkipForward30SizeAndContent.Values[2]) { } }
            public class SlideAdd : Icon { public SlideAdd() : base("SlideAdd", IconVariant.Regular, SlideAddSizeAndContent.Values[3]) { } }
            public class SlideRecord : Icon { public SlideRecord() : base("SlideRecord", IconVariant.Regular, SlideRecordSizeAndContent.Values[3]) { } }
            public class SlideSearch : Icon { public SlideSearch() : base("SlideSearch", IconVariant.Regular, SlideSearchSizeAndContent.Values[3]) { } }
            public class SlideText : Icon { public SlideText() : base("SlideText", IconVariant.Regular, SlideTextSizeAndContent.Values[3]) { } }
            public class SlideTextEdit : Icon { public SlideTextEdit() : base("SlideTextEdit", IconVariant.Regular, SlideTextEditSizeAndContent.Values[3]) { } }
            public class SlideTextPerson : Icon { public SlideTextPerson() : base("SlideTextPerson", IconVariant.Regular, SlideTextPersonSizeAndContent.Values[3]) { } }
            public class SlideTextSparkle : Icon { public SlideTextSparkle() : base("SlideTextSparkle", IconVariant.Regular, SlideTextSparkleSizeAndContent.Values[3]) { } }
            public class SoundSource : Icon { public SoundSource() : base("SoundSource", IconVariant.Regular, SoundSourceSizeAndContent.Values[2]) { } }
            public class Space3d : Icon { public Space3d() : base("Space3d", IconVariant.Regular, Space3dSizeAndContent.Values[3]) { } }
            public class Sparkle : Icon { public Sparkle() : base("Sparkle", IconVariant.Regular, SparkleSizeAndContent.Values[3]) { } }
            public class SparkleCircle : Icon { public SparkleCircle() : base("SparkleCircle", IconVariant.Regular, SparkleCircleSizeAndContent.Values[3]) { } }
            public class Speaker0 : Icon { public Speaker0() : base("Speaker0", IconVariant.Regular, Speaker0SizeAndContent.Values[3]) { } }
            public class Speaker1 : Icon { public Speaker1() : base("Speaker1", IconVariant.Regular, Speaker1SizeAndContent.Values[3]) { } }
            public class Speaker2 : Icon { public Speaker2() : base("Speaker2", IconVariant.Regular, Speaker2SizeAndContent.Values[3]) { } }
            public class SpeakerBluetooth : Icon { public SpeakerBluetooth() : base("SpeakerBluetooth", IconVariant.Regular, SpeakerBluetoothSizeAndContent.Values[2]) { } }
            public class SpeakerMute : Icon { public SpeakerMute() : base("SpeakerMute", IconVariant.Regular, SpeakerMuteSizeAndContent.Values[3]) { } }
            public class SpeakerOff : Icon { public SpeakerOff() : base("SpeakerOff", IconVariant.Regular, SpeakerOffSizeAndContent.Values[3]) { } }
            public class SpeakerSettings : Icon { public SpeakerSettings() : base("SpeakerSettings", IconVariant.Regular, SpeakerSettingsSizeAndContent.Values[2]) { } }
            public class SpeakerUsb : Icon { public SpeakerUsb() : base("SpeakerUsb", IconVariant.Regular, SpeakerUsbSizeAndContent.Values[2]) { } }
            public class SplitHorizontal : Icon { public SplitHorizontal() : base("SplitHorizontal", IconVariant.Regular, SplitHorizontalSizeAndContent.Values[4]) { } }
            public class SplitVertical : Icon { public SplitVertical() : base("SplitVertical", IconVariant.Regular, SplitVerticalSizeAndContent.Values[4]) { } }
            public class Square : Icon { public Square() : base("Square", IconVariant.Regular, SquareSizeAndContent.Values[4]) { } }
            public class SquareArrowForward : Icon { public SquareArrowForward() : base("SquareArrowForward", IconVariant.Regular, SquareArrowForwardSizeAndContent.Values[3]) { } }
            public class SquareHint : Icon { public SquareHint() : base("SquareHint", IconVariant.Regular, SquareHintSizeAndContent.Values[3]) { } }
            public class SquareHintHexagon : Icon { public SquareHintHexagon() : base("SquareHintHexagon", IconVariant.Regular, SquareHintHexagonSizeAndContent.Values[4]) { } }
            public class SquareHintSparkles : Icon { public SquareHintSparkles() : base("SquareHintSparkles", IconVariant.Regular, SquareHintSparklesSizeAndContent.Values[3]) { } }
            public class SquareMultiple : Icon { public SquareMultiple() : base("SquareMultiple", IconVariant.Regular, SquareMultipleSizeAndContent.Values[3]) { } }
            public class Star : Icon { public Star() : base("Star", IconVariant.Regular, StarSizeAndContent.Values[4]) { } }
            public class StarAdd : Icon { public StarAdd() : base("StarAdd", IconVariant.Regular, StarAddSizeAndContent.Values[3]) { } }
            public class StarCheckmark : Icon { public StarCheckmark() : base("StarCheckmark", IconVariant.Regular, StarCheckmarkSizeAndContent.Values[3]) { } }
            public class StarDismiss : Icon { public StarDismiss() : base("StarDismiss", IconVariant.Regular, StarDismissSizeAndContent.Values[3]) { } }
            public class StarHalf : Icon { public StarHalf() : base("StarHalf", IconVariant.Regular, StarHalfSizeAndContent.Values[4]) { } }
            public class StarOff : Icon { public StarOff() : base("StarOff", IconVariant.Regular, StarOffSizeAndContent.Values[4]) { } }
            public class StarOneQuarter : Icon { public StarOneQuarter() : base("StarOneQuarter", IconVariant.Regular, StarOneQuarterSizeAndContent.Values[4]) { } }
            public class StarThreeQuarter : Icon { public StarThreeQuarter() : base("StarThreeQuarter", IconVariant.Regular, StarThreeQuarterSizeAndContent.Values[4]) { } }
            public class Subtract : Icon { public Subtract() : base("Subtract", IconVariant.Regular, SubtractSizeAndContent.Values[4]) { } }
            public class SubtractCircle : Icon { public SubtractCircle() : base("SubtractCircle", IconVariant.Regular, SubtractCircleSizeAndContent.Values[4]) { } }
            public class SubtractParentheses : Icon { public SubtractParentheses() : base("SubtractParentheses", IconVariant.Regular, SubtractParenthesesSizeAndContent.Values[3]) { } }
            public class Tab : Icon { public Tab() : base("Tab", IconVariant.Regular, TabSizeAndContent.Values[3]) { } }
            public class TabDesktop : Icon { public TabDesktop() : base("TabDesktop", IconVariant.Regular, TabDesktopSizeAndContent.Values[3]) { } }
            public class TabDesktopLink : Icon { public TabDesktopLink() : base("TabDesktopLink", IconVariant.Regular, TabDesktopLinkSizeAndContent.Values[3]) { } }
            public class TabInPrivate : Icon { public TabInPrivate() : base("TabInPrivate", IconVariant.Regular, TabInPrivateSizeAndContent.Values[3]) { } }
            public class Table : Icon { public Table() : base("Table", IconVariant.Regular, TableSizeAndContent.Values[3]) { } }
            public class TableAdd : Icon { public TableAdd() : base("TableAdd", IconVariant.Regular, TableAddSizeAndContent.Values[3]) { } }
            public class TableBottomRow : Icon { public TableBottomRow() : base("TableBottomRow", IconVariant.Regular, TableBottomRowSizeAndContent.Values[3]) { } }
            public class TableCellEdit : Icon { public TableCellEdit() : base("TableCellEdit", IconVariant.Regular, TableCellEditSizeAndContent.Values[3]) { } }
            public class TableCellsMerge : Icon { public TableCellsMerge() : base("TableCellsMerge", IconVariant.Regular, TableCellsMergeSizeAndContent.Values[3]) { } }
            public class TableCellsSplit : Icon { public TableCellsSplit() : base("TableCellsSplit", IconVariant.Regular, TableCellsSplitSizeAndContent.Values[3]) { } }
            public class TableDeleteColumn : Icon { public TableDeleteColumn() : base("TableDeleteColumn", IconVariant.Regular, TableDeleteColumnSizeAndContent.Values[3]) { } }
            public class TableDeleteRow : Icon { public TableDeleteRow() : base("TableDeleteRow", IconVariant.Regular, TableDeleteRowSizeAndContent.Values[3]) { } }
            public class TableDismiss : Icon { public TableDismiss() : base("TableDismiss", IconVariant.Regular, TableDismissSizeAndContent.Values[3]) { } }
            public class TableEdit : Icon { public TableEdit() : base("TableEdit", IconVariant.Regular, TableEditSizeAndContent.Values[3]) { } }
            public class TableFreezeColumn : Icon { public TableFreezeColumn() : base("TableFreezeColumn", IconVariant.Regular, TableFreezeColumnSizeAndContent.Values[3]) { } }
            public class TableFreezeColumnAndRow : Icon { public TableFreezeColumnAndRow() : base("TableFreezeColumnAndRow", IconVariant.Regular, TableFreezeColumnAndRowSizeAndContent.Values[3]) { } }
            public class TableFreezeRow : Icon { public TableFreezeRow() : base("TableFreezeRow", IconVariant.Regular, TableFreezeRowSizeAndContent.Values[3]) { } }
            public class TableInsertColumn : Icon { public TableInsertColumn() : base("TableInsertColumn", IconVariant.Regular, TableInsertColumnSizeAndContent.Values[3]) { } }
            public class TableInsertRow : Icon { public TableInsertRow() : base("TableInsertRow", IconVariant.Regular, TableInsertRowSizeAndContent.Values[3]) { } }
            public class TableLightning : Icon { public TableLightning() : base("TableLightning", IconVariant.Regular, TableLightningSizeAndContent.Values[3]) { } }
            public class TableLink : Icon { public TableLink() : base("TableLink", IconVariant.Regular, TableLinkSizeAndContent.Values[3]) { } }
            public class TableLock : Icon { public TableLock() : base("TableLock", IconVariant.Regular, TableLockSizeAndContent.Values[3]) { } }
            public class TableMoveAbove : Icon { public TableMoveAbove() : base("TableMoveAbove", IconVariant.Regular, TableMoveAboveSizeAndContent.Values[3]) { } }
            public class TableMoveBelow : Icon { public TableMoveBelow() : base("TableMoveBelow", IconVariant.Regular, TableMoveBelowSizeAndContent.Values[3]) { } }
            public class TableMoveLeft : Icon { public TableMoveLeft() : base("TableMoveLeft", IconVariant.Regular, TableMoveLeftSizeAndContent.Values[3]) { } }
            public class TableMoveRight : Icon { public TableMoveRight() : base("TableMoveRight", IconVariant.Regular, TableMoveRightSizeAndContent.Values[3]) { } }
            public class TableResizeColumn : Icon { public TableResizeColumn() : base("TableResizeColumn", IconVariant.Regular, TableResizeColumnSizeAndContent.Values[3]) { } }
            public class TableResizeRow : Icon { public TableResizeRow() : base("TableResizeRow", IconVariant.Regular, TableResizeRowSizeAndContent.Values[3]) { } }
            public class TableSettings : Icon { public TableSettings() : base("TableSettings", IconVariant.Regular, TableSettingsSizeAndContent.Values[3]) { } }
            public class TableSimple : Icon { public TableSimple() : base("TableSimple", IconVariant.Regular, TableSimpleSizeAndContent.Values[3]) { } }
            public class TableSimpleCheckmark : Icon { public TableSimpleCheckmark() : base("TableSimpleCheckmark", IconVariant.Regular, TableSimpleCheckmarkSizeAndContent.Values[3]) { } }
            public class TableSimpleExclude : Icon { public TableSimpleExclude() : base("TableSimpleExclude", IconVariant.Regular, TableSimpleExcludeSizeAndContent.Values[3]) { } }
            public class TableSimpleInclude : Icon { public TableSimpleInclude() : base("TableSimpleInclude", IconVariant.Regular, TableSimpleIncludeSizeAndContent.Values[3]) { } }
            public class TableStackAbove : Icon { public TableStackAbove() : base("TableStackAbove", IconVariant.Regular, TableStackAboveSizeAndContent.Values[3]) { } }
            public class TableStackBelow : Icon { public TableStackBelow() : base("TableStackBelow", IconVariant.Regular, TableStackBelowSizeAndContent.Values[3]) { } }
            public class TableStackLeft : Icon { public TableStackLeft() : base("TableStackLeft", IconVariant.Regular, TableStackLeftSizeAndContent.Values[3]) { } }
            public class TableStackRight : Icon { public TableStackRight() : base("TableStackRight", IconVariant.Regular, TableStackRightSizeAndContent.Values[3]) { } }
            public class TableSwitch : Icon { public TableSwitch() : base("TableSwitch", IconVariant.Regular, TableSwitchSizeAndContent.Values[3]) { } }
            public class Tag : Icon { public Tag() : base("Tag", IconVariant.Regular, TagSizeAndContent.Values[3]) { } }
            public class TasksApp : Icon { public TasksApp() : base("TasksApp", IconVariant.Regular, TasksAppSizeAndContent.Values[2]) { } }
            public class TeardropBottomRight : Icon { public TeardropBottomRight() : base("TeardropBottomRight", IconVariant.Regular, TeardropBottomRightSizeAndContent.Values[3]) { } }
            public class Tent : Icon { public Tent() : base("Tent", IconVariant.Regular, TentSizeAndContent.Values[4]) { } }
            public class TetrisApp : Icon { public TetrisApp() : base("TetrisApp", IconVariant.Regular, TetrisAppSizeAndContent.Values[3]) { } }
            public class TextArrowDownRightColumn : Icon { public TextArrowDownRightColumn() : base("TextArrowDownRightColumn", IconVariant.Regular, TextArrowDownRightColumnSizeAndContent.Values[3]) { } }
            public class TextDensity : Icon { public TextDensity() : base("TextDensity", IconVariant.Regular, TextDensitySizeAndContent.Values[3]) { } }
            public class TextDescription : Icon { public TextDescription() : base("TextDescription", IconVariant.Regular, TextDescriptionSizeAndContent.Values[3]) { } }
            public class TextGrammarLightning : Icon { public TextGrammarLightning() : base("TextGrammarLightning", IconVariant.Regular, TextGrammarLightningSizeAndContent.Values[3]) { } }
            public class TextT : Icon { public TextT() : base("TextT", IconVariant.Regular, TextTSizeAndContent.Values[4]) { } }
            public class ThumbLike : Icon { public ThumbLike() : base("ThumbLike", IconVariant.Regular, ThumbLikeSizeAndContent.Values[3]) { } }
            public class TicketDiagonal : Icon { public TicketDiagonal() : base("TicketDiagonal", IconVariant.Regular, TicketDiagonalSizeAndContent.Values[3]) { } }
            public class Timer : Icon { public Timer() : base("Timer", IconVariant.Regular, TimerSizeAndContent.Values[4]) { } }
            public class ToggleLeft : Icon { public ToggleLeft() : base("ToggleLeft", IconVariant.Regular, ToggleLeftSizeAndContent.Values[3]) { } }
            public class ToggleRight : Icon { public ToggleRight() : base("ToggleRight", IconVariant.Regular, ToggleRightSizeAndContent.Values[3]) { } }
            public class Toolbox : Icon { public Toolbox() : base("Toolbox", IconVariant.Regular, ToolboxSizeAndContent.Values[4]) { } }
            public class TreeDeciduous : Icon { public TreeDeciduous() : base("TreeDeciduous", IconVariant.Regular, TreeDeciduousSizeAndContent.Values[2]) { } }
            public class Triangle : Icon { public Triangle() : base("Triangle", IconVariant.Regular, TriangleSizeAndContent.Values[4]) { } }
            public class Trophy : Icon { public Trophy() : base("Trophy", IconVariant.Regular, TrophySizeAndContent.Values[3]) { } }
            public class TrophyLock : Icon { public TrophyLock() : base("TrophyLock", IconVariant.Regular, TrophyLockSizeAndContent.Values[3]) { } }
            public class TrophyOff : Icon { public TrophyOff() : base("TrophyOff", IconVariant.Regular, TrophyOffSizeAndContent.Values[3]) { } }
            public class Tv : Icon { public Tv() : base("Tv", IconVariant.Regular, TvSizeAndContent.Values[3]) { } }
            public class TvUsb : Icon { public TvUsb() : base("TvUsb", IconVariant.Regular, TvUsbSizeAndContent.Values[3]) { } }
            public class VehicleCab : Icon { public VehicleCab() : base("VehicleCab", IconVariant.Regular, VehicleCabSizeAndContent.Values[3]) { } }
            public class VehicleCableCar : Icon { public VehicleCableCar() : base("VehicleCableCar", IconVariant.Regular, VehicleCableCarSizeAndContent.Values[2]) { } }
            public class VehicleCar : Icon { public VehicleCar() : base("VehicleCar", IconVariant.Regular, VehicleCarSizeAndContent.Values[3]) { } }
            public class VehicleCarCollision : Icon { public VehicleCarCollision() : base("VehicleCarCollision", IconVariant.Regular, VehicleCarCollisionSizeAndContent.Values[3]) { } }
            public class Video : Icon { public Video() : base("Video", IconVariant.Regular, VideoSizeAndContent.Values[3]) { } }
            public class VideoBackgroundEffect : Icon { public VideoBackgroundEffect() : base("VideoBackgroundEffect", IconVariant.Regular, VideoBackgroundEffectSizeAndContent.Values[3]) { } }
            public class VideoBackgroundEffectHorizontal : Icon { public VideoBackgroundEffectHorizontal() : base("VideoBackgroundEffectHorizontal", IconVariant.Regular, VideoBackgroundEffectHorizontalSizeAndContent.Values[3]) { } }
            public class VideoChat : Icon { public VideoChat() : base("VideoChat", IconVariant.Regular, VideoChatSizeAndContent.Values[3]) { } }
            public class VideoClip : Icon { public VideoClip() : base("VideoClip", IconVariant.Regular, VideoClipSizeAndContent.Values[3]) { } }
            public class VideoClipOptimize : Icon { public VideoClipOptimize() : base("VideoClipOptimize", IconVariant.Regular, VideoClipOptimizeSizeAndContent.Values[3]) { } }
            public class VideoOff : Icon { public VideoOff() : base("VideoOff", IconVariant.Regular, VideoOffSizeAndContent.Values[2]) { } }
            public class VideoPerson : Icon { public VideoPerson() : base("VideoPerson", IconVariant.Regular, VideoPersonSizeAndContent.Values[4]) { } }
            public class VideoPersonClock : Icon { public VideoPersonClock() : base("VideoPersonClock", IconVariant.Regular, VideoPersonClockSizeAndContent.Values[3]) { } }
            public class VideoPersonPulse : Icon { public VideoPersonPulse() : base("VideoPersonPulse", IconVariant.Regular, VideoPersonPulseSizeAndContent.Values[3]) { } }
            public class VideoPersonSparkle : Icon { public VideoPersonSparkle() : base("VideoPersonSparkle", IconVariant.Regular, VideoPersonSparkleSizeAndContent.Values[3]) { } }
            public class VideoProhibited : Icon { public VideoProhibited() : base("VideoProhibited", IconVariant.Regular, VideoProhibitedSizeAndContent.Values[3]) { } }
            public class Voicemail : Icon { public Voicemail() : base("Voicemail", IconVariant.Regular, VoicemailSizeAndContent.Values[3]) { } }
            public class WalkieTalkie : Icon { public WalkieTalkie() : base("WalkieTalkie", IconVariant.Regular, WalkieTalkieSizeAndContent.Values[2]) { } }
            public class Wallet : Icon { public Wallet() : base("Wallet", IconVariant.Regular, WalletSizeAndContent.Values[3]) { } }
            public class Wand : Icon { public Wand() : base("Wand", IconVariant.Regular, WandSizeAndContent.Values[3]) { } }
            public class Warning : Icon { public Warning() : base("Warning", IconVariant.Regular, WarningSizeAndContent.Values[4]) { } }
            public class WeatherMoon : Icon { public WeatherMoon() : base("WeatherMoon", IconVariant.Regular, WeatherMoonSizeAndContent.Values[3]) { } }
            public class WeatherMoonOff : Icon { public WeatherMoonOff() : base("WeatherMoonOff", IconVariant.Regular, WeatherMoonOffSizeAndContent.Values[3]) { } }
            public class WeatherSunny : Icon { public WeatherSunny() : base("WeatherSunny", IconVariant.Regular, WeatherSunnySizeAndContent.Values[3]) { } }
            public class Window : Icon { public Window() : base("Window", IconVariant.Regular, WindowSizeAndContent.Values[3]) { } }
            public class WindowApps : Icon { public WindowApps() : base("WindowApps", IconVariant.Regular, WindowAppsSizeAndContent.Values[3]) { } }
            public class WindowWrench : Icon { public WindowWrench() : base("WindowWrench", IconVariant.Regular, WindowWrenchSizeAndContent.Values[3]) { } }
            public class XboxController : Icon { public XboxController() : base("XboxController", IconVariant.Regular, XboxControllerSizeAndContent.Values[3]) { } }
        }
    }
}

#pragma warning restore 1591
