// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

#pragma warning disable 1591

namespace Microsoft.FluentUI.AspNetCore.Components;

public static partial class Icons
{
    public static partial class Filled
    {
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public static partial class Size12
        {
            public class Add : Icon { public Add() : base("Add", IconVariant.Filled, AddSizeAndContent.Values[0]) { } }
            public class AddCircle : Icon { public AddCircle() : base("AddCircle", IconVariant.Filled, AddCircleSizeAndContent.Values[0]) { } }
            public class Alert : Icon { public Alert() : base("Alert", IconVariant.Filled, AlertSizeAndContent.Values[0]) { } }
            public class AlertSnooze : Icon { public AlertSnooze() : base("AlertSnooze", IconVariant.Filled, AlertSnoozeSizeAndContent.Values[0]) { } }
            public class ArrowBidirectionalUpDown : Icon { public ArrowBidirectionalUpDown() : base("ArrowBidirectionalUpDown", IconVariant.Filled, ArrowBidirectionalUpDownSizeAndContent.Values[0]) { } }
            public class ArrowCircleDown : Icon { public ArrowCircleDown() : base("ArrowCircleDown", IconVariant.Filled, ArrowCircleDownSizeAndContent.Values[0]) { } }
            public class ArrowCircleLeft : Icon { public ArrowCircleLeft() : base("ArrowCircleLeft", IconVariant.Filled, ArrowCircleLeftSizeAndContent.Values[0]) { } }
            public class ArrowCircleRight : Icon { public ArrowCircleRight() : base("ArrowCircleRight", IconVariant.Filled, ArrowCircleRightSizeAndContent.Values[0]) { } }
            public class ArrowCircleUp : Icon { public ArrowCircleUp() : base("ArrowCircleUp", IconVariant.Filled, ArrowCircleUpSizeAndContent.Values[0]) { } }
            public class ArrowClockwise : Icon { public ArrowClockwise() : base("ArrowClockwise", IconVariant.Filled, ArrowClockwiseSizeAndContent.Values[0]) { } }
            public class ArrowCounterclockwise : Icon { public ArrowCounterclockwise() : base("ArrowCounterclockwise", IconVariant.Filled, ArrowCounterclockwiseSizeAndContent.Values[0]) { } }
            public class ArrowDown : Icon { public ArrowDown() : base("ArrowDown", IconVariant.Filled, ArrowDownSizeAndContent.Values[0]) { } }
            public class ArrowLeft : Icon { public ArrowLeft() : base("ArrowLeft", IconVariant.Filled, ArrowLeftSizeAndContent.Values[0]) { } }
            public class ArrowNext : Icon { public ArrowNext() : base("ArrowNext", IconVariant.Filled, ArrowNextSizeAndContent.Values[0]) { } }
            public class ArrowPrevious : Icon { public ArrowPrevious() : base("ArrowPrevious", IconVariant.Filled, ArrowPreviousSizeAndContent.Values[0]) { } }
            public class ArrowRight : Icon { public ArrowRight() : base("ArrowRight", IconVariant.Filled, ArrowRightSizeAndContent.Values[0]) { } }
            public class ArrowStepIn : Icon { public ArrowStepIn() : base("ArrowStepIn", IconVariant.Filled, ArrowStepInSizeAndContent.Values[0]) { } }
            public class ArrowStepInLeft : Icon { public ArrowStepInLeft() : base("ArrowStepInLeft", IconVariant.Filled, ArrowStepInLeftSizeAndContent.Values[0]) { } }
            public class ArrowStepInRight : Icon { public ArrowStepInRight() : base("ArrowStepInRight", IconVariant.Filled, ArrowStepInRightSizeAndContent.Values[0]) { } }
            public class ArrowStepOut : Icon { public ArrowStepOut() : base("ArrowStepOut", IconVariant.Filled, ArrowStepOutSizeAndContent.Values[0]) { } }
            public class ArrowSync : Icon { public ArrowSync() : base("ArrowSync", IconVariant.Filled, ArrowSyncSizeAndContent.Values[0]) { } }
            public class ArrowSyncOff : Icon { public ArrowSyncOff() : base("ArrowSyncOff", IconVariant.Filled, ArrowSyncOffSizeAndContent.Values[0]) { } }
            public class ArrowTrending : Icon { public ArrowTrending() : base("ArrowTrending", IconVariant.Filled, ArrowTrendingSizeAndContent.Values[0]) { } }
            public class ArrowUp : Icon { public ArrowUp() : base("ArrowUp", IconVariant.Filled, ArrowUpSizeAndContent.Values[0]) { } }
            public class Attach : Icon { public Attach() : base("Attach", IconVariant.Filled, AttachSizeAndContent.Values[0]) { } }
            public class Backpack : Icon { public Backpack() : base("Backpack", IconVariant.Filled, BackpackSizeAndContent.Values[0]) { } }
            public class Balloon : Icon { public Balloon() : base("Balloon", IconVariant.Filled, BalloonSizeAndContent.Values[0]) { } }
            public class BezierCurveSquare : Icon { public BezierCurveSquare() : base("BezierCurveSquare", IconVariant.Filled, BezierCurveSquareSizeAndContent.Values[0]) { } }
            public class Briefcase : Icon { public Briefcase() : base("Briefcase", IconVariant.Filled, BriefcaseSizeAndContent.Values[0]) { } }
            public class BuildingMosque : Icon { public BuildingMosque() : base("BuildingMosque", IconVariant.Filled, BuildingMosqueSizeAndContent.Values[0]) { } }
            public class Calendar : Icon { public Calendar() : base("Calendar", IconVariant.Filled, CalendarSizeAndContent.Values[0]) { } }
            public class CalendarLtr : Icon { public CalendarLtr() : base("CalendarLtr", IconVariant.Filled, CalendarLtrSizeAndContent.Values[0]) { } }
            public class CalendarRtl : Icon { public CalendarRtl() : base("CalendarRtl", IconVariant.Filled, CalendarRtlSizeAndContent.Values[0]) { } }
            public class Call : Icon { public Call() : base("Call", IconVariant.Filled, CallSizeAndContent.Values[0]) { } }
            public class CallEnd : Icon { public CallEnd() : base("CallEnd", IconVariant.Filled, CallEndSizeAndContent.Values[0]) { } }
            public class CallMissed : Icon { public CallMissed() : base("CallMissed", IconVariant.Filled, CallMissedSizeAndContent.Values[0]) { } }
            public class CaretDown : Icon { public CaretDown() : base("CaretDown", IconVariant.Filled, CaretDownSizeAndContent.Values[0]) { } }
            public class CaretDownRight : Icon { public CaretDownRight() : base("CaretDownRight", IconVariant.Filled, CaretDownRightSizeAndContent.Values[0]) { } }
            public class CaretLeft : Icon { public CaretLeft() : base("CaretLeft", IconVariant.Filled, CaretLeftSizeAndContent.Values[0]) { } }
            public class CaretRight : Icon { public CaretRight() : base("CaretRight", IconVariant.Filled, CaretRightSizeAndContent.Values[0]) { } }
            public class CaretUp : Icon { public CaretUp() : base("CaretUp", IconVariant.Filled, CaretUpSizeAndContent.Values[0]) { } }
            public class ChannelShare : Icon { public ChannelShare() : base("ChannelShare", IconVariant.Filled, ChannelShareSizeAndContent.Values[0]) { } }
            public class Chat : Icon { public Chat() : base("Chat", IconVariant.Filled, ChatSizeAndContent.Values[0]) { } }
            public class ChatEmpty : Icon { public ChatEmpty() : base("ChatEmpty", IconVariant.Filled, ChatEmptySizeAndContent.Values[0]) { } }
            public class CheckboxUnchecked : Icon { public CheckboxUnchecked() : base("CheckboxUnchecked", IconVariant.Filled, CheckboxUncheckedSizeAndContent.Values[0]) { } }
            public class Checkmark : Icon { public Checkmark() : base("Checkmark", IconVariant.Filled, CheckmarkSizeAndContent.Values[0]) { } }
            public class CheckmarkCircle : Icon { public CheckmarkCircle() : base("CheckmarkCircle", IconVariant.Filled, CheckmarkCircleSizeAndContent.Values[0]) { } }
            public class ChevronCircleDown : Icon { public ChevronCircleDown() : base("ChevronCircleDown", IconVariant.Filled, ChevronCircleDownSizeAndContent.Values[0]) { } }
            public class ChevronCircleLeft : Icon { public ChevronCircleLeft() : base("ChevronCircleLeft", IconVariant.Filled, ChevronCircleLeftSizeAndContent.Values[0]) { } }
            public class ChevronCircleRight : Icon { public ChevronCircleRight() : base("ChevronCircleRight", IconVariant.Filled, ChevronCircleRightSizeAndContent.Values[0]) { } }
            public class ChevronCircleUp : Icon { public ChevronCircleUp() : base("ChevronCircleUp", IconVariant.Filled, ChevronCircleUpSizeAndContent.Values[0]) { } }
            public class ChevronDown : Icon { public ChevronDown() : base("ChevronDown", IconVariant.Filled, ChevronDownSizeAndContent.Values[0]) { } }
            public class ChevronLeft : Icon { public ChevronLeft() : base("ChevronLeft", IconVariant.Filled, ChevronLeftSizeAndContent.Values[0]) { } }
            public class ChevronRight : Icon { public ChevronRight() : base("ChevronRight", IconVariant.Filled, ChevronRightSizeAndContent.Values[0]) { } }
            public class ChevronUp : Icon { public ChevronUp() : base("ChevronUp", IconVariant.Filled, ChevronUpSizeAndContent.Values[0]) { } }
            public class Circle : Icon { public Circle() : base("Circle", IconVariant.Filled, CircleSizeAndContent.Values[0]) { } }
            public class CircleHalfFill : Icon { public CircleHalfFill() : base("CircleHalfFill", IconVariant.Filled, CircleHalfFillSizeAndContent.Values[0]) { } }
            public class CircleLine : Icon { public CircleLine() : base("CircleLine", IconVariant.Filled, CircleLineSizeAndContent.Values[0]) { } }
            public class Clock : Icon { public Clock() : base("Clock", IconVariant.Filled, ClockSizeAndContent.Values[0]) { } }
            public class Comment : Icon { public Comment() : base("Comment", IconVariant.Filled, CommentSizeAndContent.Values[0]) { } }
            public class CommentAdd : Icon { public CommentAdd() : base("CommentAdd", IconVariant.Filled, CommentAddSizeAndContent.Values[0]) { } }
            public class CommentArrowLeft : Icon { public CommentArrowLeft() : base("CommentArrowLeft", IconVariant.Filled, CommentArrowLeftSizeAndContent.Values[0]) { } }
            public class CommentArrowRight : Icon { public CommentArrowRight() : base("CommentArrowRight", IconVariant.Filled, CommentArrowRightSizeAndContent.Values[0]) { } }
            public class CommentCheckmark : Icon { public CommentCheckmark() : base("CommentCheckmark", IconVariant.Filled, CommentCheckmarkSizeAndContent.Values[0]) { } }
            public class Couch : Icon { public Couch() : base("Couch", IconVariant.Filled, CouchSizeAndContent.Values[0]) { } }
            public class Cube : Icon { public Cube() : base("Cube", IconVariant.Filled, CubeSizeAndContent.Values[0]) { } }
            public class Delete : Icon { public Delete() : base("Delete", IconVariant.Filled, DeleteSizeAndContent.Values[0]) { } }
            public class Dentist : Icon { public Dentist() : base("Dentist", IconVariant.Filled, DentistSizeAndContent.Values[0]) { } }
            public class Dismiss : Icon { public Dismiss() : base("Dismiss", IconVariant.Filled, DismissSizeAndContent.Values[0]) { } }
            public class DismissCircle : Icon { public DismissCircle() : base("DismissCircle", IconVariant.Filled, DismissCircleSizeAndContent.Values[0]) { } }
            public class Doctor : Icon { public Doctor() : base("Doctor", IconVariant.Filled, DoctorSizeAndContent.Values[0]) { } }
            public class Drop : Icon { public Drop() : base("Drop", IconVariant.Filled, DropSizeAndContent.Values[0]) { } }
            public class Edit : Icon { public Edit() : base("Edit", IconVariant.Filled, EditSizeAndContent.Values[0]) { } }
            public class EqualOff : Icon { public EqualOff() : base("EqualOff", IconVariant.Filled, EqualOffSizeAndContent.Values[0]) { } }
            public class ErrorCircle : Icon { public ErrorCircle() : base("ErrorCircle", IconVariant.Filled, ErrorCircleSizeAndContent.Values[0]) { } }
            public class Eye : Icon { public Eye() : base("Eye", IconVariant.Filled, EyeSizeAndContent.Values[0]) { } }
            public class Filter : Icon { public Filter() : base("Filter", IconVariant.Filled, FilterSizeAndContent.Values[0]) { } }
            public class FoodCake : Icon { public FoodCake() : base("FoodCake", IconVariant.Filled, FoodCakeSizeAndContent.Values[0]) { } }
            public class Glance : Icon { public Glance() : base("Glance", IconVariant.Filled, GlanceSizeAndContent.Values[0]) { } }
            public class GlanceDefault : Icon { public GlanceDefault() : base("GlanceDefault", IconVariant.Filled, GlanceDefaultSizeAndContent.Values[0]) { } }
            public class GlanceHorizontal : Icon { public GlanceHorizontal() : base("GlanceHorizontal", IconVariant.Filled, GlanceHorizontalSizeAndContent.Values[0]) { } }
            public class Globe : Icon { public Globe() : base("Globe", IconVariant.Filled, GlobeSizeAndContent.Values[0]) { } }
            public class HatGraduation : Icon { public HatGraduation() : base("HatGraduation", IconVariant.Filled, HatGraduationSizeAndContent.Values[0]) { } }
            public class Heart : Icon { public Heart() : base("Heart", IconVariant.Filled, HeartSizeAndContent.Values[0]) { } }
            public class Hexagon : Icon { public Hexagon() : base("Hexagon", IconVariant.Filled, HexagonSizeAndContent.Values[0]) { } }
            public class HexagonThree : Icon { public HexagonThree() : base("HexagonThree", IconVariant.Filled, HexagonThreeSizeAndContent.Values[0]) { } }
            public class Home : Icon { public Home() : base("Home", IconVariant.Filled, HomeSizeAndContent.Values[0]) { } }
            public class Important : Icon { public Important() : base("Important", IconVariant.Filled, ImportantSizeAndContent.Values[0]) { } }
            public class Info : Icon { public Info() : base("Info", IconVariant.Filled, InfoSizeAndContent.Values[0]) { } }
            public class Link : Icon { public Link() : base("Link", IconVariant.Filled, LinkSizeAndContent.Values[0]) { } }
            public class LinkSquare : Icon { public LinkSquare() : base("LinkSquare", IconVariant.Filled, LinkSquareSizeAndContent.Values[0]) { } }
            public class Location : Icon { public Location() : base("Location", IconVariant.Filled, LocationSizeAndContent.Values[0]) { } }
            public class LocationArrow : Icon { public LocationArrow() : base("LocationArrow", IconVariant.Filled, LocationArrowSizeAndContent.Values[0]) { } }
            public class LockClosed : Icon { public LockClosed() : base("LockClosed", IconVariant.Filled, LockClosedSizeAndContent.Values[0]) { } }
            public class LockOpen : Icon { public LockOpen() : base("LockOpen", IconVariant.Filled, LockOpenSizeAndContent.Values[0]) { } }
            public class Mail : Icon { public Mail() : base("Mail", IconVariant.Filled, MailSizeAndContent.Values[0]) { } }
            public class MailUnread : Icon { public MailUnread() : base("MailUnread", IconVariant.Filled, MailUnreadSizeAndContent.Values[0]) { } }
            public class Mention : Icon { public Mention() : base("Mention", IconVariant.Filled, MentionSizeAndContent.Values[0]) { } }
            public class MicOff : Icon { public MicOff() : base("MicOff", IconVariant.Filled, MicOffSizeAndContent.Values[0]) { } }
            public class MyLocation : Icon { public MyLocation() : base("MyLocation", IconVariant.Filled, MyLocationSizeAndContent.Values[0]) { } }
            public class Notepad : Icon { public Notepad() : base("Notepad", IconVariant.Filled, NotepadSizeAndContent.Values[0]) { } }
            public class Open : Icon { public Open() : base("Open", IconVariant.Filled, OpenSizeAndContent.Values[0]) { } }
            public class Organization : Icon { public Organization() : base("Organization", IconVariant.Filled, OrganizationSizeAndContent.Values[0]) { } }
            public class Pause : Icon { public Pause() : base("Pause", IconVariant.Filled, PauseSizeAndContent.Values[0]) { } }
            public class People : Icon { public People() : base("People", IconVariant.Filled, PeopleSizeAndContent.Values[0]) { } }
            public class Person : Icon { public Person() : base("Person", IconVariant.Filled, PersonSizeAndContent.Values[0]) { } }
            public class PersonCircle : Icon { public PersonCircle() : base("PersonCircle", IconVariant.Filled, PersonCircleSizeAndContent.Values[0]) { } }
            public class Phone : Icon { public Phone() : base("Phone", IconVariant.Filled, PhoneSizeAndContent.Values[0]) { } }
            public class Pin : Icon { public Pin() : base("Pin", IconVariant.Filled, PinSizeAndContent.Values[0]) { } }
            public class Play : Icon { public Play() : base("Play", IconVariant.Filled, PlaySizeAndContent.Values[0]) { } }
            public class Premium : Icon { public Premium() : base("Premium", IconVariant.Filled, PremiumSizeAndContent.Values[0]) { } }
            public class PresenceAvailable : Icon { public PresenceAvailable() : base("PresenceAvailable", IconVariant.Filled, PresenceAvailableSizeAndContent.Values[1]) { } }
            public class PresenceAway : Icon { public PresenceAway() : base("PresenceAway", IconVariant.Filled, PresenceAwaySizeAndContent.Values[1]) { } }
            public class PresenceBusy : Icon { public PresenceBusy() : base("PresenceBusy", IconVariant.Filled, PresenceBusySizeAndContent.Values[1]) { } }
            public class PresenceDnd : Icon { public PresenceDnd() : base("PresenceDnd", IconVariant.Filled, PresenceDndSizeAndContent.Values[1]) { } }
            public class Prohibited : Icon { public Prohibited() : base("Prohibited", IconVariant.Filled, ProhibitedSizeAndContent.Values[0]) { } }
            public class QuestionCircle : Icon { public QuestionCircle() : base("QuestionCircle", IconVariant.Filled, QuestionCircleSizeAndContent.Values[0]) { } }
            public class Record : Icon { public Record() : base("Record", IconVariant.Filled, RecordSizeAndContent.Values[0]) { } }
            public class RecordStop : Icon { public RecordStop() : base("RecordStop", IconVariant.Filled, RecordStopSizeAndContent.Values[0]) { } }
            public class RectangleLandscape : Icon { public RectangleLandscape() : base("RectangleLandscape", IconVariant.Filled, RectangleLandscapeSizeAndContent.Values[0]) { } }
            public class Reward : Icon { public Reward() : base("Reward", IconVariant.Filled, RewardSizeAndContent.Values[0]) { } }
            public class Ribbon : Icon { public Ribbon() : base("Ribbon", IconVariant.Filled, RibbonSizeAndContent.Values[0]) { } }
            public class RibbonOff : Icon { public RibbonOff() : base("RibbonOff", IconVariant.Filled, RibbonOffSizeAndContent.Values[0]) { } }
            public class ScanDash : Icon { public ScanDash() : base("ScanDash", IconVariant.Filled, ScanDashSizeAndContent.Values[0]) { } }
            public class Search : Icon { public Search() : base("Search", IconVariant.Filled, SearchSizeAndContent.Values[0]) { } }
            public class Server : Icon { public Server() : base("Server", IconVariant.Filled, ServerSizeAndContent.Values[0]) { } }
            public class Shield : Icon { public Shield() : base("Shield", IconVariant.Filled, ShieldSizeAndContent.Values[0]) { } }
            public class SlashForward : Icon { public SlashForward() : base("SlashForward", IconVariant.Filled, SlashForwardSizeAndContent.Values[0]) { } }
            public class SplitHorizontal : Icon { public SplitHorizontal() : base("SplitHorizontal", IconVariant.Filled, SplitHorizontalSizeAndContent.Values[0]) { } }
            public class SplitVertical : Icon { public SplitVertical() : base("SplitVertical", IconVariant.Filled, SplitVerticalSizeAndContent.Values[0]) { } }
            public class Square : Icon { public Square() : base("Square", IconVariant.Filled, SquareSizeAndContent.Values[0]) { } }
            public class SquareHintHexagon : Icon { public SquareHintHexagon() : base("SquareHintHexagon", IconVariant.Filled, SquareHintHexagonSizeAndContent.Values[0]) { } }
            public class SquareShadow : Icon { public SquareShadow() : base("SquareShadow", IconVariant.Filled, SquareShadowSizeAndContent.Values[0]) { } }
            public class Star : Icon { public Star() : base("Star", IconVariant.Filled, StarSizeAndContent.Values[0]) { } }
            public class StarHalf : Icon { public StarHalf() : base("StarHalf", IconVariant.Filled, StarHalfSizeAndContent.Values[0]) { } }
            public class StarOff : Icon { public StarOff() : base("StarOff", IconVariant.Filled, StarOffSizeAndContent.Values[0]) { } }
            public class StarOneQuarter : Icon { public StarOneQuarter() : base("StarOneQuarter", IconVariant.Filled, StarOneQuarterSizeAndContent.Values[0]) { } }
            public class StarThreeQuarter : Icon { public StarThreeQuarter() : base("StarThreeQuarter", IconVariant.Filled, StarThreeQuarterSizeAndContent.Values[0]) { } }
            public class Status : Icon { public Status() : base("Status", IconVariant.Filled, StatusSizeAndContent.Values[0]) { } }
            public class Sticker : Icon { public Sticker() : base("Sticker", IconVariant.Filled, StickerSizeAndContent.Values[0]) { } }
            public class Subtract : Icon { public Subtract() : base("Subtract", IconVariant.Filled, SubtractSizeAndContent.Values[0]) { } }
            public class SubtractCircle : Icon { public SubtractCircle() : base("SubtractCircle", IconVariant.Filled, SubtractCircleSizeAndContent.Values[0]) { } }
            public class Tablet : Icon { public Tablet() : base("Tablet", IconVariant.Filled, TabletSizeAndContent.Values[0]) { } }
            public class Tent : Icon { public Tent() : base("Tent", IconVariant.Filled, TentSizeAndContent.Values[0]) { } }
            public class Text : Icon { public Text() : base("Text", IconVariant.Filled, TextSizeAndContent.Values[0]) { } }
            public class TextT : Icon { public TextT() : base("TextT", IconVariant.Filled, TextTSizeAndContent.Values[0]) { } }
            public class Timer : Icon { public Timer() : base("Timer", IconVariant.Filled, TimerSizeAndContent.Values[0]) { } }
            public class Toolbox : Icon { public Toolbox() : base("Toolbox", IconVariant.Filled, ToolboxSizeAndContent.Values[0]) { } }
            public class Triangle : Icon { public Triangle() : base("Triangle", IconVariant.Filled, TriangleSizeAndContent.Values[0]) { } }
            public class TriangleDown : Icon { public TriangleDown() : base("TriangleDown", IconVariant.Filled, TriangleDownSizeAndContent.Values[0]) { } }
            public class TriangleLeft : Icon { public TriangleLeft() : base("TriangleLeft", IconVariant.Filled, TriangleLeftSizeAndContent.Values[0]) { } }
            public class TriangleRight : Icon { public TriangleRight() : base("TriangleRight", IconVariant.Filled, TriangleRightSizeAndContent.Values[0]) { } }
            public class VideoPerson : Icon { public VideoPerson() : base("VideoPerson", IconVariant.Filled, VideoPersonSizeAndContent.Values[0]) { } }
            public class Warning : Icon { public Warning() : base("Warning", IconVariant.Filled, WarningSizeAndContent.Values[0]) { } }
        }
    }
}

#pragma warning restore 1591
