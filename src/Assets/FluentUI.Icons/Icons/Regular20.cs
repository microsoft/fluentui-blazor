// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

#pragma warning disable 1591

namespace Microsoft.FluentUI.AspNetCore.Components;

public static partial class Icons
{
    public static partial class Regular
    {
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public static partial class Size20
        {
            public class Accessibility : Icon { public Accessibility() : base("Accessibility", IconVariant.Regular, AccessibilitySizeAndContent.Values[1]) { } }
            public class AccessibilityCheckmark : Icon { public AccessibilityCheckmark() : base("AccessibilityCheckmark", IconVariant.Regular, AccessibilityCheckmarkSizeAndContent.Values[0]) { } }
            public class AccessTime : Icon { public AccessTime() : base("AccessTime", IconVariant.Regular, AccessTimeSizeAndContent.Values[0]) { } }
            public class Add : Icon { public Add() : base("Add", IconVariant.Regular, AddSizeAndContent.Values[2]) { } }
            public class AddCircle : Icon { public AddCircle() : base("AddCircle", IconVariant.Regular, AddCircleSizeAndContent.Values[2]) { } }
            public class AddSquare : Icon { public AddSquare() : base("AddSquare", IconVariant.Regular, AddSquareSizeAndContent.Values[1]) { } }
            public class AddSquareMultiple : Icon { public AddSquareMultiple() : base("AddSquareMultiple", IconVariant.Regular, AddSquareMultipleSizeAndContent.Values[1]) { } }
            public class AddSubtractCircle : Icon { public AddSubtractCircle() : base("AddSubtractCircle", IconVariant.Regular, AddSubtractCircleSizeAndContent.Values[1]) { } }
            public class Airplane : Icon { public Airplane() : base("Airplane", IconVariant.Regular, AirplaneSizeAndContent.Values[0]) { } }
            public class AirplaneLanding : Icon { public AirplaneLanding() : base("AirplaneLanding", IconVariant.Regular, AirplaneLandingSizeAndContent.Values[1]) { } }
            public class AirplaneTakeOff : Icon { public AirplaneTakeOff() : base("AirplaneTakeOff", IconVariant.Regular, AirplaneTakeOffSizeAndContent.Values[1]) { } }
            public class Album : Icon { public Album() : base("Album", IconVariant.Regular, AlbumSizeAndContent.Values[0]) { } }
            public class AlbumAdd : Icon { public AlbumAdd() : base("AlbumAdd", IconVariant.Regular, AlbumAddSizeAndContent.Values[0]) { } }
            public class Alert : Icon { public Alert() : base("Alert", IconVariant.Regular, AlertSizeAndContent.Values[2]) { } }
            public class AlertBadge : Icon { public AlertBadge() : base("AlertBadge", IconVariant.Regular, AlertBadgeSizeAndContent.Values[1]) { } }
            public class AlertOff : Icon { public AlertOff() : base("AlertOff", IconVariant.Regular, AlertOffSizeAndContent.Values[1]) { } }
            public class AlertOn : Icon { public AlertOn() : base("AlertOn", IconVariant.Regular, AlertOnSizeAndContent.Values[1]) { } }
            public class AlertSnooze : Icon { public AlertSnooze() : base("AlertSnooze", IconVariant.Regular, AlertSnoozeSizeAndContent.Values[2]) { } }
            public class AlertUrgent : Icon { public AlertUrgent() : base("AlertUrgent", IconVariant.Regular, AlertUrgentSizeAndContent.Values[1]) { } }
            public class AlignBottom : Icon { public AlignBottom() : base("AlignBottom", IconVariant.Regular, AlignBottomSizeAndContent.Values[1]) { } }
            public class AlignCenterHorizontal : Icon { public AlignCenterHorizontal() : base("AlignCenterHorizontal", IconVariant.Regular, AlignCenterHorizontalSizeAndContent.Values[1]) { } }
            public class AlignCenterVertical : Icon { public AlignCenterVertical() : base("AlignCenterVertical", IconVariant.Regular, AlignCenterVerticalSizeAndContent.Values[1]) { } }
            public class AlignEndHorizontal : Icon { public AlignEndHorizontal() : base("AlignEndHorizontal", IconVariant.Regular, AlignEndHorizontalSizeAndContent.Values[0]) { } }
            public class AlignEndVertical : Icon { public AlignEndVertical() : base("AlignEndVertical", IconVariant.Regular, AlignEndVerticalSizeAndContent.Values[0]) { } }
            public class AlignLeft : Icon { public AlignLeft() : base("AlignLeft", IconVariant.Regular, AlignLeftSizeAndContent.Values[1]) { } }
            public class AlignRight : Icon { public AlignRight() : base("AlignRight", IconVariant.Regular, AlignRightSizeAndContent.Values[1]) { } }
            public class AlignSpaceAroundHorizontal : Icon { public AlignSpaceAroundHorizontal() : base("AlignSpaceAroundHorizontal", IconVariant.Regular, AlignSpaceAroundHorizontalSizeAndContent.Values[0]) { } }
            public class AlignSpaceAroundVertical : Icon { public AlignSpaceAroundVertical() : base("AlignSpaceAroundVertical", IconVariant.Regular, AlignSpaceAroundVerticalSizeAndContent.Values[0]) { } }
            public class AlignSpaceBetweenHorizontal : Icon { public AlignSpaceBetweenHorizontal() : base("AlignSpaceBetweenHorizontal", IconVariant.Regular, AlignSpaceBetweenHorizontalSizeAndContent.Values[0]) { } }
            public class AlignSpaceBetweenVertical : Icon { public AlignSpaceBetweenVertical() : base("AlignSpaceBetweenVertical", IconVariant.Regular, AlignSpaceBetweenVerticalSizeAndContent.Values[0]) { } }
            public class AlignSpaceEvenlyHorizontal : Icon { public AlignSpaceEvenlyHorizontal() : base("AlignSpaceEvenlyHorizontal", IconVariant.Regular, AlignSpaceEvenlyHorizontalSizeAndContent.Values[0]) { } }
            public class AlignSpaceEvenlyVertical : Icon { public AlignSpaceEvenlyVertical() : base("AlignSpaceEvenlyVertical", IconVariant.Regular, AlignSpaceEvenlyVerticalSizeAndContent.Values[0]) { } }
            public class AlignSpaceFitVertical : Icon { public AlignSpaceFitVertical() : base("AlignSpaceFitVertical", IconVariant.Regular, AlignSpaceFitVerticalSizeAndContent.Values[0]) { } }
            public class AlignStartHorizontal : Icon { public AlignStartHorizontal() : base("AlignStartHorizontal", IconVariant.Regular, AlignStartHorizontalSizeAndContent.Values[0]) { } }
            public class AlignStartVertical : Icon { public AlignStartVertical() : base("AlignStartVertical", IconVariant.Regular, AlignStartVerticalSizeAndContent.Values[0]) { } }
            public class AlignStraighten : Icon { public AlignStraighten() : base("AlignStraighten", IconVariant.Regular, AlignStraightenSizeAndContent.Values[0]) { } }
            public class AlignStretchHorizontal : Icon { public AlignStretchHorizontal() : base("AlignStretchHorizontal", IconVariant.Regular, AlignStretchHorizontalSizeAndContent.Values[1]) { } }
            public class AlignStretchVertical : Icon { public AlignStretchVertical() : base("AlignStretchVertical", IconVariant.Regular, AlignStretchVerticalSizeAndContent.Values[1]) { } }
            public class AlignTop : Icon { public AlignTop() : base("AlignTop", IconVariant.Regular, AlignTopSizeAndContent.Values[1]) { } }
            public class AnimalCat : Icon { public AnimalCat() : base("AnimalCat", IconVariant.Regular, AnimalCatSizeAndContent.Values[1]) { } }
            public class AnimalDog : Icon { public AnimalDog() : base("AnimalDog", IconVariant.Regular, AnimalDogSizeAndContent.Values[1]) { } }
            public class AnimalRabbit : Icon { public AnimalRabbit() : base("AnimalRabbit", IconVariant.Regular, AnimalRabbitSizeAndContent.Values[1]) { } }
            public class AnimalRabbitOff : Icon { public AnimalRabbitOff() : base("AnimalRabbitOff", IconVariant.Regular, AnimalRabbitOffSizeAndContent.Values[0]) { } }
            public class AnimalTurtle : Icon { public AnimalTurtle() : base("AnimalTurtle", IconVariant.Regular, AnimalTurtleSizeAndContent.Values[1]) { } }
            public class AppFolder : Icon { public AppFolder() : base("AppFolder", IconVariant.Regular, AppFolderSizeAndContent.Values[1]) { } }
            public class AppGeneric : Icon { public AppGeneric() : base("AppGeneric", IconVariant.Regular, AppGenericSizeAndContent.Values[0]) { } }
            public class AppRecent : Icon { public AppRecent() : base("AppRecent", IconVariant.Regular, AppRecentSizeAndContent.Values[0]) { } }
            public class ApprovalsApp : Icon { public ApprovalsApp() : base("ApprovalsApp", IconVariant.Regular, ApprovalsAppSizeAndContent.Values[1]) { } }
            public class Apps : Icon { public Apps() : base("Apps", IconVariant.Regular, AppsSizeAndContent.Values[1]) { } }
            public class AppsAddIn : Icon { public AppsAddIn() : base("AppsAddIn", IconVariant.Regular, AppsAddInSizeAndContent.Values[1]) { } }
            public class AppsList : Icon { public AppsList() : base("AppsList", IconVariant.Regular, AppsListSizeAndContent.Values[0]) { } }
            public class AppsListDetail : Icon { public AppsListDetail() : base("AppsListDetail", IconVariant.Regular, AppsListDetailSizeAndContent.Values[0]) { } }
            public class AppTitle : Icon { public AppTitle() : base("AppTitle", IconVariant.Regular, AppTitleSizeAndContent.Values[0]) { } }
            public class Archive : Icon { public Archive() : base("Archive", IconVariant.Regular, ArchiveSizeAndContent.Values[1]) { } }
            public class ArchiveArrowBack : Icon { public ArchiveArrowBack() : base("ArchiveArrowBack", IconVariant.Regular, ArchiveArrowBackSizeAndContent.Values[1]) { } }
            public class ArchiveMultiple : Icon { public ArchiveMultiple() : base("ArchiveMultiple", IconVariant.Regular, ArchiveMultipleSizeAndContent.Values[1]) { } }
            public class ArchiveSettings : Icon { public ArchiveSettings() : base("ArchiveSettings", IconVariant.Regular, ArchiveSettingsSizeAndContent.Values[1]) { } }
            public class ArrowAutofitContent : Icon { public ArrowAutofitContent() : base("ArrowAutofitContent", IconVariant.Regular, ArrowAutofitContentSizeAndContent.Values[0]) { } }
            public class ArrowAutofitDown : Icon { public ArrowAutofitDown() : base("ArrowAutofitDown", IconVariant.Regular, ArrowAutofitDownSizeAndContent.Values[0]) { } }
            public class ArrowAutofitHeight : Icon { public ArrowAutofitHeight() : base("ArrowAutofitHeight", IconVariant.Regular, ArrowAutofitHeightSizeAndContent.Values[0]) { } }
            public class ArrowAutofitHeightDotted : Icon { public ArrowAutofitHeightDotted() : base("ArrowAutofitHeightDotted", IconVariant.Regular, ArrowAutofitHeightDottedSizeAndContent.Values[0]) { } }
            public class ArrowAutofitHeightIn : Icon { public ArrowAutofitHeightIn() : base("ArrowAutofitHeightIn", IconVariant.Regular, ArrowAutofitHeightInSizeAndContent.Values[0]) { } }
            public class ArrowAutofitUp : Icon { public ArrowAutofitUp() : base("ArrowAutofitUp", IconVariant.Regular, ArrowAutofitUpSizeAndContent.Values[0]) { } }
            public class ArrowAutofitWidth : Icon { public ArrowAutofitWidth() : base("ArrowAutofitWidth", IconVariant.Regular, ArrowAutofitWidthSizeAndContent.Values[0]) { } }
            public class ArrowAutofitWidthDotted : Icon { public ArrowAutofitWidthDotted() : base("ArrowAutofitWidthDotted", IconVariant.Regular, ArrowAutofitWidthDottedSizeAndContent.Values[0]) { } }
            public class ArrowBetweenDown : Icon { public ArrowBetweenDown() : base("ArrowBetweenDown", IconVariant.Regular, ArrowBetweenDownSizeAndContent.Values[0]) { } }
            public class ArrowBetweenUp : Icon { public ArrowBetweenUp() : base("ArrowBetweenUp", IconVariant.Regular, ArrowBetweenUpSizeAndContent.Values[0]) { } }
            public class ArrowBidirectionalLeftRight : Icon { public ArrowBidirectionalLeftRight() : base("ArrowBidirectionalLeftRight", IconVariant.Regular, ArrowBidirectionalLeftRightSizeAndContent.Values[1]) { } }
            public class ArrowBidirectionalUpDown : Icon { public ArrowBidirectionalUpDown() : base("ArrowBidirectionalUpDown", IconVariant.Regular, ArrowBidirectionalUpDownSizeAndContent.Values[2]) { } }
            public class ArrowBounce : Icon { public ArrowBounce() : base("ArrowBounce", IconVariant.Regular, ArrowBounceSizeAndContent.Values[1]) { } }
            public class ArrowCircleDown : Icon { public ArrowCircleDown() : base("ArrowCircleDown", IconVariant.Regular, ArrowCircleDownSizeAndContent.Values[2]) { } }
            public class ArrowCircleDownDouble : Icon { public ArrowCircleDownDouble() : base("ArrowCircleDownDouble", IconVariant.Regular, ArrowCircleDownDoubleSizeAndContent.Values[0]) { } }
            public class ArrowCircleDownRight : Icon { public ArrowCircleDownRight() : base("ArrowCircleDownRight", IconVariant.Regular, ArrowCircleDownRightSizeAndContent.Values[1]) { } }
            public class ArrowCircleDownSplit : Icon { public ArrowCircleDownSplit() : base("ArrowCircleDownSplit", IconVariant.Regular, ArrowCircleDownSplitSizeAndContent.Values[0]) { } }
            public class ArrowCircleDownUp : Icon { public ArrowCircleDownUp() : base("ArrowCircleDownUp", IconVariant.Regular, ArrowCircleDownUpSizeAndContent.Values[0]) { } }
            public class ArrowCircleLeft : Icon { public ArrowCircleLeft() : base("ArrowCircleLeft", IconVariant.Regular, ArrowCircleLeftSizeAndContent.Values[2]) { } }
            public class ArrowCircleRight : Icon { public ArrowCircleRight() : base("ArrowCircleRight", IconVariant.Regular, ArrowCircleRightSizeAndContent.Values[2]) { } }
            public class ArrowCircleUp : Icon { public ArrowCircleUp() : base("ArrowCircleUp", IconVariant.Regular, ArrowCircleUpSizeAndContent.Values[2]) { } }
            public class ArrowCircleUpLeft : Icon { public ArrowCircleUpLeft() : base("ArrowCircleUpLeft", IconVariant.Regular, ArrowCircleUpLeftSizeAndContent.Values[0]) { } }
            public class ArrowCircleUpRight : Icon { public ArrowCircleUpRight() : base("ArrowCircleUpRight", IconVariant.Regular, ArrowCircleUpRightSizeAndContent.Values[0]) { } }
            public class ArrowClockwise : Icon { public ArrowClockwise() : base("ArrowClockwise", IconVariant.Regular, ArrowClockwiseSizeAndContent.Values[2]) { } }
            public class ArrowClockwiseDashes : Icon { public ArrowClockwiseDashes() : base("ArrowClockwiseDashes", IconVariant.Regular, ArrowClockwiseDashesSizeAndContent.Values[1]) { } }
            public class ArrowCollapseAll : Icon { public ArrowCollapseAll() : base("ArrowCollapseAll", IconVariant.Regular, ArrowCollapseAllSizeAndContent.Values[0]) { } }
            public class ArrowCounterclockwise : Icon { public ArrowCounterclockwise() : base("ArrowCounterclockwise", IconVariant.Regular, ArrowCounterclockwiseSizeAndContent.Values[2]) { } }
            public class ArrowCounterclockwiseDashes : Icon { public ArrowCounterclockwiseDashes() : base("ArrowCounterclockwiseDashes", IconVariant.Regular, ArrowCounterclockwiseDashesSizeAndContent.Values[0]) { } }
            public class ArrowCurveDownLeft : Icon { public ArrowCurveDownLeft() : base("ArrowCurveDownLeft", IconVariant.Regular, ArrowCurveDownLeftSizeAndContent.Values[1]) { } }
            public class ArrowCurveDownRight : Icon { public ArrowCurveDownRight() : base("ArrowCurveDownRight", IconVariant.Regular, ArrowCurveDownRightSizeAndContent.Values[0]) { } }
            public class ArrowCurveUpLeft : Icon { public ArrowCurveUpLeft() : base("ArrowCurveUpLeft", IconVariant.Regular, ArrowCurveUpLeftSizeAndContent.Values[0]) { } }
            public class ArrowCurveUpRight : Icon { public ArrowCurveUpRight() : base("ArrowCurveUpRight", IconVariant.Regular, ArrowCurveUpRightSizeAndContent.Values[0]) { } }
            public class ArrowDown : Icon { public ArrowDown() : base("ArrowDown", IconVariant.Regular, ArrowDownSizeAndContent.Values[2]) { } }
            public class ArrowDownExclamation : Icon { public ArrowDownExclamation() : base("ArrowDownExclamation", IconVariant.Regular, ArrowDownExclamationSizeAndContent.Values[1]) { } }
            public class ArrowDownLeft : Icon { public ArrowDownLeft() : base("ArrowDownLeft", IconVariant.Regular, ArrowDownLeftSizeAndContent.Values[1]) { } }
            public class ArrowDownload : Icon { public ArrowDownload() : base("ArrowDownload", IconVariant.Regular, ArrowDownloadSizeAndContent.Values[1]) { } }
            public class ArrowDownloadOff : Icon { public ArrowDownloadOff() : base("ArrowDownloadOff", IconVariant.Regular, ArrowDownloadOffSizeAndContent.Values[1]) { } }
            public class ArrowEject : Icon { public ArrowEject() : base("ArrowEject", IconVariant.Regular, ArrowEjectSizeAndContent.Values[0]) { } }
            public class ArrowEnter : Icon { public ArrowEnter() : base("ArrowEnter", IconVariant.Regular, ArrowEnterSizeAndContent.Values[1]) { } }
            public class ArrowEnterLeft : Icon { public ArrowEnterLeft() : base("ArrowEnterLeft", IconVariant.Regular, ArrowEnterLeftSizeAndContent.Values[0]) { } }
            public class ArrowEnterUp : Icon { public ArrowEnterUp() : base("ArrowEnterUp", IconVariant.Regular, ArrowEnterUpSizeAndContent.Values[0]) { } }
            public class ArrowExit : Icon { public ArrowExit() : base("ArrowExit", IconVariant.Regular, ArrowExitSizeAndContent.Values[0]) { } }
            public class ArrowExpand : Icon { public ArrowExpand() : base("ArrowExpand", IconVariant.Regular, ArrowExpandSizeAndContent.Values[1]) { } }
            public class ArrowExport : Icon { public ArrowExport() : base("ArrowExport", IconVariant.Regular, ArrowExportSizeAndContent.Values[1]) { } }
            public class ArrowExportLtr : Icon { public ArrowExportLtr() : base("ArrowExportLtr", IconVariant.Regular, ArrowExportLtrSizeAndContent.Values[1]) { } }
            public class ArrowExportRtl : Icon { public ArrowExportRtl() : base("ArrowExportRtl", IconVariant.Regular, ArrowExportRtlSizeAndContent.Values[1]) { } }
            public class ArrowExportUp : Icon { public ArrowExportUp() : base("ArrowExportUp", IconVariant.Regular, ArrowExportUpSizeAndContent.Values[1]) { } }
            public class ArrowFit : Icon { public ArrowFit() : base("ArrowFit", IconVariant.Regular, ArrowFitSizeAndContent.Values[1]) { } }
            public class ArrowFitIn : Icon { public ArrowFitIn() : base("ArrowFitIn", IconVariant.Regular, ArrowFitInSizeAndContent.Values[1]) { } }
            public class ArrowFlowDiagonalUpRight : Icon { public ArrowFlowDiagonalUpRight() : base("ArrowFlowDiagonalUpRight", IconVariant.Regular, ArrowFlowDiagonalUpRightSizeAndContent.Values[1]) { } }
            public class ArrowFlowUpRight : Icon { public ArrowFlowUpRight() : base("ArrowFlowUpRight", IconVariant.Regular, ArrowFlowUpRightSizeAndContent.Values[1]) { } }
            public class ArrowFlowUpRightRectangleMultiple : Icon { public ArrowFlowUpRightRectangleMultiple() : base("ArrowFlowUpRightRectangleMultiple", IconVariant.Regular, ArrowFlowUpRightRectangleMultipleSizeAndContent.Values[0]) { } }
            public class ArrowForward : Icon { public ArrowForward() : base("ArrowForward", IconVariant.Regular, ArrowForwardSizeAndContent.Values[1]) { } }
            public class ArrowForwardDownLightning : Icon { public ArrowForwardDownLightning() : base("ArrowForwardDownLightning", IconVariant.Regular, ArrowForwardDownLightningSizeAndContent.Values[0]) { } }
            public class ArrowForwardDownPerson : Icon { public ArrowForwardDownPerson() : base("ArrowForwardDownPerson", IconVariant.Regular, ArrowForwardDownPersonSizeAndContent.Values[0]) { } }
            public class ArrowHookDownLeft : Icon { public ArrowHookDownLeft() : base("ArrowHookDownLeft", IconVariant.Regular, ArrowHookDownLeftSizeAndContent.Values[1]) { } }
            public class ArrowHookDownRight : Icon { public ArrowHookDownRight() : base("ArrowHookDownRight", IconVariant.Regular, ArrowHookDownRightSizeAndContent.Values[1]) { } }
            public class ArrowHookUpLeft : Icon { public ArrowHookUpLeft() : base("ArrowHookUpLeft", IconVariant.Regular, ArrowHookUpLeftSizeAndContent.Values[1]) { } }
            public class ArrowHookUpRight : Icon { public ArrowHookUpRight() : base("ArrowHookUpRight", IconVariant.Regular, ArrowHookUpRightSizeAndContent.Values[1]) { } }
            public class ArrowImport : Icon { public ArrowImport() : base("ArrowImport", IconVariant.Regular, ArrowImportSizeAndContent.Values[1]) { } }
            public class ArrowJoin : Icon { public ArrowJoin() : base("ArrowJoin", IconVariant.Regular, ArrowJoinSizeAndContent.Values[0]) { } }
            public class ArrowLeft : Icon { public ArrowLeft() : base("ArrowLeft", IconVariant.Regular, ArrowLeftSizeAndContent.Values[2]) { } }
            public class ArrowMaximize : Icon { public ArrowMaximize() : base("ArrowMaximize", IconVariant.Regular, ArrowMaximizeSizeAndContent.Values[1]) { } }
            public class ArrowMaximizeVertical : Icon { public ArrowMaximizeVertical() : base("ArrowMaximizeVertical", IconVariant.Regular, ArrowMaximizeVerticalSizeAndContent.Values[0]) { } }
            public class ArrowMinimize : Icon { public ArrowMinimize() : base("ArrowMinimize", IconVariant.Regular, ArrowMinimizeSizeAndContent.Values[1]) { } }
            public class ArrowMinimizeVertical : Icon { public ArrowMinimizeVertical() : base("ArrowMinimizeVertical", IconVariant.Regular, ArrowMinimizeVerticalSizeAndContent.Values[0]) { } }
            public class ArrowMove : Icon { public ArrowMove() : base("ArrowMove", IconVariant.Regular, ArrowMoveSizeAndContent.Values[0]) { } }
            public class ArrowMoveInward : Icon { public ArrowMoveInward() : base("ArrowMoveInward", IconVariant.Regular, ArrowMoveInwardSizeAndContent.Values[0]) { } }
            public class ArrowNext : Icon { public ArrowNext() : base("ArrowNext", IconVariant.Regular, ArrowNextSizeAndContent.Values[2]) { } }
            public class ArrowOutlineDownLeft : Icon { public ArrowOutlineDownLeft() : base("ArrowOutlineDownLeft", IconVariant.Regular, ArrowOutlineDownLeftSizeAndContent.Values[1]) { } }
            public class ArrowOutlineUpRight : Icon { public ArrowOutlineUpRight() : base("ArrowOutlineUpRight", IconVariant.Regular, ArrowOutlineUpRightSizeAndContent.Values[0]) { } }
            public class ArrowParagraph : Icon { public ArrowParagraph() : base("ArrowParagraph", IconVariant.Regular, ArrowParagraphSizeAndContent.Values[1]) { } }
            public class ArrowPrevious : Icon { public ArrowPrevious() : base("ArrowPrevious", IconVariant.Regular, ArrowPreviousSizeAndContent.Values[2]) { } }
            public class ArrowRedo : Icon { public ArrowRedo() : base("ArrowRedo", IconVariant.Regular, ArrowRedoSizeAndContent.Values[1]) { } }
            public class ArrowRepeat1 : Icon { public ArrowRepeat1() : base("ArrowRepeat1", IconVariant.Regular, ArrowRepeat1SizeAndContent.Values[1]) { } }
            public class ArrowRepeatAll : Icon { public ArrowRepeatAll() : base("ArrowRepeatAll", IconVariant.Regular, ArrowRepeatAllSizeAndContent.Values[1]) { } }
            public class ArrowRepeatAllOff : Icon { public ArrowRepeatAllOff() : base("ArrowRepeatAllOff", IconVariant.Regular, ArrowRepeatAllOffSizeAndContent.Values[1]) { } }
            public class ArrowReply : Icon { public ArrowReply() : base("ArrowReply", IconVariant.Regular, ArrowReplySizeAndContent.Values[1]) { } }
            public class ArrowReplyAll : Icon { public ArrowReplyAll() : base("ArrowReplyAll", IconVariant.Regular, ArrowReplyAllSizeAndContent.Values[1]) { } }
            public class ArrowReplyDown : Icon { public ArrowReplyDown() : base("ArrowReplyDown", IconVariant.Regular, ArrowReplyDownSizeAndContent.Values[1]) { } }
            public class ArrowReset : Icon { public ArrowReset() : base("ArrowReset", IconVariant.Regular, ArrowResetSizeAndContent.Values[0]) { } }
            public class ArrowRight : Icon { public ArrowRight() : base("ArrowRight", IconVariant.Regular, ArrowRightSizeAndContent.Values[2]) { } }
            public class ArrowRotateClockwise : Icon { public ArrowRotateClockwise() : base("ArrowRotateClockwise", IconVariant.Regular, ArrowRotateClockwiseSizeAndContent.Values[1]) { } }
            public class ArrowRotateCounterclockwise : Icon { public ArrowRotateCounterclockwise() : base("ArrowRotateCounterclockwise", IconVariant.Regular, ArrowRotateCounterclockwiseSizeAndContent.Values[0]) { } }
            public class ArrowRouting : Icon { public ArrowRouting() : base("ArrowRouting", IconVariant.Regular, ArrowRoutingSizeAndContent.Values[0]) { } }
            public class ArrowRoutingRectangleMultiple : Icon { public ArrowRoutingRectangleMultiple() : base("ArrowRoutingRectangleMultiple", IconVariant.Regular, ArrowRoutingRectangleMultipleSizeAndContent.Values[0]) { } }
            public class ArrowsBidirectional : Icon { public ArrowsBidirectional() : base("ArrowsBidirectional", IconVariant.Regular, ArrowsBidirectionalSizeAndContent.Values[0]) { } }
            public class ArrowShuffle : Icon { public ArrowShuffle() : base("ArrowShuffle", IconVariant.Regular, ArrowShuffleSizeAndContent.Values[1]) { } }
            public class ArrowShuffleOff : Icon { public ArrowShuffleOff() : base("ArrowShuffleOff", IconVariant.Regular, ArrowShuffleOffSizeAndContent.Values[1]) { } }
            public class ArrowSort : Icon { public ArrowSort() : base("ArrowSort", IconVariant.Regular, ArrowSortSizeAndContent.Values[1]) { } }
            public class ArrowSortDown : Icon { public ArrowSortDown() : base("ArrowSortDown", IconVariant.Regular, ArrowSortDownSizeAndContent.Values[1]) { } }
            public class ArrowSortDownLines : Icon { public ArrowSortDownLines() : base("ArrowSortDownLines", IconVariant.Regular, ArrowSortDownLinesSizeAndContent.Values[1]) { } }
            public class ArrowSortUp : Icon { public ArrowSortUp() : base("ArrowSortUp", IconVariant.Regular, ArrowSortUpSizeAndContent.Values[1]) { } }
            public class ArrowSplit : Icon { public ArrowSplit() : base("ArrowSplit", IconVariant.Regular, ArrowSplitSizeAndContent.Values[1]) { } }
            public class ArrowSprint : Icon { public ArrowSprint() : base("ArrowSprint", IconVariant.Regular, ArrowSprintSizeAndContent.Values[1]) { } }
            public class ArrowSquareDown : Icon { public ArrowSquareDown() : base("ArrowSquareDown", IconVariant.Regular, ArrowSquareDownSizeAndContent.Values[0]) { } }
            public class ArrowSquareUpRight : Icon { public ArrowSquareUpRight() : base("ArrowSquareUpRight", IconVariant.Regular, ArrowSquareUpRightSizeAndContent.Values[0]) { } }
            public class ArrowStepBack : Icon { public ArrowStepBack() : base("ArrowStepBack", IconVariant.Regular, ArrowStepBackSizeAndContent.Values[1]) { } }
            public class ArrowStepIn : Icon { public ArrowStepIn() : base("ArrowStepIn", IconVariant.Regular, ArrowStepInSizeAndContent.Values[2]) { } }
            public class ArrowStepInDiagonalDownLeft : Icon { public ArrowStepInDiagonalDownLeft() : base("ArrowStepInDiagonalDownLeft", IconVariant.Regular, ArrowStepInDiagonalDownLeftSizeAndContent.Values[1]) { } }
            public class ArrowStepInLeft : Icon { public ArrowStepInLeft() : base("ArrowStepInLeft", IconVariant.Regular, ArrowStepInLeftSizeAndContent.Values[2]) { } }
            public class ArrowStepInRight : Icon { public ArrowStepInRight() : base("ArrowStepInRight", IconVariant.Regular, ArrowStepInRightSizeAndContent.Values[2]) { } }
            public class ArrowStepOut : Icon { public ArrowStepOut() : base("ArrowStepOut", IconVariant.Regular, ArrowStepOutSizeAndContent.Values[2]) { } }
            public class ArrowStepOver : Icon { public ArrowStepOver() : base("ArrowStepOver", IconVariant.Regular, ArrowStepOverSizeAndContent.Values[1]) { } }
            public class ArrowSwap : Icon { public ArrowSwap() : base("ArrowSwap", IconVariant.Regular, ArrowSwapSizeAndContent.Values[1]) { } }
            public class ArrowSync : Icon { public ArrowSync() : base("ArrowSync", IconVariant.Regular, ArrowSyncSizeAndContent.Values[2]) { } }
            public class ArrowSyncCheckmark : Icon { public ArrowSyncCheckmark() : base("ArrowSyncCheckmark", IconVariant.Regular, ArrowSyncCheckmarkSizeAndContent.Values[0]) { } }
            public class ArrowSyncCircle : Icon { public ArrowSyncCircle() : base("ArrowSyncCircle", IconVariant.Regular, ArrowSyncCircleSizeAndContent.Values[1]) { } }
            public class ArrowSyncDismiss : Icon { public ArrowSyncDismiss() : base("ArrowSyncDismiss", IconVariant.Regular, ArrowSyncDismissSizeAndContent.Values[0]) { } }
            public class ArrowSyncOff : Icon { public ArrowSyncOff() : base("ArrowSyncOff", IconVariant.Regular, ArrowSyncOffSizeAndContent.Values[2]) { } }
            public class ArrowTrending : Icon { public ArrowTrending() : base("ArrowTrending", IconVariant.Regular, ArrowTrendingSizeAndContent.Values[2]) { } }
            public class ArrowTrendingCheckmark : Icon { public ArrowTrendingCheckmark() : base("ArrowTrendingCheckmark", IconVariant.Regular, ArrowTrendingCheckmarkSizeAndContent.Values[0]) { } }
            public class ArrowTrendingDown : Icon { public ArrowTrendingDown() : base("ArrowTrendingDown", IconVariant.Regular, ArrowTrendingDownSizeAndContent.Values[1]) { } }
            public class ArrowTrendingLines : Icon { public ArrowTrendingLines() : base("ArrowTrendingLines", IconVariant.Regular, ArrowTrendingLinesSizeAndContent.Values[0]) { } }
            public class ArrowTrendingSettings : Icon { public ArrowTrendingSettings() : base("ArrowTrendingSettings", IconVariant.Regular, ArrowTrendingSettingsSizeAndContent.Values[0]) { } }
            public class ArrowTrendingSparkle : Icon { public ArrowTrendingSparkle() : base("ArrowTrendingSparkle", IconVariant.Regular, ArrowTrendingSparkleSizeAndContent.Values[0]) { } }
            public class ArrowTrendingText : Icon { public ArrowTrendingText() : base("ArrowTrendingText", IconVariant.Regular, ArrowTrendingTextSizeAndContent.Values[0]) { } }
            public class ArrowTrendingWrench : Icon { public ArrowTrendingWrench() : base("ArrowTrendingWrench", IconVariant.Regular, ArrowTrendingWrenchSizeAndContent.Values[0]) { } }
            public class ArrowTurnBidirectionalDownRight : Icon { public ArrowTurnBidirectionalDownRight() : base("ArrowTurnBidirectionalDownRight", IconVariant.Regular, ArrowTurnBidirectionalDownRightSizeAndContent.Values[0]) { } }
            public class ArrowTurnDownLeft : Icon { public ArrowTurnDownLeft() : base("ArrowTurnDownLeft", IconVariant.Regular, ArrowTurnDownLeftSizeAndContent.Values[0]) { } }
            public class ArrowTurnDownRight : Icon { public ArrowTurnDownRight() : base("ArrowTurnDownRight", IconVariant.Regular, ArrowTurnDownRightSizeAndContent.Values[0]) { } }
            public class ArrowTurnDownUp : Icon { public ArrowTurnDownUp() : base("ArrowTurnDownUp", IconVariant.Regular, ArrowTurnDownUpSizeAndContent.Values[0]) { } }
            public class ArrowTurnLeftDown : Icon { public ArrowTurnLeftDown() : base("ArrowTurnLeftDown", IconVariant.Regular, ArrowTurnLeftDownSizeAndContent.Values[0]) { } }
            public class ArrowTurnLeftRight : Icon { public ArrowTurnLeftRight() : base("ArrowTurnLeftRight", IconVariant.Regular, ArrowTurnLeftRightSizeAndContent.Values[0]) { } }
            public class ArrowTurnLeftUp : Icon { public ArrowTurnLeftUp() : base("ArrowTurnLeftUp", IconVariant.Regular, ArrowTurnLeftUpSizeAndContent.Values[0]) { } }
            public class ArrowTurnRight : Icon { public ArrowTurnRight() : base("ArrowTurnRight", IconVariant.Regular, ArrowTurnRightSizeAndContent.Values[0]) { } }
            public class ArrowTurnRightDown : Icon { public ArrowTurnRightDown() : base("ArrowTurnRightDown", IconVariant.Regular, ArrowTurnRightDownSizeAndContent.Values[0]) { } }
            public class ArrowTurnRightLeft : Icon { public ArrowTurnRightLeft() : base("ArrowTurnRightLeft", IconVariant.Regular, ArrowTurnRightLeftSizeAndContent.Values[0]) { } }
            public class ArrowTurnRightUp : Icon { public ArrowTurnRightUp() : base("ArrowTurnRightUp", IconVariant.Regular, ArrowTurnRightUpSizeAndContent.Values[0]) { } }
            public class ArrowTurnUpDown : Icon { public ArrowTurnUpDown() : base("ArrowTurnUpDown", IconVariant.Regular, ArrowTurnUpDownSizeAndContent.Values[0]) { } }
            public class ArrowTurnUpLeft : Icon { public ArrowTurnUpLeft() : base("ArrowTurnUpLeft", IconVariant.Regular, ArrowTurnUpLeftSizeAndContent.Values[0]) { } }
            public class ArrowUndo : Icon { public ArrowUndo() : base("ArrowUndo", IconVariant.Regular, ArrowUndoSizeAndContent.Values[1]) { } }
            public class ArrowUp : Icon { public ArrowUp() : base("ArrowUp", IconVariant.Regular, ArrowUpSizeAndContent.Values[2]) { } }
            public class ArrowUpLeft : Icon { public ArrowUpLeft() : base("ArrowUpLeft", IconVariant.Regular, ArrowUpLeftSizeAndContent.Values[1]) { } }
            public class ArrowUpload : Icon { public ArrowUpload() : base("ArrowUpload", IconVariant.Regular, ArrowUploadSizeAndContent.Values[1]) { } }
            public class ArrowUpRight : Icon { public ArrowUpRight() : base("ArrowUpRight", IconVariant.Regular, ArrowUpRightSizeAndContent.Values[1]) { } }
            public class ArrowWrap : Icon { public ArrowWrap() : base("ArrowWrap", IconVariant.Regular, ArrowWrapSizeAndContent.Values[0]) { } }
            public class ArrowWrapOff : Icon { public ArrowWrapOff() : base("ArrowWrapOff", IconVariant.Regular, ArrowWrapOffSizeAndContent.Values[0]) { } }
            public class Attach : Icon { public Attach() : base("Attach", IconVariant.Regular, AttachSizeAndContent.Values[2]) { } }
            public class AttachArrowRight : Icon { public AttachArrowRight() : base("AttachArrowRight", IconVariant.Regular, AttachArrowRightSizeAndContent.Values[0]) { } }
            public class AttachText : Icon { public AttachText() : base("AttachText", IconVariant.Regular, AttachTextSizeAndContent.Values[0]) { } }
            public class Autocorrect : Icon { public Autocorrect() : base("Autocorrect", IconVariant.Regular, AutocorrectSizeAndContent.Values[0]) { } }
            public class AutoFitHeight : Icon { public AutoFitHeight() : base("AutoFitHeight", IconVariant.Regular, AutoFitHeightSizeAndContent.Values[0]) { } }
            public class AutoFitWidth : Icon { public AutoFitWidth() : base("AutoFitWidth", IconVariant.Regular, AutoFitWidthSizeAndContent.Values[0]) { } }
            public class Autosum : Icon { public Autosum() : base("Autosum", IconVariant.Regular, AutosumSizeAndContent.Values[1]) { } }
            public class Backpack : Icon { public Backpack() : base("Backpack", IconVariant.Regular, BackpackSizeAndContent.Values[2]) { } }
            public class BackpackAdd : Icon { public BackpackAdd() : base("BackpackAdd", IconVariant.Regular, BackpackAddSizeAndContent.Values[0]) { } }
            public class Backspace : Icon { public Backspace() : base("Backspace", IconVariant.Regular, BackspaceSizeAndContent.Values[1]) { } }
            public class Badge : Icon { public Badge() : base("Badge", IconVariant.Regular, BadgeSizeAndContent.Values[0]) { } }
            public class Balloon : Icon { public Balloon() : base("Balloon", IconVariant.Regular, BalloonSizeAndContent.Values[2]) { } }
            public class BarcodeScanner : Icon { public BarcodeScanner() : base("BarcodeScanner", IconVariant.Regular, BarcodeScannerSizeAndContent.Values[0]) { } }
            public class Battery0 : Icon { public Battery0() : base("Battery0", IconVariant.Regular, Battery0SizeAndContent.Values[0]) { } }
            public class Battery1 : Icon { public Battery1() : base("Battery1", IconVariant.Regular, Battery1SizeAndContent.Values[0]) { } }
            public class Battery10 : Icon { public Battery10() : base("Battery10", IconVariant.Regular, Battery10SizeAndContent.Values[1]) { } }
            public class Battery2 : Icon { public Battery2() : base("Battery2", IconVariant.Regular, Battery2SizeAndContent.Values[0]) { } }
            public class Battery3 : Icon { public Battery3() : base("Battery3", IconVariant.Regular, Battery3SizeAndContent.Values[0]) { } }
            public class Battery4 : Icon { public Battery4() : base("Battery4", IconVariant.Regular, Battery4SizeAndContent.Values[0]) { } }
            public class Battery5 : Icon { public Battery5() : base("Battery5", IconVariant.Regular, Battery5SizeAndContent.Values[0]) { } }
            public class Battery6 : Icon { public Battery6() : base("Battery6", IconVariant.Regular, Battery6SizeAndContent.Values[0]) { } }
            public class Battery7 : Icon { public Battery7() : base("Battery7", IconVariant.Regular, Battery7SizeAndContent.Values[0]) { } }
            public class Battery8 : Icon { public Battery8() : base("Battery8", IconVariant.Regular, Battery8SizeAndContent.Values[0]) { } }
            public class Battery9 : Icon { public Battery9() : base("Battery9", IconVariant.Regular, Battery9SizeAndContent.Values[0]) { } }
            public class BatteryCharge : Icon { public BatteryCharge() : base("BatteryCharge", IconVariant.Regular, BatteryChargeSizeAndContent.Values[0]) { } }
            public class BatteryCheckmark : Icon { public BatteryCheckmark() : base("BatteryCheckmark", IconVariant.Regular, BatteryCheckmarkSizeAndContent.Values[0]) { } }
            public class BatterySaver : Icon { public BatterySaver() : base("BatterySaver", IconVariant.Regular, BatterySaverSizeAndContent.Values[0]) { } }
            public class BatteryWarning : Icon { public BatteryWarning() : base("BatteryWarning", IconVariant.Regular, BatteryWarningSizeAndContent.Values[0]) { } }
            public class Beach : Icon { public Beach() : base("Beach", IconVariant.Regular, BeachSizeAndContent.Values[1]) { } }
            public class Beaker : Icon { public Beaker() : base("Beaker", IconVariant.Regular, BeakerSizeAndContent.Values[1]) { } }
            public class BeakerAdd : Icon { public BeakerAdd() : base("BeakerAdd", IconVariant.Regular, BeakerAddSizeAndContent.Values[0]) { } }
            public class BeakerDismiss : Icon { public BeakerDismiss() : base("BeakerDismiss", IconVariant.Regular, BeakerDismissSizeAndContent.Values[0]) { } }
            public class BeakerEdit : Icon { public BeakerEdit() : base("BeakerEdit", IconVariant.Regular, BeakerEditSizeAndContent.Values[0]) { } }
            public class BeakerOff : Icon { public BeakerOff() : base("BeakerOff", IconVariant.Regular, BeakerOffSizeAndContent.Values[0]) { } }
            public class BeakerSettings : Icon { public BeakerSettings() : base("BeakerSettings", IconVariant.Regular, BeakerSettingsSizeAndContent.Values[1]) { } }
            public class Bed : Icon { public Bed() : base("Bed", IconVariant.Regular, BedSizeAndContent.Values[1]) { } }
            public class BezierCurveSquare : Icon { public BezierCurveSquare() : base("BezierCurveSquare", IconVariant.Regular, BezierCurveSquareSizeAndContent.Values[1]) { } }
            public class BinderTriangle : Icon { public BinderTriangle() : base("BinderTriangle", IconVariant.Regular, BinderTriangleSizeAndContent.Values[1]) { } }
            public class BinFull : Icon { public BinFull() : base("BinFull", IconVariant.Regular, BinFullSizeAndContent.Values[0]) { } }
            public class BinRecycle : Icon { public BinRecycle() : base("BinRecycle", IconVariant.Regular, BinRecycleSizeAndContent.Values[0]) { } }
            public class BinRecycleFull : Icon { public BinRecycleFull() : base("BinRecycleFull", IconVariant.Regular, BinRecycleFullSizeAndContent.Values[0]) { } }
            public class Bluetooth : Icon { public Bluetooth() : base("Bluetooth", IconVariant.Regular, BluetoothSizeAndContent.Values[1]) { } }
            public class BluetoothConnected : Icon { public BluetoothConnected() : base("BluetoothConnected", IconVariant.Regular, BluetoothConnectedSizeAndContent.Values[0]) { } }
            public class BluetoothDisabled : Icon { public BluetoothDisabled() : base("BluetoothDisabled", IconVariant.Regular, BluetoothDisabledSizeAndContent.Values[0]) { } }
            public class BluetoothSearching : Icon { public BluetoothSearching() : base("BluetoothSearching", IconVariant.Regular, BluetoothSearchingSizeAndContent.Values[0]) { } }
            public class Blur : Icon { public Blur() : base("Blur", IconVariant.Regular, BlurSizeAndContent.Values[1]) { } }
            public class Board : Icon { public Board() : base("Board", IconVariant.Regular, BoardSizeAndContent.Values[1]) { } }
            public class BoardGames : Icon { public BoardGames() : base("BoardGames", IconVariant.Regular, BoardGamesSizeAndContent.Values[0]) { } }
            public class BoardHeart : Icon { public BoardHeart() : base("BoardHeart", IconVariant.Regular, BoardHeartSizeAndContent.Values[1]) { } }
            public class BoardSplit : Icon { public BoardSplit() : base("BoardSplit", IconVariant.Regular, BoardSplitSizeAndContent.Values[1]) { } }
            public class Book : Icon { public Book() : base("Book", IconVariant.Regular, BookSizeAndContent.Values[1]) { } }
            public class BookAdd : Icon { public BookAdd() : base("BookAdd", IconVariant.Regular, BookAddSizeAndContent.Values[0]) { } }
            public class BookArrowClockwise : Icon { public BookArrowClockwise() : base("BookArrowClockwise", IconVariant.Regular, BookArrowClockwiseSizeAndContent.Values[0]) { } }
            public class BookClock : Icon { public BookClock() : base("BookClock", IconVariant.Regular, BookClockSizeAndContent.Values[0]) { } }
            public class BookCoins : Icon { public BookCoins() : base("BookCoins", IconVariant.Regular, BookCoinsSizeAndContent.Values[0]) { } }
            public class BookCompass : Icon { public BookCompass() : base("BookCompass", IconVariant.Regular, BookCompassSizeAndContent.Values[0]) { } }
            public class BookContacts : Icon { public BookContacts() : base("BookContacts", IconVariant.Regular, BookContactsSizeAndContent.Values[0]) { } }
            public class BookDatabase : Icon { public BookDatabase() : base("BookDatabase", IconVariant.Regular, BookDatabaseSizeAndContent.Values[1]) { } }
            public class BookDismiss : Icon { public BookDismiss() : base("BookDismiss", IconVariant.Regular, BookDismissSizeAndContent.Values[1]) { } }
            public class BookExclamationMark : Icon { public BookExclamationMark() : base("BookExclamationMark", IconVariant.Regular, BookExclamationMarkSizeAndContent.Values[0]) { } }
            public class BookGlobe : Icon { public BookGlobe() : base("BookGlobe", IconVariant.Regular, BookGlobeSizeAndContent.Values[0]) { } }
            public class BookInformation : Icon { public BookInformation() : base("BookInformation", IconVariant.Regular, BookInformationSizeAndContent.Values[0]) { } }
            public class BookLetter : Icon { public BookLetter() : base("BookLetter", IconVariant.Regular, BookLetterSizeAndContent.Values[0]) { } }
            public class Bookmark : Icon { public Bookmark() : base("Bookmark", IconVariant.Regular, BookmarkSizeAndContent.Values[1]) { } }
            public class BookmarkAdd : Icon { public BookmarkAdd() : base("BookmarkAdd", IconVariant.Regular, BookmarkAddSizeAndContent.Values[0]) { } }
            public class BookmarkMultiple : Icon { public BookmarkMultiple() : base("BookmarkMultiple", IconVariant.Regular, BookmarkMultipleSizeAndContent.Values[1]) { } }
            public class BookmarkOff : Icon { public BookmarkOff() : base("BookmarkOff", IconVariant.Regular, BookmarkOffSizeAndContent.Values[0]) { } }
            public class BookmarkSearch : Icon { public BookmarkSearch() : base("BookmarkSearch", IconVariant.Regular, BookmarkSearchSizeAndContent.Values[0]) { } }
            public class BookNumber : Icon { public BookNumber() : base("BookNumber", IconVariant.Regular, BookNumberSizeAndContent.Values[1]) { } }
            public class BookOpen : Icon { public BookOpen() : base("BookOpen", IconVariant.Regular, BookOpenSizeAndContent.Values[1]) { } }
            public class BookOpenGlobe : Icon { public BookOpenGlobe() : base("BookOpenGlobe", IconVariant.Regular, BookOpenGlobeSizeAndContent.Values[0]) { } }
            public class BookOpenMicrophone : Icon { public BookOpenMicrophone() : base("BookOpenMicrophone", IconVariant.Regular, BookOpenMicrophoneSizeAndContent.Values[0]) { } }
            public class BookPulse : Icon { public BookPulse() : base("BookPulse", IconVariant.Regular, BookPulseSizeAndContent.Values[0]) { } }
            public class BookQuestionMark : Icon { public BookQuestionMark() : base("BookQuestionMark", IconVariant.Regular, BookQuestionMarkSizeAndContent.Values[0]) { } }
            public class BookQuestionMarkRtl : Icon { public BookQuestionMarkRtl() : base("BookQuestionMarkRtl", IconVariant.Regular, BookQuestionMarkRtlSizeAndContent.Values[0]) { } }
            public class BookSearch : Icon { public BookSearch() : base("BookSearch", IconVariant.Regular, BookSearchSizeAndContent.Values[0]) { } }
            public class BookStar : Icon { public BookStar() : base("BookStar", IconVariant.Regular, BookStarSizeAndContent.Values[0]) { } }
            public class BookTemplate : Icon { public BookTemplate() : base("BookTemplate", IconVariant.Regular, BookTemplateSizeAndContent.Values[0]) { } }
            public class BookTheta : Icon { public BookTheta() : base("BookTheta", IconVariant.Regular, BookThetaSizeAndContent.Values[0]) { } }
            public class BookToolbox : Icon { public BookToolbox() : base("BookToolbox", IconVariant.Regular, BookToolboxSizeAndContent.Values[1]) { } }
            public class BorderAll : Icon { public BorderAll() : base("BorderAll", IconVariant.Regular, BorderAllSizeAndContent.Values[1]) { } }
            public class BorderBottom : Icon { public BorderBottom() : base("BorderBottom", IconVariant.Regular, BorderBottomSizeAndContent.Values[0]) { } }
            public class BorderBottomDouble : Icon { public BorderBottomDouble() : base("BorderBottomDouble", IconVariant.Regular, BorderBottomDoubleSizeAndContent.Values[0]) { } }
            public class BorderBottomThick : Icon { public BorderBottomThick() : base("BorderBottomThick", IconVariant.Regular, BorderBottomThickSizeAndContent.Values[0]) { } }
            public class BorderInside : Icon { public BorderInside() : base("BorderInside", IconVariant.Regular, BorderInsideSizeAndContent.Values[1]) { } }
            public class BorderLeft : Icon { public BorderLeft() : base("BorderLeft", IconVariant.Regular, BorderLeftSizeAndContent.Values[0]) { } }
            public class BorderLeftRight : Icon { public BorderLeftRight() : base("BorderLeftRight", IconVariant.Regular, BorderLeftRightSizeAndContent.Values[0]) { } }
            public class BorderNone : Icon { public BorderNone() : base("BorderNone", IconVariant.Regular, BorderNoneSizeAndContent.Values[1]) { } }
            public class BorderOutside : Icon { public BorderOutside() : base("BorderOutside", IconVariant.Regular, BorderOutsideSizeAndContent.Values[0]) { } }
            public class BorderOutsideThick : Icon { public BorderOutsideThick() : base("BorderOutsideThick", IconVariant.Regular, BorderOutsideThickSizeAndContent.Values[0]) { } }
            public class BorderRight : Icon { public BorderRight() : base("BorderRight", IconVariant.Regular, BorderRightSizeAndContent.Values[0]) { } }
            public class BorderTop : Icon { public BorderTop() : base("BorderTop", IconVariant.Regular, BorderTopSizeAndContent.Values[0]) { } }
            public class BorderTopBottom : Icon { public BorderTopBottom() : base("BorderTopBottom", IconVariant.Regular, BorderTopBottomSizeAndContent.Values[0]) { } }
            public class BorderTopBottomDouble : Icon { public BorderTopBottomDouble() : base("BorderTopBottomDouble", IconVariant.Regular, BorderTopBottomDoubleSizeAndContent.Values[0]) { } }
            public class BorderTopBottomThick : Icon { public BorderTopBottomThick() : base("BorderTopBottomThick", IconVariant.Regular, BorderTopBottomThickSizeAndContent.Values[0]) { } }
            public class Bot : Icon { public Bot() : base("Bot", IconVariant.Regular, BotSizeAndContent.Values[0]) { } }
            public class BotAdd : Icon { public BotAdd() : base("BotAdd", IconVariant.Regular, BotAddSizeAndContent.Values[0]) { } }
            public class BotSparkle : Icon { public BotSparkle() : base("BotSparkle", IconVariant.Regular, BotSparkleSizeAndContent.Values[0]) { } }
            public class BowlChopsticks : Icon { public BowlChopsticks() : base("BowlChopsticks", IconVariant.Regular, BowlChopsticksSizeAndContent.Values[1]) { } }
            public class BowlSalad : Icon { public BowlSalad() : base("BowlSalad", IconVariant.Regular, BowlSaladSizeAndContent.Values[0]) { } }
            public class BowTie : Icon { public BowTie() : base("BowTie", IconVariant.Regular, BowTieSizeAndContent.Values[0]) { } }
            public class Box : Icon { public Box() : base("Box", IconVariant.Regular, BoxSizeAndContent.Values[1]) { } }
            public class BoxArrowLeft : Icon { public BoxArrowLeft() : base("BoxArrowLeft", IconVariant.Regular, BoxArrowLeftSizeAndContent.Values[0]) { } }
            public class BoxArrowUp : Icon { public BoxArrowUp() : base("BoxArrowUp", IconVariant.Regular, BoxArrowUpSizeAndContent.Values[0]) { } }
            public class BoxCheckmark : Icon { public BoxCheckmark() : base("BoxCheckmark", IconVariant.Regular, BoxCheckmarkSizeAndContent.Values[0]) { } }
            public class BoxDismiss : Icon { public BoxDismiss() : base("BoxDismiss", IconVariant.Regular, BoxDismissSizeAndContent.Values[0]) { } }
            public class BoxEdit : Icon { public BoxEdit() : base("BoxEdit", IconVariant.Regular, BoxEditSizeAndContent.Values[0]) { } }
            public class BoxMultiple : Icon { public BoxMultiple() : base("BoxMultiple", IconVariant.Regular, BoxMultipleSizeAndContent.Values[0]) { } }
            public class BoxMultipleArrowLeft : Icon { public BoxMultipleArrowLeft() : base("BoxMultipleArrowLeft", IconVariant.Regular, BoxMultipleArrowLeftSizeAndContent.Values[0]) { } }
            public class BoxMultipleArrowRight : Icon { public BoxMultipleArrowRight() : base("BoxMultipleArrowRight", IconVariant.Regular, BoxMultipleArrowRightSizeAndContent.Values[0]) { } }
            public class BoxMultipleCheckmark : Icon { public BoxMultipleCheckmark() : base("BoxMultipleCheckmark", IconVariant.Regular, BoxMultipleCheckmarkSizeAndContent.Values[0]) { } }
            public class BoxMultipleSearch : Icon { public BoxMultipleSearch() : base("BoxMultipleSearch", IconVariant.Regular, BoxMultipleSearchSizeAndContent.Values[0]) { } }
            public class BoxSearch : Icon { public BoxSearch() : base("BoxSearch", IconVariant.Regular, BoxSearchSizeAndContent.Values[1]) { } }
            public class BoxToolbox : Icon { public BoxToolbox() : base("BoxToolbox", IconVariant.Regular, BoxToolboxSizeAndContent.Values[0]) { } }
            public class Braces : Icon { public Braces() : base("Braces", IconVariant.Regular, BracesSizeAndContent.Values[1]) { } }
            public class BracesVariable : Icon { public BracesVariable() : base("BracesVariable", IconVariant.Regular, BracesVariableSizeAndContent.Values[0]) { } }
            public class BrainCircuit : Icon { public BrainCircuit() : base("BrainCircuit", IconVariant.Regular, BrainCircuitSizeAndContent.Values[0]) { } }
            public class Branch : Icon { public Branch() : base("Branch", IconVariant.Regular, BranchSizeAndContent.Values[1]) { } }
            public class BranchCompare : Icon { public BranchCompare() : base("BranchCompare", IconVariant.Regular, BranchCompareSizeAndContent.Values[1]) { } }
            public class BranchFork : Icon { public BranchFork() : base("BranchFork", IconVariant.Regular, BranchForkSizeAndContent.Values[1]) { } }
            public class BranchForkHint : Icon { public BranchForkHint() : base("BranchForkHint", IconVariant.Regular, BranchForkHintSizeAndContent.Values[0]) { } }
            public class BranchForkLink : Icon { public BranchForkLink() : base("BranchForkLink", IconVariant.Regular, BranchForkLinkSizeAndContent.Values[0]) { } }
            public class BranchRequest : Icon { public BranchRequest() : base("BranchRequest", IconVariant.Regular, BranchRequestSizeAndContent.Values[1]) { } }
            public class BreakoutRoom : Icon { public BreakoutRoom() : base("BreakoutRoom", IconVariant.Regular, BreakoutRoomSizeAndContent.Values[0]) { } }
            public class Briefcase : Icon { public Briefcase() : base("Briefcase", IconVariant.Regular, BriefcaseSizeAndContent.Values[2]) { } }
            public class BriefcaseMedical : Icon { public BriefcaseMedical() : base("BriefcaseMedical", IconVariant.Regular, BriefcaseMedicalSizeAndContent.Values[1]) { } }
            public class BriefcaseOff : Icon { public BriefcaseOff() : base("BriefcaseOff", IconVariant.Regular, BriefcaseOffSizeAndContent.Values[1]) { } }
            public class BriefcaseSearch : Icon { public BriefcaseSearch() : base("BriefcaseSearch", IconVariant.Regular, BriefcaseSearchSizeAndContent.Values[0]) { } }
            public class BrightnessHigh : Icon { public BrightnessHigh() : base("BrightnessHigh", IconVariant.Regular, BrightnessHighSizeAndContent.Values[1]) { } }
            public class BrightnessLow : Icon { public BrightnessLow() : base("BrightnessLow", IconVariant.Regular, BrightnessLowSizeAndContent.Values[1]) { } }
            public class BroadActivityFeed : Icon { public BroadActivityFeed() : base("BroadActivityFeed", IconVariant.Regular, BroadActivityFeedSizeAndContent.Values[1]) { } }
            public class Broom : Icon { public Broom() : base("Broom", IconVariant.Regular, BroomSizeAndContent.Values[1]) { } }
            public class BubbleMultiple : Icon { public BubbleMultiple() : base("BubbleMultiple", IconVariant.Regular, BubbleMultipleSizeAndContent.Values[0]) { } }
            public class Bug : Icon { public Bug() : base("Bug", IconVariant.Regular, BugSizeAndContent.Values[1]) { } }
            public class BugArrowCounterclockwise : Icon { public BugArrowCounterclockwise() : base("BugArrowCounterclockwise", IconVariant.Regular, BugArrowCounterclockwiseSizeAndContent.Values[0]) { } }
            public class BugProhibited : Icon { public BugProhibited() : base("BugProhibited", IconVariant.Regular, BugProhibitedSizeAndContent.Values[0]) { } }
            public class Building : Icon { public Building() : base("Building", IconVariant.Regular, BuildingSizeAndContent.Values[1]) { } }
            public class BuildingBank : Icon { public BuildingBank() : base("BuildingBank", IconVariant.Regular, BuildingBankSizeAndContent.Values[1]) { } }
            public class BuildingBankLink : Icon { public BuildingBankLink() : base("BuildingBankLink", IconVariant.Regular, BuildingBankLinkSizeAndContent.Values[1]) { } }
            public class BuildingBankToolbox : Icon { public BuildingBankToolbox() : base("BuildingBankToolbox", IconVariant.Regular, BuildingBankToolboxSizeAndContent.Values[0]) { } }
            public class BuildingDesktop : Icon { public BuildingDesktop() : base("BuildingDesktop", IconVariant.Regular, BuildingDesktopSizeAndContent.Values[1]) { } }
            public class BuildingFactory : Icon { public BuildingFactory() : base("BuildingFactory", IconVariant.Regular, BuildingFactorySizeAndContent.Values[1]) { } }
            public class BuildingGovernment : Icon { public BuildingGovernment() : base("BuildingGovernment", IconVariant.Regular, BuildingGovernmentSizeAndContent.Values[1]) { } }
            public class BuildingGovernmentSearch : Icon { public BuildingGovernmentSearch() : base("BuildingGovernmentSearch", IconVariant.Regular, BuildingGovernmentSearchSizeAndContent.Values[1]) { } }
            public class BuildingHome : Icon { public BuildingHome() : base("BuildingHome", IconVariant.Regular, BuildingHomeSizeAndContent.Values[1]) { } }
            public class BuildingLighthouse : Icon { public BuildingLighthouse() : base("BuildingLighthouse", IconVariant.Regular, BuildingLighthouseSizeAndContent.Values[0]) { } }
            public class BuildingMosque : Icon { public BuildingMosque() : base("BuildingMosque", IconVariant.Regular, BuildingMosqueSizeAndContent.Values[2]) { } }
            public class BuildingMultiple : Icon { public BuildingMultiple() : base("BuildingMultiple", IconVariant.Regular, BuildingMultipleSizeAndContent.Values[0]) { } }
            public class BuildingPeople : Icon { public BuildingPeople() : base("BuildingPeople", IconVariant.Regular, BuildingPeopleSizeAndContent.Values[1]) { } }
            public class BuildingRetail : Icon { public BuildingRetail() : base("BuildingRetail", IconVariant.Regular, BuildingRetailSizeAndContent.Values[0]) { } }
            public class BuildingRetailMoney : Icon { public BuildingRetailMoney() : base("BuildingRetailMoney", IconVariant.Regular, BuildingRetailMoneySizeAndContent.Values[0]) { } }
            public class BuildingRetailMore : Icon { public BuildingRetailMore() : base("BuildingRetailMore", IconVariant.Regular, BuildingRetailMoreSizeAndContent.Values[0]) { } }
            public class BuildingRetailShield : Icon { public BuildingRetailShield() : base("BuildingRetailShield", IconVariant.Regular, BuildingRetailShieldSizeAndContent.Values[0]) { } }
            public class BuildingRetailToolbox : Icon { public BuildingRetailToolbox() : base("BuildingRetailToolbox", IconVariant.Regular, BuildingRetailToolboxSizeAndContent.Values[0]) { } }
            public class BuildingShop : Icon { public BuildingShop() : base("BuildingShop", IconVariant.Regular, BuildingShopSizeAndContent.Values[1]) { } }
            public class BuildingSkyscraper : Icon { public BuildingSkyscraper() : base("BuildingSkyscraper", IconVariant.Regular, BuildingSkyscraperSizeAndContent.Values[1]) { } }
            public class BuildingSwap : Icon { public BuildingSwap() : base("BuildingSwap", IconVariant.Regular, BuildingSwapSizeAndContent.Values[1]) { } }
            public class BuildingTownhouse : Icon { public BuildingTownhouse() : base("BuildingTownhouse", IconVariant.Regular, BuildingTownhouseSizeAndContent.Values[0]) { } }
            public class Button : Icon { public Button() : base("Button", IconVariant.Regular, ButtonSizeAndContent.Values[1]) { } }
            public class Calculator : Icon { public Calculator() : base("Calculator", IconVariant.Regular, CalculatorSizeAndContent.Values[1]) { } }
            public class CalculatorArrowClockwise : Icon { public CalculatorArrowClockwise() : base("CalculatorArrowClockwise", IconVariant.Regular, CalculatorArrowClockwiseSizeAndContent.Values[0]) { } }
            public class CalculatorMultiple : Icon { public CalculatorMultiple() : base("CalculatorMultiple", IconVariant.Regular, CalculatorMultipleSizeAndContent.Values[1]) { } }
            public class Calendar : Icon { public Calendar() : base("Calendar", IconVariant.Regular, CalendarSizeAndContent.Values[2]) { } }
            public class Calendar3Day : Icon { public Calendar3Day() : base("Calendar3Day", IconVariant.Regular, Calendar3DaySizeAndContent.Values[1]) { } }
            public class CalendarAdd : Icon { public CalendarAdd() : base("CalendarAdd", IconVariant.Regular, CalendarAddSizeAndContent.Values[1]) { } }
            public class CalendarAgenda : Icon { public CalendarAgenda() : base("CalendarAgenda", IconVariant.Regular, CalendarAgendaSizeAndContent.Values[0]) { } }
            public class CalendarArrowCounterclockwise : Icon { public CalendarArrowCounterclockwise() : base("CalendarArrowCounterclockwise", IconVariant.Regular, CalendarArrowCounterclockwiseSizeAndContent.Values[1]) { } }
            public class CalendarArrowDown : Icon { public CalendarArrowDown() : base("CalendarArrowDown", IconVariant.Regular, CalendarArrowDownSizeAndContent.Values[0]) { } }
            public class CalendarArrowRight : Icon { public CalendarArrowRight() : base("CalendarArrowRight", IconVariant.Regular, CalendarArrowRightSizeAndContent.Values[1]) { } }
            public class CalendarAssistant : Icon { public CalendarAssistant() : base("CalendarAssistant", IconVariant.Regular, CalendarAssistantSizeAndContent.Values[1]) { } }
            public class CalendarCancel : Icon { public CalendarCancel() : base("CalendarCancel", IconVariant.Regular, CalendarCancelSizeAndContent.Values[1]) { } }
            public class CalendarChat : Icon { public CalendarChat() : base("CalendarChat", IconVariant.Regular, CalendarChatSizeAndContent.Values[0]) { } }
            public class CalendarCheckmark : Icon { public CalendarCheckmark() : base("CalendarCheckmark", IconVariant.Regular, CalendarCheckmarkSizeAndContent.Values[1]) { } }
            public class CalendarClock : Icon { public CalendarClock() : base("CalendarClock", IconVariant.Regular, CalendarClockSizeAndContent.Values[1]) { } }
            public class CalendarDataBar : Icon { public CalendarDataBar() : base("CalendarDataBar", IconVariant.Regular, CalendarDataBarSizeAndContent.Values[1]) { } }
            public class CalendarDate : Icon { public CalendarDate() : base("CalendarDate", IconVariant.Regular, CalendarDateSizeAndContent.Values[0]) { } }
            public class CalendarDay : Icon { public CalendarDay() : base("CalendarDay", IconVariant.Regular, CalendarDaySizeAndContent.Values[1]) { } }
            public class CalendarEdit : Icon { public CalendarEdit() : base("CalendarEdit", IconVariant.Regular, CalendarEditSizeAndContent.Values[1]) { } }
            public class CalendarEmpty : Icon { public CalendarEmpty() : base("CalendarEmpty", IconVariant.Regular, CalendarEmptySizeAndContent.Values[1]) { } }
            public class CalendarError : Icon { public CalendarError() : base("CalendarError", IconVariant.Regular, CalendarErrorSizeAndContent.Values[1]) { } }
            public class CalendarEye : Icon { public CalendarEye() : base("CalendarEye", IconVariant.Regular, CalendarEyeSizeAndContent.Values[0]) { } }
            public class CalendarInfo : Icon { public CalendarInfo() : base("CalendarInfo", IconVariant.Regular, CalendarInfoSizeAndContent.Values[1]) { } }
            public class CalendarLock : Icon { public CalendarLock() : base("CalendarLock", IconVariant.Regular, CalendarLockSizeAndContent.Values[1]) { } }
            public class CalendarLtr : Icon { public CalendarLtr() : base("CalendarLtr", IconVariant.Regular, CalendarLtrSizeAndContent.Values[2]) { } }
            public class CalendarMail : Icon { public CalendarMail() : base("CalendarMail", IconVariant.Regular, CalendarMailSizeAndContent.Values[1]) { } }
            public class CalendarMention : Icon { public CalendarMention() : base("CalendarMention", IconVariant.Regular, CalendarMentionSizeAndContent.Values[0]) { } }
            public class CalendarMonth : Icon { public CalendarMonth() : base("CalendarMonth", IconVariant.Regular, CalendarMonthSizeAndContent.Values[0]) { } }
            public class CalendarMultiple : Icon { public CalendarMultiple() : base("CalendarMultiple", IconVariant.Regular, CalendarMultipleSizeAndContent.Values[1]) { } }
            public class CalendarNote : Icon { public CalendarNote() : base("CalendarNote", IconVariant.Regular, CalendarNoteSizeAndContent.Values[1]) { } }
            public class CalendarPattern : Icon { public CalendarPattern() : base("CalendarPattern", IconVariant.Regular, CalendarPatternSizeAndContent.Values[1]) { } }
            public class CalendarPerson : Icon { public CalendarPerson() : base("CalendarPerson", IconVariant.Regular, CalendarPersonSizeAndContent.Values[1]) { } }
            public class CalendarPhone : Icon { public CalendarPhone() : base("CalendarPhone", IconVariant.Regular, CalendarPhoneSizeAndContent.Values[1]) { } }
            public class CalendarPlay : Icon { public CalendarPlay() : base("CalendarPlay", IconVariant.Regular, CalendarPlaySizeAndContent.Values[1]) { } }
            public class CalendarQuestionMark : Icon { public CalendarQuestionMark() : base("CalendarQuestionMark", IconVariant.Regular, CalendarQuestionMarkSizeAndContent.Values[1]) { } }
            public class CalendarRecord : Icon { public CalendarRecord() : base("CalendarRecord", IconVariant.Regular, CalendarRecordSizeAndContent.Values[1]) { } }
            public class CalendarReply : Icon { public CalendarReply() : base("CalendarReply", IconVariant.Regular, CalendarReplySizeAndContent.Values[1]) { } }
            public class CalendarRtl : Icon { public CalendarRtl() : base("CalendarRtl", IconVariant.Regular, CalendarRtlSizeAndContent.Values[2]) { } }
            public class CalendarSearch : Icon { public CalendarSearch() : base("CalendarSearch", IconVariant.Regular, CalendarSearchSizeAndContent.Values[1]) { } }
            public class CalendarSettings : Icon { public CalendarSettings() : base("CalendarSettings", IconVariant.Regular, CalendarSettingsSizeAndContent.Values[1]) { } }
            public class CalendarShield : Icon { public CalendarShield() : base("CalendarShield", IconVariant.Regular, CalendarShieldSizeAndContent.Values[1]) { } }
            public class CalendarStar : Icon { public CalendarStar() : base("CalendarStar", IconVariant.Regular, CalendarStarSizeAndContent.Values[1]) { } }
            public class CalendarSync : Icon { public CalendarSync() : base("CalendarSync", IconVariant.Regular, CalendarSyncSizeAndContent.Values[1]) { } }
            public class CalendarToday : Icon { public CalendarToday() : base("CalendarToday", IconVariant.Regular, CalendarTodaySizeAndContent.Values[1]) { } }
            public class CalendarToolbox : Icon { public CalendarToolbox() : base("CalendarToolbox", IconVariant.Regular, CalendarToolboxSizeAndContent.Values[0]) { } }
            public class CalendarWeekNumbers : Icon { public CalendarWeekNumbers() : base("CalendarWeekNumbers", IconVariant.Regular, CalendarWeekNumbersSizeAndContent.Values[0]) { } }
            public class CalendarWeekStart : Icon { public CalendarWeekStart() : base("CalendarWeekStart", IconVariant.Regular, CalendarWeekStartSizeAndContent.Values[0]) { } }
            public class CalendarWorkWeek : Icon { public CalendarWorkWeek() : base("CalendarWorkWeek", IconVariant.Regular, CalendarWorkWeekSizeAndContent.Values[1]) { } }
            public class Call : Icon { public Call() : base("Call", IconVariant.Regular, CallSizeAndContent.Values[2]) { } }
            public class CallAdd : Icon { public CallAdd() : base("CallAdd", IconVariant.Regular, CallAddSizeAndContent.Values[1]) { } }
            public class CallCheckmark : Icon { public CallCheckmark() : base("CallCheckmark", IconVariant.Regular, CallCheckmarkSizeAndContent.Values[0]) { } }
            public class CallConnecting : Icon { public CallConnecting() : base("CallConnecting", IconVariant.Regular, CallConnectingSizeAndContent.Values[0]) { } }
            public class CallDismiss : Icon { public CallDismiss() : base("CallDismiss", IconVariant.Regular, CallDismissSizeAndContent.Values[1]) { } }
            public class CallEnd : Icon { public CallEnd() : base("CallEnd", IconVariant.Regular, CallEndSizeAndContent.Values[2]) { } }
            public class CallExclamation : Icon { public CallExclamation() : base("CallExclamation", IconVariant.Regular, CallExclamationSizeAndContent.Values[0]) { } }
            public class CallForward : Icon { public CallForward() : base("CallForward", IconVariant.Regular, CallForwardSizeAndContent.Values[1]) { } }
            public class CalligraphyPen : Icon { public CalligraphyPen() : base("CalligraphyPen", IconVariant.Regular, CalligraphyPenSizeAndContent.Values[0]) { } }
            public class CalligraphyPenCheckmark : Icon { public CalligraphyPenCheckmark() : base("CalligraphyPenCheckmark", IconVariant.Regular, CalligraphyPenCheckmarkSizeAndContent.Values[0]) { } }
            public class CalligraphyPenError : Icon { public CalligraphyPenError() : base("CalligraphyPenError", IconVariant.Regular, CalligraphyPenErrorSizeAndContent.Values[0]) { } }
            public class CalligraphyPenQuestionMark : Icon { public CalligraphyPenQuestionMark() : base("CalligraphyPenQuestionMark", IconVariant.Regular, CalligraphyPenQuestionMarkSizeAndContent.Values[0]) { } }
            public class CallInbound : Icon { public CallInbound() : base("CallInbound", IconVariant.Regular, CallInboundSizeAndContent.Values[1]) { } }
            public class CallMissed : Icon { public CallMissed() : base("CallMissed", IconVariant.Regular, CallMissedSizeAndContent.Values[2]) { } }
            public class CallOutbound : Icon { public CallOutbound() : base("CallOutbound", IconVariant.Regular, CallOutboundSizeAndContent.Values[1]) { } }
            public class CallPark : Icon { public CallPark() : base("CallPark", IconVariant.Regular, CallParkSizeAndContent.Values[1]) { } }
            public class CallPause : Icon { public CallPause() : base("CallPause", IconVariant.Regular, CallPauseSizeAndContent.Values[0]) { } }
            public class CallProhibited : Icon { public CallProhibited() : base("CallProhibited", IconVariant.Regular, CallProhibitedSizeAndContent.Values[1]) { } }
            public class CallTransfer : Icon { public CallTransfer() : base("CallTransfer", IconVariant.Regular, CallTransferSizeAndContent.Values[1]) { } }
            public class CallWarning : Icon { public CallWarning() : base("CallWarning", IconVariant.Regular, CallWarningSizeAndContent.Values[1]) { } }
            public class Camera : Icon { public Camera() : base("Camera", IconVariant.Regular, CameraSizeAndContent.Values[1]) { } }
            public class CameraAdd : Icon { public CameraAdd() : base("CameraAdd", IconVariant.Regular, CameraAddSizeAndContent.Values[0]) { } }
            public class CameraDome : Icon { public CameraDome() : base("CameraDome", IconVariant.Regular, CameraDomeSizeAndContent.Values[1]) { } }
            public class CameraEdit : Icon { public CameraEdit() : base("CameraEdit", IconVariant.Regular, CameraEditSizeAndContent.Values[0]) { } }
            public class CameraOff : Icon { public CameraOff() : base("CameraOff", IconVariant.Regular, CameraOffSizeAndContent.Values[1]) { } }
            public class CameraSparkles : Icon { public CameraSparkles() : base("CameraSparkles", IconVariant.Regular, CameraSparklesSizeAndContent.Values[1]) { } }
            public class CameraSwitch : Icon { public CameraSwitch() : base("CameraSwitch", IconVariant.Regular, CameraSwitchSizeAndContent.Values[0]) { } }
            public class CardUi : Icon { public CardUi() : base("CardUi", IconVariant.Regular, CardUiSizeAndContent.Values[0]) { } }
            public class CaretDown : Icon { public CaretDown() : base("CaretDown", IconVariant.Regular, CaretDownSizeAndContent.Values[2]) { } }
            public class CaretDownRight : Icon { public CaretDownRight() : base("CaretDownRight", IconVariant.Regular, CaretDownRightSizeAndContent.Values[2]) { } }
            public class CaretLeft : Icon { public CaretLeft() : base("CaretLeft", IconVariant.Regular, CaretLeftSizeAndContent.Values[2]) { } }
            public class CaretRight : Icon { public CaretRight() : base("CaretRight", IconVariant.Regular, CaretRightSizeAndContent.Values[2]) { } }
            public class CaretUp : Icon { public CaretUp() : base("CaretUp", IconVariant.Regular, CaretUpSizeAndContent.Values[2]) { } }
            public class Cart : Icon { public Cart() : base("Cart", IconVariant.Regular, CartSizeAndContent.Values[1]) { } }
            public class Cast : Icon { public Cast() : base("Cast", IconVariant.Regular, CastSizeAndContent.Values[0]) { } }
            public class CastMultiple : Icon { public CastMultiple() : base("CastMultiple", IconVariant.Regular, CastMultipleSizeAndContent.Values[0]) { } }
            public class CatchUp : Icon { public CatchUp() : base("CatchUp", IconVariant.Regular, CatchUpSizeAndContent.Values[1]) { } }
            public class Cellular3g : Icon { public Cellular3g() : base("Cellular3g", IconVariant.Regular, Cellular3gSizeAndContent.Values[0]) { } }
            public class Cellular4g : Icon { public Cellular4g() : base("Cellular4g", IconVariant.Regular, Cellular4gSizeAndContent.Values[0]) { } }
            public class Cellular5g : Icon { public Cellular5g() : base("Cellular5g", IconVariant.Regular, Cellular5gSizeAndContent.Values[0]) { } }
            public class CellularData1 : Icon { public CellularData1() : base("CellularData1", IconVariant.Regular, CellularData1SizeAndContent.Values[0]) { } }
            public class CellularData2 : Icon { public CellularData2() : base("CellularData2", IconVariant.Regular, CellularData2SizeAndContent.Values[0]) { } }
            public class CellularData3 : Icon { public CellularData3() : base("CellularData3", IconVariant.Regular, CellularData3SizeAndContent.Values[0]) { } }
            public class CellularData4 : Icon { public CellularData4() : base("CellularData4", IconVariant.Regular, CellularData4SizeAndContent.Values[0]) { } }
            public class CellularData5 : Icon { public CellularData5() : base("CellularData5", IconVariant.Regular, CellularData5SizeAndContent.Values[0]) { } }
            public class CellularOff : Icon { public CellularOff() : base("CellularOff", IconVariant.Regular, CellularOffSizeAndContent.Values[0]) { } }
            public class CellularWarning : Icon { public CellularWarning() : base("CellularWarning", IconVariant.Regular, CellularWarningSizeAndContent.Values[0]) { } }
            public class CenterHorizontal : Icon { public CenterHorizontal() : base("CenterHorizontal", IconVariant.Regular, CenterHorizontalSizeAndContent.Values[0]) { } }
            public class CenterVertical : Icon { public CenterVertical() : base("CenterVertical", IconVariant.Regular, CenterVerticalSizeAndContent.Values[0]) { } }
            public class Certificate : Icon { public Certificate() : base("Certificate", IconVariant.Regular, CertificateSizeAndContent.Values[1]) { } }
            public class Channel : Icon { public Channel() : base("Channel", IconVariant.Regular, ChannelSizeAndContent.Values[1]) { } }
            public class ChannelAdd : Icon { public ChannelAdd() : base("ChannelAdd", IconVariant.Regular, ChannelAddSizeAndContent.Values[1]) { } }
            public class ChannelAlert : Icon { public ChannelAlert() : base("ChannelAlert", IconVariant.Regular, ChannelAlertSizeAndContent.Values[1]) { } }
            public class ChannelArrowLeft : Icon { public ChannelArrowLeft() : base("ChannelArrowLeft", IconVariant.Regular, ChannelArrowLeftSizeAndContent.Values[1]) { } }
            public class ChannelDismiss : Icon { public ChannelDismiss() : base("ChannelDismiss", IconVariant.Regular, ChannelDismissSizeAndContent.Values[1]) { } }
            public class ChannelShare : Icon { public ChannelShare() : base("ChannelShare", IconVariant.Regular, ChannelShareSizeAndContent.Values[2]) { } }
            public class ChannelSubtract : Icon { public ChannelSubtract() : base("ChannelSubtract", IconVariant.Regular, ChannelSubtractSizeAndContent.Values[1]) { } }
            public class ChartMultiple : Icon { public ChartMultiple() : base("ChartMultiple", IconVariant.Regular, ChartMultipleSizeAndContent.Values[0]) { } }
            public class ChartPerson : Icon { public ChartPerson() : base("ChartPerson", IconVariant.Regular, ChartPersonSizeAndContent.Values[0]) { } }
            public class Chat : Icon { public Chat() : base("Chat", IconVariant.Regular, ChatSizeAndContent.Values[2]) { } }
            public class ChatAdd : Icon { public ChatAdd() : base("ChatAdd", IconVariant.Regular, ChatAddSizeAndContent.Values[1]) { } }
            public class ChatArrowBack : Icon { public ChatArrowBack() : base("ChatArrowBack", IconVariant.Regular, ChatArrowBackSizeAndContent.Values[1]) { } }
            public class ChatArrowDoubleBack : Icon { public ChatArrowDoubleBack() : base("ChatArrowDoubleBack", IconVariant.Regular, ChatArrowDoubleBackSizeAndContent.Values[1]) { } }
            public class ChatBubblesQuestion : Icon { public ChatBubblesQuestion() : base("ChatBubblesQuestion", IconVariant.Regular, ChatBubblesQuestionSizeAndContent.Values[1]) { } }
            public class ChatCursor : Icon { public ChatCursor() : base("ChatCursor", IconVariant.Regular, ChatCursorSizeAndContent.Values[1]) { } }
            public class ChatDismiss : Icon { public ChatDismiss() : base("ChatDismiss", IconVariant.Regular, ChatDismissSizeAndContent.Values[1]) { } }
            public class ChatEmpty : Icon { public ChatEmpty() : base("ChatEmpty", IconVariant.Regular, ChatEmptySizeAndContent.Values[2]) { } }
            public class ChatHelp : Icon { public ChatHelp() : base("ChatHelp", IconVariant.Regular, ChatHelpSizeAndContent.Values[0]) { } }
            public class ChatLock : Icon { public ChatLock() : base("ChatLock", IconVariant.Regular, ChatLockSizeAndContent.Values[1]) { } }
            public class ChatMail : Icon { public ChatMail() : base("ChatMail", IconVariant.Regular, ChatMailSizeAndContent.Values[0]) { } }
            public class ChatMultiple : Icon { public ChatMultiple() : base("ChatMultiple", IconVariant.Regular, ChatMultipleSizeAndContent.Values[1]) { } }
            public class ChatMultipleHeart : Icon { public ChatMultipleHeart() : base("ChatMultipleHeart", IconVariant.Regular, ChatMultipleHeartSizeAndContent.Values[1]) { } }
            public class ChatOff : Icon { public ChatOff() : base("ChatOff", IconVariant.Regular, ChatOffSizeAndContent.Values[0]) { } }
            public class ChatSettings : Icon { public ChatSettings() : base("ChatSettings", IconVariant.Regular, ChatSettingsSizeAndContent.Values[0]) { } }
            public class ChatSparkle : Icon { public ChatSparkle() : base("ChatSparkle", IconVariant.Regular, ChatSparkleSizeAndContent.Values[1]) { } }
            public class ChatVideo : Icon { public ChatVideo() : base("ChatVideo", IconVariant.Regular, ChatVideoSizeAndContent.Values[0]) { } }
            public class ChatWarning : Icon { public ChatWarning() : base("ChatWarning", IconVariant.Regular, ChatWarningSizeAndContent.Values[1]) { } }
            public class Check : Icon { public Check() : base("Check", IconVariant.Regular, CheckSizeAndContent.Values[0]) { } }
            public class Checkbox1 : Icon { public Checkbox1() : base("Checkbox1", IconVariant.Regular, Checkbox1SizeAndContent.Values[0]) { } }
            public class Checkbox2 : Icon { public Checkbox2() : base("Checkbox2", IconVariant.Regular, Checkbox2SizeAndContent.Values[0]) { } }
            public class CheckboxArrowRight : Icon { public CheckboxArrowRight() : base("CheckboxArrowRight", IconVariant.Regular, CheckboxArrowRightSizeAndContent.Values[0]) { } }
            public class CheckboxChecked : Icon { public CheckboxChecked() : base("CheckboxChecked", IconVariant.Regular, CheckboxCheckedSizeAndContent.Values[1]) { } }
            public class CheckboxCheckedSync : Icon { public CheckboxCheckedSync() : base("CheckboxCheckedSync", IconVariant.Regular, CheckboxCheckedSyncSizeAndContent.Values[1]) { } }
            public class CheckboxIndeterminate : Icon { public CheckboxIndeterminate() : base("CheckboxIndeterminate", IconVariant.Regular, CheckboxIndeterminateSizeAndContent.Values[1]) { } }
            public class CheckboxPerson : Icon { public CheckboxPerson() : base("CheckboxPerson", IconVariant.Regular, CheckboxPersonSizeAndContent.Values[1]) { } }
            public class CheckboxUnchecked : Icon { public CheckboxUnchecked() : base("CheckboxUnchecked", IconVariant.Regular, CheckboxUncheckedSizeAndContent.Values[2]) { } }
            public class CheckboxWarning : Icon { public CheckboxWarning() : base("CheckboxWarning", IconVariant.Regular, CheckboxWarningSizeAndContent.Values[0]) { } }
            public class Checkmark : Icon { public Checkmark() : base("Checkmark", IconVariant.Regular, CheckmarkSizeAndContent.Values[2]) { } }
            public class CheckmarkCircle : Icon { public CheckmarkCircle() : base("CheckmarkCircle", IconVariant.Regular, CheckmarkCircleSizeAndContent.Values[2]) { } }
            public class CheckmarkCircleSquare : Icon { public CheckmarkCircleSquare() : base("CheckmarkCircleSquare", IconVariant.Regular, CheckmarkCircleSquareSizeAndContent.Values[1]) { } }
            public class CheckmarkLock : Icon { public CheckmarkLock() : base("CheckmarkLock", IconVariant.Regular, CheckmarkLockSizeAndContent.Values[1]) { } }
            public class CheckmarkNote : Icon { public CheckmarkNote() : base("CheckmarkNote", IconVariant.Regular, CheckmarkNoteSizeAndContent.Values[0]) { } }
            public class CheckmarkSquare : Icon { public CheckmarkSquare() : base("CheckmarkSquare", IconVariant.Regular, CheckmarkSquareSizeAndContent.Values[0]) { } }
            public class CheckmarkStarburst : Icon { public CheckmarkStarburst() : base("CheckmarkStarburst", IconVariant.Regular, CheckmarkStarburstSizeAndContent.Values[1]) { } }
            public class CheckmarkUnderlineCircle : Icon { public CheckmarkUnderlineCircle() : base("CheckmarkUnderlineCircle", IconVariant.Regular, CheckmarkUnderlineCircleSizeAndContent.Values[1]) { } }
            public class Chess : Icon { public Chess() : base("Chess", IconVariant.Regular, ChessSizeAndContent.Values[0]) { } }
            public class ChevronCircleDown : Icon { public ChevronCircleDown() : base("ChevronCircleDown", IconVariant.Regular, ChevronCircleDownSizeAndContent.Values[2]) { } }
            public class ChevronCircleLeft : Icon { public ChevronCircleLeft() : base("ChevronCircleLeft", IconVariant.Regular, ChevronCircleLeftSizeAndContent.Values[2]) { } }
            public class ChevronCircleRight : Icon { public ChevronCircleRight() : base("ChevronCircleRight", IconVariant.Regular, ChevronCircleRightSizeAndContent.Values[2]) { } }
            public class ChevronCircleUp : Icon { public ChevronCircleUp() : base("ChevronCircleUp", IconVariant.Regular, ChevronCircleUpSizeAndContent.Values[2]) { } }
            public class ChevronDoubleDown : Icon { public ChevronDoubleDown() : base("ChevronDoubleDown", IconVariant.Regular, ChevronDoubleDownSizeAndContent.Values[1]) { } }
            public class ChevronDoubleLeft : Icon { public ChevronDoubleLeft() : base("ChevronDoubleLeft", IconVariant.Regular, ChevronDoubleLeftSizeAndContent.Values[1]) { } }
            public class ChevronDoubleRight : Icon { public ChevronDoubleRight() : base("ChevronDoubleRight", IconVariant.Regular, ChevronDoubleRightSizeAndContent.Values[1]) { } }
            public class ChevronDoubleUp : Icon { public ChevronDoubleUp() : base("ChevronDoubleUp", IconVariant.Regular, ChevronDoubleUpSizeAndContent.Values[1]) { } }
            public class ChevronDown : Icon { public ChevronDown() : base("ChevronDown", IconVariant.Regular, ChevronDownSizeAndContent.Values[2]) { } }
            public class ChevronDownUp : Icon { public ChevronDownUp() : base("ChevronDownUp", IconVariant.Regular, ChevronDownUpSizeAndContent.Values[1]) { } }
            public class ChevronLeft : Icon { public ChevronLeft() : base("ChevronLeft", IconVariant.Regular, ChevronLeftSizeAndContent.Values[2]) { } }
            public class ChevronRight : Icon { public ChevronRight() : base("ChevronRight", IconVariant.Regular, ChevronRightSizeAndContent.Values[2]) { } }
            public class ChevronUp : Icon { public ChevronUp() : base("ChevronUp", IconVariant.Regular, ChevronUpSizeAndContent.Values[2]) { } }
            public class ChevronUpDown : Icon { public ChevronUpDown() : base("ChevronUpDown", IconVariant.Regular, ChevronUpDownSizeAndContent.Values[1]) { } }
            public class Circle : Icon { public Circle() : base("Circle", IconVariant.Regular, CircleSizeAndContent.Values[2]) { } }
            public class CircleEdit : Icon { public CircleEdit() : base("CircleEdit", IconVariant.Regular, CircleEditSizeAndContent.Values[0]) { } }
            public class CircleEraser : Icon { public CircleEraser() : base("CircleEraser", IconVariant.Regular, CircleEraserSizeAndContent.Values[0]) { } }
            public class CircleHalfFill : Icon { public CircleHalfFill() : base("CircleHalfFill", IconVariant.Regular, CircleHalfFillSizeAndContent.Values[2]) { } }
            public class CircleHint : Icon { public CircleHint() : base("CircleHint", IconVariant.Regular, CircleHintSizeAndContent.Values[1]) { } }
            public class CircleHintHalfVertical : Icon { public CircleHintHalfVertical() : base("CircleHintHalfVertical", IconVariant.Regular, CircleHintHalfVerticalSizeAndContent.Values[1]) { } }
            public class CircleImage : Icon { public CircleImage() : base("CircleImage", IconVariant.Regular, CircleImageSizeAndContent.Values[1]) { } }
            public class CircleLine : Icon { public CircleLine() : base("CircleLine", IconVariant.Regular, CircleLineSizeAndContent.Values[2]) { } }
            public class CircleMultipleSubtractCheckmark : Icon { public CircleMultipleSubtractCheckmark() : base("CircleMultipleSubtractCheckmark", IconVariant.Regular, CircleMultipleSubtractCheckmarkSizeAndContent.Values[0]) { } }
            public class CircleOff : Icon { public CircleOff() : base("CircleOff", IconVariant.Regular, CircleOffSizeAndContent.Values[1]) { } }
            public class CircleSmall : Icon { public CircleSmall() : base("CircleSmall", IconVariant.Regular, CircleSmallSizeAndContent.Values[0]) { } }
            public class City : Icon { public City() : base("City", IconVariant.Regular, CitySizeAndContent.Values[1]) { } }
            public class Class : Icon { public Class() : base("Class", IconVariant.Regular, ClassSizeAndContent.Values[0]) { } }
            public class Classification : Icon { public Classification() : base("Classification", IconVariant.Regular, ClassificationSizeAndContent.Values[1]) { } }
            public class ClearFormatting : Icon { public ClearFormatting() : base("ClearFormatting", IconVariant.Regular, ClearFormattingSizeAndContent.Values[1]) { } }
            public class Clipboard : Icon { public Clipboard() : base("Clipboard", IconVariant.Regular, ClipboardSizeAndContent.Values[1]) { } }
            public class Clipboard3Day : Icon { public Clipboard3Day() : base("Clipboard3Day", IconVariant.Regular, Clipboard3DaySizeAndContent.Values[1]) { } }
            public class ClipboardArrowRight : Icon { public ClipboardArrowRight() : base("ClipboardArrowRight", IconVariant.Regular, ClipboardArrowRightSizeAndContent.Values[1]) { } }
            public class ClipboardBrush : Icon { public ClipboardBrush() : base("ClipboardBrush", IconVariant.Regular, ClipboardBrushSizeAndContent.Values[1]) { } }
            public class ClipboardBulletList : Icon { public ClipboardBulletList() : base("ClipboardBulletList", IconVariant.Regular, ClipboardBulletListSizeAndContent.Values[1]) { } }
            public class ClipboardBulletListLtr : Icon { public ClipboardBulletListLtr() : base("ClipboardBulletListLtr", IconVariant.Regular, ClipboardBulletListLtrSizeAndContent.Values[1]) { } }
            public class ClipboardBulletListRtl : Icon { public ClipboardBulletListRtl() : base("ClipboardBulletListRtl", IconVariant.Regular, ClipboardBulletListRtlSizeAndContent.Values[1]) { } }
            public class ClipboardCheckmark : Icon { public ClipboardCheckmark() : base("ClipboardCheckmark", IconVariant.Regular, ClipboardCheckmarkSizeAndContent.Values[1]) { } }
            public class ClipboardClock : Icon { public ClipboardClock() : base("ClipboardClock", IconVariant.Regular, ClipboardClockSizeAndContent.Values[0]) { } }
            public class ClipboardCode : Icon { public ClipboardCode() : base("ClipboardCode", IconVariant.Regular, ClipboardCodeSizeAndContent.Values[1]) { } }
            public class ClipboardDataBar : Icon { public ClipboardDataBar() : base("ClipboardDataBar", IconVariant.Regular, ClipboardDataBarSizeAndContent.Values[0]) { } }
            public class ClipboardDay : Icon { public ClipboardDay() : base("ClipboardDay", IconVariant.Regular, ClipboardDaySizeAndContent.Values[1]) { } }
            public class ClipboardEdit : Icon { public ClipboardEdit() : base("ClipboardEdit", IconVariant.Regular, ClipboardEditSizeAndContent.Values[0]) { } }
            public class ClipboardError : Icon { public ClipboardError() : base("ClipboardError", IconVariant.Regular, ClipboardErrorSizeAndContent.Values[1]) { } }
            public class ClipboardHeart : Icon { public ClipboardHeart() : base("ClipboardHeart", IconVariant.Regular, ClipboardHeartSizeAndContent.Values[0]) { } }
            public class ClipboardImage : Icon { public ClipboardImage() : base("ClipboardImage", IconVariant.Regular, ClipboardImageSizeAndContent.Values[0]) { } }
            public class ClipboardLetter : Icon { public ClipboardLetter() : base("ClipboardLetter", IconVariant.Regular, ClipboardLetterSizeAndContent.Values[1]) { } }
            public class ClipboardLink : Icon { public ClipboardLink() : base("ClipboardLink", IconVariant.Regular, ClipboardLinkSizeAndContent.Values[1]) { } }
            public class ClipboardMathFormula : Icon { public ClipboardMathFormula() : base("ClipboardMathFormula", IconVariant.Regular, ClipboardMathFormulaSizeAndContent.Values[1]) { } }
            public class ClipboardMonth : Icon { public ClipboardMonth() : base("ClipboardMonth", IconVariant.Regular, ClipboardMonthSizeAndContent.Values[1]) { } }
            public class ClipboardMore : Icon { public ClipboardMore() : base("ClipboardMore", IconVariant.Regular, ClipboardMoreSizeAndContent.Values[0]) { } }
            public class ClipboardNote : Icon { public ClipboardNote() : base("ClipboardNote", IconVariant.Regular, ClipboardNoteSizeAndContent.Values[1]) { } }
            public class ClipboardNumber123 : Icon { public ClipboardNumber123() : base("ClipboardNumber123", IconVariant.Regular, ClipboardNumber123SizeAndContent.Values[1]) { } }
            public class ClipboardPaste : Icon { public ClipboardPaste() : base("ClipboardPaste", IconVariant.Regular, ClipboardPasteSizeAndContent.Values[1]) { } }
            public class ClipboardPulse : Icon { public ClipboardPulse() : base("ClipboardPulse", IconVariant.Regular, ClipboardPulseSizeAndContent.Values[0]) { } }
            public class ClipboardSearch : Icon { public ClipboardSearch() : base("ClipboardSearch", IconVariant.Regular, ClipboardSearchSizeAndContent.Values[0]) { } }
            public class ClipboardSettings : Icon { public ClipboardSettings() : base("ClipboardSettings", IconVariant.Regular, ClipboardSettingsSizeAndContent.Values[0]) { } }
            public class ClipboardTask : Icon { public ClipboardTask() : base("ClipboardTask", IconVariant.Regular, ClipboardTaskSizeAndContent.Values[1]) { } }
            public class ClipboardTaskAdd : Icon { public ClipboardTaskAdd() : base("ClipboardTaskAdd", IconVariant.Regular, ClipboardTaskAddSizeAndContent.Values[0]) { } }
            public class ClipboardTaskListLtr : Icon { public ClipboardTaskListLtr() : base("ClipboardTaskListLtr", IconVariant.Regular, ClipboardTaskListLtrSizeAndContent.Values[0]) { } }
            public class ClipboardTaskListRtl : Icon { public ClipboardTaskListRtl() : base("ClipboardTaskListRtl", IconVariant.Regular, ClipboardTaskListRtlSizeAndContent.Values[0]) { } }
            public class ClipboardTextEdit : Icon { public ClipboardTextEdit() : base("ClipboardTextEdit", IconVariant.Regular, ClipboardTextEditSizeAndContent.Values[0]) { } }
            public class ClipboardTextLtr : Icon { public ClipboardTextLtr() : base("ClipboardTextLtr", IconVariant.Regular, ClipboardTextLtrSizeAndContent.Values[1]) { } }
            public class ClipboardTextRtl : Icon { public ClipboardTextRtl() : base("ClipboardTextRtl", IconVariant.Regular, ClipboardTextRtlSizeAndContent.Values[1]) { } }
            public class Clock : Icon { public Clock() : base("Clock", IconVariant.Regular, ClockSizeAndContent.Values[2]) { } }
            public class ClockAlarm : Icon { public ClockAlarm() : base("ClockAlarm", IconVariant.Regular, ClockAlarmSizeAndContent.Values[1]) { } }
            public class ClockArrowDownload : Icon { public ClockArrowDownload() : base("ClockArrowDownload", IconVariant.Regular, ClockArrowDownloadSizeAndContent.Values[0]) { } }
            public class ClockDismiss : Icon { public ClockDismiss() : base("ClockDismiss", IconVariant.Regular, ClockDismissSizeAndContent.Values[0]) { } }
            public class ClockLock : Icon { public ClockLock() : base("ClockLock", IconVariant.Regular, ClockLockSizeAndContent.Values[1]) { } }
            public class ClockPause : Icon { public ClockPause() : base("ClockPause", IconVariant.Regular, ClockPauseSizeAndContent.Values[0]) { } }
            public class ClockToolbox : Icon { public ClockToolbox() : base("ClockToolbox", IconVariant.Regular, ClockToolboxSizeAndContent.Values[0]) { } }
            public class ClosedCaption : Icon { public ClosedCaption() : base("ClosedCaption", IconVariant.Regular, ClosedCaptionSizeAndContent.Values[1]) { } }
            public class ClosedCaptionOff : Icon { public ClosedCaptionOff() : base("ClosedCaptionOff", IconVariant.Regular, ClosedCaptionOffSizeAndContent.Values[1]) { } }
            public class Cloud : Icon { public Cloud() : base("Cloud", IconVariant.Regular, CloudSizeAndContent.Values[1]) { } }
            public class CloudAdd : Icon { public CloudAdd() : base("CloudAdd", IconVariant.Regular, CloudAddSizeAndContent.Values[1]) { } }
            public class CloudArchive : Icon { public CloudArchive() : base("CloudArchive", IconVariant.Regular, CloudArchiveSizeAndContent.Values[1]) { } }
            public class CloudArrowDown : Icon { public CloudArrowDown() : base("CloudArrowDown", IconVariant.Regular, CloudArrowDownSizeAndContent.Values[1]) { } }
            public class CloudArrowUp : Icon { public CloudArrowUp() : base("CloudArrowUp", IconVariant.Regular, CloudArrowUpSizeAndContent.Values[1]) { } }
            public class CloudBeaker : Icon { public CloudBeaker() : base("CloudBeaker", IconVariant.Regular, CloudBeakerSizeAndContent.Values[1]) { } }
            public class CloudBidirectional : Icon { public CloudBidirectional() : base("CloudBidirectional", IconVariant.Regular, CloudBidirectionalSizeAndContent.Values[0]) { } }
            public class CloudCheckmark : Icon { public CloudCheckmark() : base("CloudCheckmark", IconVariant.Regular, CloudCheckmarkSizeAndContent.Values[1]) { } }
            public class CloudCube : Icon { public CloudCube() : base("CloudCube", IconVariant.Regular, CloudCubeSizeAndContent.Values[1]) { } }
            public class CloudDatabase : Icon { public CloudDatabase() : base("CloudDatabase", IconVariant.Regular, CloudDatabaseSizeAndContent.Values[0]) { } }
            public class CloudDesktop : Icon { public CloudDesktop() : base("CloudDesktop", IconVariant.Regular, CloudDesktopSizeAndContent.Values[0]) { } }
            public class CloudDismiss : Icon { public CloudDismiss() : base("CloudDismiss", IconVariant.Regular, CloudDismissSizeAndContent.Values[1]) { } }
            public class CloudEdit : Icon { public CloudEdit() : base("CloudEdit", IconVariant.Regular, CloudEditSizeAndContent.Values[1]) { } }
            public class CloudError : Icon { public CloudError() : base("CloudError", IconVariant.Regular, CloudErrorSizeAndContent.Values[1]) { } }
            public class CloudFlow : Icon { public CloudFlow() : base("CloudFlow", IconVariant.Regular, CloudFlowSizeAndContent.Values[0]) { } }
            public class CloudLink : Icon { public CloudLink() : base("CloudLink", IconVariant.Regular, CloudLinkSizeAndContent.Values[1]) { } }
            public class CloudOff : Icon { public CloudOff() : base("CloudOff", IconVariant.Regular, CloudOffSizeAndContent.Values[1]) { } }
            public class CloudSwap : Icon { public CloudSwap() : base("CloudSwap", IconVariant.Regular, CloudSwapSizeAndContent.Values[0]) { } }
            public class CloudSync : Icon { public CloudSync() : base("CloudSync", IconVariant.Regular, CloudSyncSizeAndContent.Values[1]) { } }
            public class CloudWords : Icon { public CloudWords() : base("CloudWords", IconVariant.Regular, CloudWordsSizeAndContent.Values[1]) { } }
            public class Clover : Icon { public Clover() : base("Clover", IconVariant.Regular, CloverSizeAndContent.Values[1]) { } }
            public class Code : Icon { public Code() : base("Code", IconVariant.Regular, CodeSizeAndContent.Values[1]) { } }
            public class CodeBlock : Icon { public CodeBlock() : base("CodeBlock", IconVariant.Regular, CodeBlockSizeAndContent.Values[1]) { } }
            public class CodeCircle : Icon { public CodeCircle() : base("CodeCircle", IconVariant.Regular, CodeCircleSizeAndContent.Values[0]) { } }
            public class CodeText : Icon { public CodeText() : base("CodeText", IconVariant.Regular, CodeTextSizeAndContent.Values[1]) { } }
            public class CodeTextEdit : Icon { public CodeTextEdit() : base("CodeTextEdit", IconVariant.Regular, CodeTextEditSizeAndContent.Values[0]) { } }
            public class Collections : Icon { public Collections() : base("Collections", IconVariant.Regular, CollectionsSizeAndContent.Values[1]) { } }
            public class CollectionsAdd : Icon { public CollectionsAdd() : base("CollectionsAdd", IconVariant.Regular, CollectionsAddSizeAndContent.Values[0]) { } }
            public class Color : Icon { public Color() : base("Color", IconVariant.Regular, ColorSizeAndContent.Values[1]) { } }
            public class ColorBackground : Icon { public ColorBackground() : base("ColorBackground", IconVariant.Regular, ColorBackgroundSizeAndContent.Values[0]) { } }
            public class ColorBackgroundAccent : Icon { public ColorBackgroundAccent() : base("ColorBackgroundAccent", IconVariant.Regular, ColorBackgroundAccentSizeAndContent.Values[0]) { } }
            public class ColorFill : Icon { public ColorFill() : base("ColorFill", IconVariant.Regular, ColorFillSizeAndContent.Values[1]) { } }
            public class ColorFillAccent : Icon { public ColorFillAccent() : base("ColorFillAccent", IconVariant.Regular, ColorFillAccentSizeAndContent.Values[1]) { } }
            public class ColorLine : Icon { public ColorLine() : base("ColorLine", IconVariant.Regular, ColorLineSizeAndContent.Values[1]) { } }
            public class ColorLineAccent : Icon { public ColorLineAccent() : base("ColorLineAccent", IconVariant.Regular, ColorLineAccentSizeAndContent.Values[1]) { } }
            public class Column : Icon { public Column() : base("Column", IconVariant.Regular, ColumnSizeAndContent.Values[0]) { } }
            public class ColumnArrowRight : Icon { public ColumnArrowRight() : base("ColumnArrowRight", IconVariant.Regular, ColumnArrowRightSizeAndContent.Values[0]) { } }
            public class ColumnDoubleCompare : Icon { public ColumnDoubleCompare() : base("ColumnDoubleCompare", IconVariant.Regular, ColumnDoubleCompareSizeAndContent.Values[0]) { } }
            public class ColumnEdit : Icon { public ColumnEdit() : base("ColumnEdit", IconVariant.Regular, ColumnEditSizeAndContent.Values[0]) { } }
            public class ColumnSingleCompare : Icon { public ColumnSingleCompare() : base("ColumnSingleCompare", IconVariant.Regular, ColumnSingleCompareSizeAndContent.Values[1]) { } }
            public class ColumnTriple : Icon { public ColumnTriple() : base("ColumnTriple", IconVariant.Regular, ColumnTripleSizeAndContent.Values[0]) { } }
            public class ColumnTripleEdit : Icon { public ColumnTripleEdit() : base("ColumnTripleEdit", IconVariant.Regular, ColumnTripleEditSizeAndContent.Values[0]) { } }
            public class Comma : Icon { public Comma() : base("Comma", IconVariant.Regular, CommaSizeAndContent.Values[0]) { } }
            public class Comment : Icon { public Comment() : base("Comment", IconVariant.Regular, CommentSizeAndContent.Values[2]) { } }
            public class CommentAdd : Icon { public CommentAdd() : base("CommentAdd", IconVariant.Regular, CommentAddSizeAndContent.Values[2]) { } }
            public class CommentArrowLeft : Icon { public CommentArrowLeft() : base("CommentArrowLeft", IconVariant.Regular, CommentArrowLeftSizeAndContent.Values[2]) { } }
            public class CommentArrowRight : Icon { public CommentArrowRight() : base("CommentArrowRight", IconVariant.Regular, CommentArrowRightSizeAndContent.Values[2]) { } }
            public class CommentCheckmark : Icon { public CommentCheckmark() : base("CommentCheckmark", IconVariant.Regular, CommentCheckmarkSizeAndContent.Values[2]) { } }
            public class CommentDismiss : Icon { public CommentDismiss() : base("CommentDismiss", IconVariant.Regular, CommentDismissSizeAndContent.Values[0]) { } }
            public class CommentEdit : Icon { public CommentEdit() : base("CommentEdit", IconVariant.Regular, CommentEditSizeAndContent.Values[1]) { } }
            public class CommentError : Icon { public CommentError() : base("CommentError", IconVariant.Regular, CommentErrorSizeAndContent.Values[1]) { } }
            public class CommentLightning : Icon { public CommentLightning() : base("CommentLightning", IconVariant.Regular, CommentLightningSizeAndContent.Values[0]) { } }
            public class CommentLink : Icon { public CommentLink() : base("CommentLink", IconVariant.Regular, CommentLinkSizeAndContent.Values[1]) { } }
            public class CommentMention : Icon { public CommentMention() : base("CommentMention", IconVariant.Regular, CommentMentionSizeAndContent.Values[1]) { } }
            public class CommentMultiple : Icon { public CommentMultiple() : base("CommentMultiple", IconVariant.Regular, CommentMultipleSizeAndContent.Values[1]) { } }
            public class CommentMultipleCheckmark : Icon { public CommentMultipleCheckmark() : base("CommentMultipleCheckmark", IconVariant.Regular, CommentMultipleCheckmarkSizeAndContent.Values[1]) { } }
            public class CommentMultipleLink : Icon { public CommentMultipleLink() : base("CommentMultipleLink", IconVariant.Regular, CommentMultipleLinkSizeAndContent.Values[1]) { } }
            public class CommentNote : Icon { public CommentNote() : base("CommentNote", IconVariant.Regular, CommentNoteSizeAndContent.Values[0]) { } }
            public class CommentOff : Icon { public CommentOff() : base("CommentOff", IconVariant.Regular, CommentOffSizeAndContent.Values[1]) { } }
            public class Communication : Icon { public Communication() : base("Communication", IconVariant.Regular, CommunicationSizeAndContent.Values[1]) { } }
            public class CommunicationPerson : Icon { public CommunicationPerson() : base("CommunicationPerson", IconVariant.Regular, CommunicationPersonSizeAndContent.Values[0]) { } }
            public class CommunicationShield : Icon { public CommunicationShield() : base("CommunicationShield", IconVariant.Regular, CommunicationShieldSizeAndContent.Values[1]) { } }
            public class CompassNorthwest : Icon { public CompassNorthwest() : base("CompassNorthwest", IconVariant.Regular, CompassNorthwestSizeAndContent.Values[1]) { } }
            public class Compose : Icon { public Compose() : base("Compose", IconVariant.Regular, ComposeSizeAndContent.Values[1]) { } }
            public class ConferenceRoom : Icon { public ConferenceRoom() : base("ConferenceRoom", IconVariant.Regular, ConferenceRoomSizeAndContent.Values[1]) { } }
            public class Connected : Icon { public Connected() : base("Connected", IconVariant.Regular, ConnectedSizeAndContent.Values[1]) { } }
            public class Connector : Icon { public Connector() : base("Connector", IconVariant.Regular, ConnectorSizeAndContent.Values[1]) { } }
            public class ContactCard : Icon { public ContactCard() : base("ContactCard", IconVariant.Regular, ContactCardSizeAndContent.Values[1]) { } }
            public class ContactCardGroup : Icon { public ContactCardGroup() : base("ContactCardGroup", IconVariant.Regular, ContactCardGroupSizeAndContent.Values[1]) { } }
            public class ContactCardLink : Icon { public ContactCardLink() : base("ContactCardLink", IconVariant.Regular, ContactCardLinkSizeAndContent.Values[1]) { } }
            public class ContactCardRibbon : Icon { public ContactCardRibbon() : base("ContactCardRibbon", IconVariant.Regular, ContactCardRibbonSizeAndContent.Values[1]) { } }
            public class ContentSettings : Icon { public ContentSettings() : base("ContentSettings", IconVariant.Regular, ContentSettingsSizeAndContent.Values[1]) { } }
            public class ContentView : Icon { public ContentView() : base("ContentView", IconVariant.Regular, ContentViewSizeAndContent.Values[0]) { } }
            public class ContentViewGallery : Icon { public ContentViewGallery() : base("ContentViewGallery", IconVariant.Regular, ContentViewGallerySizeAndContent.Values[1]) { } }
            public class ContentViewGalleryLightning : Icon { public ContentViewGalleryLightning() : base("ContentViewGalleryLightning", IconVariant.Regular, ContentViewGalleryLightningSizeAndContent.Values[1]) { } }
            public class ContractDownLeft : Icon { public ContractDownLeft() : base("ContractDownLeft", IconVariant.Regular, ContractDownLeftSizeAndContent.Values[1]) { } }
            public class ContractUpRight : Icon { public ContractUpRight() : base("ContractUpRight", IconVariant.Regular, ContractUpRightSizeAndContent.Values[1]) { } }
            public class ControlButton : Icon { public ControlButton() : base("ControlButton", IconVariant.Regular, ControlButtonSizeAndContent.Values[0]) { } }
            public class ConvertRange : Icon { public ConvertRange() : base("ConvertRange", IconVariant.Regular, ConvertRangeSizeAndContent.Values[0]) { } }
            public class Cookies : Icon { public Cookies() : base("Cookies", IconVariant.Regular, CookiesSizeAndContent.Values[0]) { } }
            public class Copy : Icon { public Copy() : base("Copy", IconVariant.Regular, CopySizeAndContent.Values[1]) { } }
            public class CopyAdd : Icon { public CopyAdd() : base("CopyAdd", IconVariant.Regular, CopyAddSizeAndContent.Values[0]) { } }
            public class CopyArrowRight : Icon { public CopyArrowRight() : base("CopyArrowRight", IconVariant.Regular, CopyArrowRightSizeAndContent.Values[1]) { } }
            public class CopySelect : Icon { public CopySelect() : base("CopySelect", IconVariant.Regular, CopySelectSizeAndContent.Values[0]) { } }
            public class Couch : Icon { public Couch() : base("Couch", IconVariant.Regular, CouchSizeAndContent.Values[1]) { } }
            public class CreditCardClock : Icon { public CreditCardClock() : base("CreditCardClock", IconVariant.Regular, CreditCardClockSizeAndContent.Values[0]) { } }
            public class CreditCardPerson : Icon { public CreditCardPerson() : base("CreditCardPerson", IconVariant.Regular, CreditCardPersonSizeAndContent.Values[0]) { } }
            public class CreditCardToolbox : Icon { public CreditCardToolbox() : base("CreditCardToolbox", IconVariant.Regular, CreditCardToolboxSizeAndContent.Values[0]) { } }
            public class Crop : Icon { public Crop() : base("Crop", IconVariant.Regular, CropSizeAndContent.Values[1]) { } }
            public class CropInterim : Icon { public CropInterim() : base("CropInterim", IconVariant.Regular, CropInterimSizeAndContent.Values[0]) { } }
            public class CropInterimOff : Icon { public CropInterimOff() : base("CropInterimOff", IconVariant.Regular, CropInterimOffSizeAndContent.Values[0]) { } }
            public class Crown : Icon { public Crown() : base("Crown", IconVariant.Regular, CrownSizeAndContent.Values[1]) { } }
            public class Cube : Icon { public Cube() : base("Cube", IconVariant.Regular, CubeSizeAndContent.Values[2]) { } }
            public class CubeAdd : Icon { public CubeAdd() : base("CubeAdd", IconVariant.Regular, CubeAddSizeAndContent.Values[0]) { } }
            public class CubeArrowCurveDown : Icon { public CubeArrowCurveDown() : base("CubeArrowCurveDown", IconVariant.Regular, CubeArrowCurveDownSizeAndContent.Values[0]) { } }
            public class CubeLink : Icon { public CubeLink() : base("CubeLink", IconVariant.Regular, CubeLinkSizeAndContent.Values[0]) { } }
            public class CubeMultiple : Icon { public CubeMultiple() : base("CubeMultiple", IconVariant.Regular, CubeMultipleSizeAndContent.Values[0]) { } }
            public class CubeQuick : Icon { public CubeQuick() : base("CubeQuick", IconVariant.Regular, CubeQuickSizeAndContent.Values[1]) { } }
            public class CubeRotate : Icon { public CubeRotate() : base("CubeRotate", IconVariant.Regular, CubeRotateSizeAndContent.Values[0]) { } }
            public class CubeSync : Icon { public CubeSync() : base("CubeSync", IconVariant.Regular, CubeSyncSizeAndContent.Values[0]) { } }
            public class CubeTree : Icon { public CubeTree() : base("CubeTree", IconVariant.Regular, CubeTreeSizeAndContent.Values[0]) { } }
            public class CurrencyDollarEuro : Icon { public CurrencyDollarEuro() : base("CurrencyDollarEuro", IconVariant.Regular, CurrencyDollarEuroSizeAndContent.Values[1]) { } }
            public class CurrencyDollarRupee : Icon { public CurrencyDollarRupee() : base("CurrencyDollarRupee", IconVariant.Regular, CurrencyDollarRupeeSizeAndContent.Values[1]) { } }
            public class Cursor : Icon { public Cursor() : base("Cursor", IconVariant.Regular, CursorSizeAndContent.Values[1]) { } }
            public class CursorClick : Icon { public CursorClick() : base("CursorClick", IconVariant.Regular, CursorClickSizeAndContent.Values[0]) { } }
            public class CursorHover : Icon { public CursorHover() : base("CursorHover", IconVariant.Regular, CursorHoverSizeAndContent.Values[1]) { } }
            public class CursorHoverOff : Icon { public CursorHoverOff() : base("CursorHoverOff", IconVariant.Regular, CursorHoverOffSizeAndContent.Values[1]) { } }
            public class CursorProhibited : Icon { public CursorProhibited() : base("CursorProhibited", IconVariant.Regular, CursorProhibitedSizeAndContent.Values[1]) { } }
            public class Cut : Icon { public Cut() : base("Cut", IconVariant.Regular, CutSizeAndContent.Values[1]) { } }
            public class DarkTheme : Icon { public DarkTheme() : base("DarkTheme", IconVariant.Regular, DarkThemeSizeAndContent.Values[0]) { } }
            public class DataArea : Icon { public DataArea() : base("DataArea", IconVariant.Regular, DataAreaSizeAndContent.Values[0]) { } }
            public class DataBarHorizontal : Icon { public DataBarHorizontal() : base("DataBarHorizontal", IconVariant.Regular, DataBarHorizontalSizeAndContent.Values[0]) { } }
            public class DataBarVertical : Icon { public DataBarVertical() : base("DataBarVertical", IconVariant.Regular, DataBarVerticalSizeAndContent.Values[1]) { } }
            public class DataBarVerticalAdd : Icon { public DataBarVerticalAdd() : base("DataBarVerticalAdd", IconVariant.Regular, DataBarVerticalAddSizeAndContent.Values[0]) { } }
            public class DataBarVerticalAscending : Icon { public DataBarVerticalAscending() : base("DataBarVerticalAscending", IconVariant.Regular, DataBarVerticalAscendingSizeAndContent.Values[1]) { } }
            public class DataBarVerticalStar : Icon { public DataBarVerticalStar() : base("DataBarVerticalStar", IconVariant.Regular, DataBarVerticalStarSizeAndContent.Values[1]) { } }
            public class Database : Icon { public Database() : base("Database", IconVariant.Regular, DatabaseSizeAndContent.Values[1]) { } }
            public class DatabaseArrowDown : Icon { public DatabaseArrowDown() : base("DatabaseArrowDown", IconVariant.Regular, DatabaseArrowDownSizeAndContent.Values[0]) { } }
            public class DatabaseArrowRight : Icon { public DatabaseArrowRight() : base("DatabaseArrowRight", IconVariant.Regular, DatabaseArrowRightSizeAndContent.Values[0]) { } }
            public class DatabaseArrowUp : Icon { public DatabaseArrowUp() : base("DatabaseArrowUp", IconVariant.Regular, DatabaseArrowUpSizeAndContent.Values[0]) { } }
            public class DatabaseLightning : Icon { public DatabaseLightning() : base("DatabaseLightning", IconVariant.Regular, DatabaseLightningSizeAndContent.Values[0]) { } }
            public class DatabaseLink : Icon { public DatabaseLink() : base("DatabaseLink", IconVariant.Regular, DatabaseLinkSizeAndContent.Values[0]) { } }
            public class DatabaseMultiple : Icon { public DatabaseMultiple() : base("DatabaseMultiple", IconVariant.Regular, DatabaseMultipleSizeAndContent.Values[0]) { } }
            public class DatabasePerson : Icon { public DatabasePerson() : base("DatabasePerson", IconVariant.Regular, DatabasePersonSizeAndContent.Values[0]) { } }
            public class DatabasePlugConnected : Icon { public DatabasePlugConnected() : base("DatabasePlugConnected", IconVariant.Regular, DatabasePlugConnectedSizeAndContent.Values[0]) { } }
            public class DatabaseSearch : Icon { public DatabaseSearch() : base("DatabaseSearch", IconVariant.Regular, DatabaseSearchSizeAndContent.Values[0]) { } }
            public class DatabaseSwitch : Icon { public DatabaseSwitch() : base("DatabaseSwitch", IconVariant.Regular, DatabaseSwitchSizeAndContent.Values[0]) { } }
            public class DatabaseWarning : Icon { public DatabaseWarning() : base("DatabaseWarning", IconVariant.Regular, DatabaseWarningSizeAndContent.Values[0]) { } }
            public class DatabaseWindow : Icon { public DatabaseWindow() : base("DatabaseWindow", IconVariant.Regular, DatabaseWindowSizeAndContent.Values[0]) { } }
            public class DataFunnel : Icon { public DataFunnel() : base("DataFunnel", IconVariant.Regular, DataFunnelSizeAndContent.Values[0]) { } }
            public class DataHistogram : Icon { public DataHistogram() : base("DataHistogram", IconVariant.Regular, DataHistogramSizeAndContent.Values[1]) { } }
            public class DataLine : Icon { public DataLine() : base("DataLine", IconVariant.Regular, DataLineSizeAndContent.Values[0]) { } }
            public class DataPie : Icon { public DataPie() : base("DataPie", IconVariant.Regular, DataPieSizeAndContent.Values[0]) { } }
            public class DataScatter : Icon { public DataScatter() : base("DataScatter", IconVariant.Regular, DataScatterSizeAndContent.Values[0]) { } }
            public class DataSunburst : Icon { public DataSunburst() : base("DataSunburst", IconVariant.Regular, DataSunburstSizeAndContent.Values[0]) { } }
            public class DataTreemap : Icon { public DataTreemap() : base("DataTreemap", IconVariant.Regular, DataTreemapSizeAndContent.Values[0]) { } }
            public class DataTrending : Icon { public DataTrending() : base("DataTrending", IconVariant.Regular, DataTrendingSizeAndContent.Values[1]) { } }
            public class DataUsage : Icon { public DataUsage() : base("DataUsage", IconVariant.Regular, DataUsageSizeAndContent.Values[0]) { } }
            public class DataUsageEdit : Icon { public DataUsageEdit() : base("DataUsageEdit", IconVariant.Regular, DataUsageEditSizeAndContent.Values[0]) { } }
            public class DataUsageSettings : Icon { public DataUsageSettings() : base("DataUsageSettings", IconVariant.Regular, DataUsageSettingsSizeAndContent.Values[0]) { } }
            public class DataUsageToolbox : Icon { public DataUsageToolbox() : base("DataUsageToolbox", IconVariant.Regular, DataUsageToolboxSizeAndContent.Values[0]) { } }
            public class DataWaterfall : Icon { public DataWaterfall() : base("DataWaterfall", IconVariant.Regular, DataWaterfallSizeAndContent.Values[0]) { } }
            public class DataWhisker : Icon { public DataWhisker() : base("DataWhisker", IconVariant.Regular, DataWhiskerSizeAndContent.Values[0]) { } }
            public class DecimalArrowLeft : Icon { public DecimalArrowLeft() : base("DecimalArrowLeft", IconVariant.Regular, DecimalArrowLeftSizeAndContent.Values[0]) { } }
            public class DecimalArrowRight : Icon { public DecimalArrowRight() : base("DecimalArrowRight", IconVariant.Regular, DecimalArrowRightSizeAndContent.Values[0]) { } }
            public class Delete : Icon { public Delete() : base("Delete", IconVariant.Regular, DeleteSizeAndContent.Values[2]) { } }
            public class DeleteArrowBack : Icon { public DeleteArrowBack() : base("DeleteArrowBack", IconVariant.Regular, DeleteArrowBackSizeAndContent.Values[1]) { } }
            public class DeleteDismiss : Icon { public DeleteDismiss() : base("DeleteDismiss", IconVariant.Regular, DeleteDismissSizeAndContent.Values[0]) { } }
            public class DeleteLines : Icon { public DeleteLines() : base("DeleteLines", IconVariant.Regular, DeleteLinesSizeAndContent.Values[0]) { } }
            public class DeleteOff : Icon { public DeleteOff() : base("DeleteOff", IconVariant.Regular, DeleteOffSizeAndContent.Values[0]) { } }
            public class Dentist : Icon { public Dentist() : base("Dentist", IconVariant.Regular, DentistSizeAndContent.Values[2]) { } }
            public class DesignIdeas : Icon { public DesignIdeas() : base("DesignIdeas", IconVariant.Regular, DesignIdeasSizeAndContent.Values[1]) { } }
            public class Desk : Icon { public Desk() : base("Desk", IconVariant.Regular, DeskSizeAndContent.Values[1]) { } }
            public class Desktop : Icon { public Desktop() : base("Desktop", IconVariant.Regular, DesktopSizeAndContent.Values[1]) { } }
            public class DesktopArrowDown : Icon { public DesktopArrowDown() : base("DesktopArrowDown", IconVariant.Regular, DesktopArrowDownSizeAndContent.Values[1]) { } }
            public class DesktopArrowRight : Icon { public DesktopArrowRight() : base("DesktopArrowRight", IconVariant.Regular, DesktopArrowRightSizeAndContent.Values[1]) { } }
            public class DesktopCheckmark : Icon { public DesktopCheckmark() : base("DesktopCheckmark", IconVariant.Regular, DesktopCheckmarkSizeAndContent.Values[1]) { } }
            public class DesktopCursor : Icon { public DesktopCursor() : base("DesktopCursor", IconVariant.Regular, DesktopCursorSizeAndContent.Values[1]) { } }
            public class DesktopEdit : Icon { public DesktopEdit() : base("DesktopEdit", IconVariant.Regular, DesktopEditSizeAndContent.Values[1]) { } }
            public class DesktopFlow : Icon { public DesktopFlow() : base("DesktopFlow", IconVariant.Regular, DesktopFlowSizeAndContent.Values[0]) { } }
            public class DesktopKeyboard : Icon { public DesktopKeyboard() : base("DesktopKeyboard", IconVariant.Regular, DesktopKeyboardSizeAndContent.Values[1]) { } }
            public class DesktopMac : Icon { public DesktopMac() : base("DesktopMac", IconVariant.Regular, DesktopMacSizeAndContent.Values[1]) { } }
            public class DesktopPulse : Icon { public DesktopPulse() : base("DesktopPulse", IconVariant.Regular, DesktopPulseSizeAndContent.Values[1]) { } }
            public class DesktopSignal : Icon { public DesktopSignal() : base("DesktopSignal", IconVariant.Regular, DesktopSignalSizeAndContent.Values[0]) { } }
            public class DesktopSpeaker : Icon { public DesktopSpeaker() : base("DesktopSpeaker", IconVariant.Regular, DesktopSpeakerSizeAndContent.Values[0]) { } }
            public class DesktopSpeakerOff : Icon { public DesktopSpeakerOff() : base("DesktopSpeakerOff", IconVariant.Regular, DesktopSpeakerOffSizeAndContent.Values[0]) { } }
            public class DesktopSync : Icon { public DesktopSync() : base("DesktopSync", IconVariant.Regular, DesktopSyncSizeAndContent.Values[1]) { } }
            public class DesktopToolbox : Icon { public DesktopToolbox() : base("DesktopToolbox", IconVariant.Regular, DesktopToolboxSizeAndContent.Values[0]) { } }
            public class DesktopTower : Icon { public DesktopTower() : base("DesktopTower", IconVariant.Regular, DesktopTowerSizeAndContent.Values[0]) { } }
            public class DeveloperBoard : Icon { public DeveloperBoard() : base("DeveloperBoard", IconVariant.Regular, DeveloperBoardSizeAndContent.Values[1]) { } }
            public class DeveloperBoardLightning : Icon { public DeveloperBoardLightning() : base("DeveloperBoardLightning", IconVariant.Regular, DeveloperBoardLightningSizeAndContent.Values[0]) { } }
            public class DeveloperBoardLightningToolbox : Icon { public DeveloperBoardLightningToolbox() : base("DeveloperBoardLightningToolbox", IconVariant.Regular, DeveloperBoardLightningToolboxSizeAndContent.Values[0]) { } }
            public class DeveloperBoardSearch : Icon { public DeveloperBoardSearch() : base("DeveloperBoardSearch", IconVariant.Regular, DeveloperBoardSearchSizeAndContent.Values[0]) { } }
            public class DeviceEq : Icon { public DeviceEq() : base("DeviceEq", IconVariant.Regular, DeviceEqSizeAndContent.Values[1]) { } }
            public class DeviceMeetingRoom : Icon { public DeviceMeetingRoom() : base("DeviceMeetingRoom", IconVariant.Regular, DeviceMeetingRoomSizeAndContent.Values[1]) { } }
            public class DeviceMeetingRoomRemote : Icon { public DeviceMeetingRoomRemote() : base("DeviceMeetingRoomRemote", IconVariant.Regular, DeviceMeetingRoomRemoteSizeAndContent.Values[1]) { } }
            public class Diagram : Icon { public Diagram() : base("Diagram", IconVariant.Regular, DiagramSizeAndContent.Values[0]) { } }
            public class Dialpad : Icon { public Dialpad() : base("Dialpad", IconVariant.Regular, DialpadSizeAndContent.Values[0]) { } }
            public class DialpadOff : Icon { public DialpadOff() : base("DialpadOff", IconVariant.Regular, DialpadOffSizeAndContent.Values[0]) { } }
            public class DialpadQuestionMark : Icon { public DialpadQuestionMark() : base("DialpadQuestionMark", IconVariant.Regular, DialpadQuestionMarkSizeAndContent.Values[0]) { } }
            public class Diamond : Icon { public Diamond() : base("Diamond", IconVariant.Regular, DiamondSizeAndContent.Values[1]) { } }
            public class Directions : Icon { public Directions() : base("Directions", IconVariant.Regular, DirectionsSizeAndContent.Values[1]) { } }
            public class Dishwasher : Icon { public Dishwasher() : base("Dishwasher", IconVariant.Regular, DishwasherSizeAndContent.Values[0]) { } }
            public class Dismiss : Icon { public Dismiss() : base("Dismiss", IconVariant.Regular, DismissSizeAndContent.Values[2]) { } }
            public class DismissCircle : Icon { public DismissCircle() : base("DismissCircle", IconVariant.Regular, DismissCircleSizeAndContent.Values[2]) { } }
            public class DismissSquare : Icon { public DismissSquare() : base("DismissSquare", IconVariant.Regular, DismissSquareSizeAndContent.Values[0]) { } }
            public class DismissSquareMultiple : Icon { public DismissSquareMultiple() : base("DismissSquareMultiple", IconVariant.Regular, DismissSquareMultipleSizeAndContent.Values[1]) { } }
            public class Diversity : Icon { public Diversity() : base("Diversity", IconVariant.Regular, DiversitySizeAndContent.Values[1]) { } }
            public class DividerShort : Icon { public DividerShort() : base("DividerShort", IconVariant.Regular, DividerShortSizeAndContent.Values[1]) { } }
            public class DividerTall : Icon { public DividerTall() : base("DividerTall", IconVariant.Regular, DividerTallSizeAndContent.Values[1]) { } }
            public class Dock : Icon { public Dock() : base("Dock", IconVariant.Regular, DockSizeAndContent.Values[0]) { } }
            public class DockRow : Icon { public DockRow() : base("DockRow", IconVariant.Regular, DockRowSizeAndContent.Values[0]) { } }
            public class Doctor : Icon { public Doctor() : base("Doctor", IconVariant.Regular, DoctorSizeAndContent.Values[2]) { } }
            public class Document : Icon { public Document() : base("Document", IconVariant.Regular, DocumentSizeAndContent.Values[1]) { } }
            public class Document100 : Icon { public Document100() : base("Document100", IconVariant.Regular, Document100SizeAndContent.Values[1]) { } }
            public class DocumentAdd : Icon { public DocumentAdd() : base("DocumentAdd", IconVariant.Regular, DocumentAddSizeAndContent.Values[1]) { } }
            public class DocumentArrowDown : Icon { public DocumentArrowDown() : base("DocumentArrowDown", IconVariant.Regular, DocumentArrowDownSizeAndContent.Values[1]) { } }
            public class DocumentArrowLeft : Icon { public DocumentArrowLeft() : base("DocumentArrowLeft", IconVariant.Regular, DocumentArrowLeftSizeAndContent.Values[1]) { } }
            public class DocumentArrowRight : Icon { public DocumentArrowRight() : base("DocumentArrowRight", IconVariant.Regular, DocumentArrowRightSizeAndContent.Values[0]) { } }
            public class DocumentArrowUp : Icon { public DocumentArrowUp() : base("DocumentArrowUp", IconVariant.Regular, DocumentArrowUpSizeAndContent.Values[1]) { } }
            public class DocumentBorder : Icon { public DocumentBorder() : base("DocumentBorder", IconVariant.Regular, DocumentBorderSizeAndContent.Values[0]) { } }
            public class DocumentBorderPrint : Icon { public DocumentBorderPrint() : base("DocumentBorderPrint", IconVariant.Regular, DocumentBorderPrintSizeAndContent.Values[0]) { } }
            public class DocumentBriefcase : Icon { public DocumentBriefcase() : base("DocumentBriefcase", IconVariant.Regular, DocumentBriefcaseSizeAndContent.Values[1]) { } }
            public class DocumentBulletList : Icon { public DocumentBulletList() : base("DocumentBulletList", IconVariant.Regular, DocumentBulletListSizeAndContent.Values[1]) { } }
            public class DocumentBulletListArrowLeft : Icon { public DocumentBulletListArrowLeft() : base("DocumentBulletListArrowLeft", IconVariant.Regular, DocumentBulletListArrowLeftSizeAndContent.Values[1]) { } }
            public class DocumentBulletListClock : Icon { public DocumentBulletListClock() : base("DocumentBulletListClock", IconVariant.Regular, DocumentBulletListClockSizeAndContent.Values[0]) { } }
            public class DocumentBulletListCube : Icon { public DocumentBulletListCube() : base("DocumentBulletListCube", IconVariant.Regular, DocumentBulletListCubeSizeAndContent.Values[1]) { } }
            public class DocumentBulletListMultiple : Icon { public DocumentBulletListMultiple() : base("DocumentBulletListMultiple", IconVariant.Regular, DocumentBulletListMultipleSizeAndContent.Values[0]) { } }
            public class DocumentBulletListOff : Icon { public DocumentBulletListOff() : base("DocumentBulletListOff", IconVariant.Regular, DocumentBulletListOffSizeAndContent.Values[0]) { } }
            public class DocumentCatchUp : Icon { public DocumentCatchUp() : base("DocumentCatchUp", IconVariant.Regular, DocumentCatchUpSizeAndContent.Values[1]) { } }
            public class DocumentCheckmark : Icon { public DocumentCheckmark() : base("DocumentCheckmark", IconVariant.Regular, DocumentCheckmarkSizeAndContent.Values[1]) { } }
            public class DocumentChevronDouble : Icon { public DocumentChevronDouble() : base("DocumentChevronDouble", IconVariant.Regular, DocumentChevronDoubleSizeAndContent.Values[0]) { } }
            public class DocumentCopy : Icon { public DocumentCopy() : base("DocumentCopy", IconVariant.Regular, DocumentCopySizeAndContent.Values[1]) { } }
            public class DocumentCss : Icon { public DocumentCss() : base("DocumentCss", IconVariant.Regular, DocumentCssSizeAndContent.Values[1]) { } }
            public class DocumentCube : Icon { public DocumentCube() : base("DocumentCube", IconVariant.Regular, DocumentCubeSizeAndContent.Values[0]) { } }
            public class DocumentData : Icon { public DocumentData() : base("DocumentData", IconVariant.Regular, DocumentDataSizeAndContent.Values[1]) { } }
            public class DocumentDatabase : Icon { public DocumentDatabase() : base("DocumentDatabase", IconVariant.Regular, DocumentDatabaseSizeAndContent.Values[0]) { } }
            public class DocumentDataLink : Icon { public DocumentDataLink() : base("DocumentDataLink", IconVariant.Regular, DocumentDataLinkSizeAndContent.Values[1]) { } }
            public class DocumentDataLock : Icon { public DocumentDataLock() : base("DocumentDataLock", IconVariant.Regular, DocumentDataLockSizeAndContent.Values[1]) { } }
            public class DocumentDismiss : Icon { public DocumentDismiss() : base("DocumentDismiss", IconVariant.Regular, DocumentDismissSizeAndContent.Values[1]) { } }
            public class DocumentEdit : Icon { public DocumentEdit() : base("DocumentEdit", IconVariant.Regular, DocumentEditSizeAndContent.Values[1]) { } }
            public class DocumentEndnote : Icon { public DocumentEndnote() : base("DocumentEndnote", IconVariant.Regular, DocumentEndnoteSizeAndContent.Values[0]) { } }
            public class DocumentError : Icon { public DocumentError() : base("DocumentError", IconVariant.Regular, DocumentErrorSizeAndContent.Values[1]) { } }
            public class DocumentFit : Icon { public DocumentFit() : base("DocumentFit", IconVariant.Regular, DocumentFitSizeAndContent.Values[1]) { } }
            public class DocumentFlowchart : Icon { public DocumentFlowchart() : base("DocumentFlowchart", IconVariant.Regular, DocumentFlowchartSizeAndContent.Values[0]) { } }
            public class DocumentFolder : Icon { public DocumentFolder() : base("DocumentFolder", IconVariant.Regular, DocumentFolderSizeAndContent.Values[1]) { } }
            public class DocumentFooter : Icon { public DocumentFooter() : base("DocumentFooter", IconVariant.Regular, DocumentFooterSizeAndContent.Values[1]) { } }
            public class DocumentFooterDismiss : Icon { public DocumentFooterDismiss() : base("DocumentFooterDismiss", IconVariant.Regular, DocumentFooterDismissSizeAndContent.Values[0]) { } }
            public class DocumentHeader : Icon { public DocumentHeader() : base("DocumentHeader", IconVariant.Regular, DocumentHeaderSizeAndContent.Values[1]) { } }
            public class DocumentHeaderArrowDown : Icon { public DocumentHeaderArrowDown() : base("DocumentHeaderArrowDown", IconVariant.Regular, DocumentHeaderArrowDownSizeAndContent.Values[1]) { } }
            public class DocumentHeaderDismiss : Icon { public DocumentHeaderDismiss() : base("DocumentHeaderDismiss", IconVariant.Regular, DocumentHeaderDismissSizeAndContent.Values[0]) { } }
            public class DocumentHeaderFooter : Icon { public DocumentHeaderFooter() : base("DocumentHeaderFooter", IconVariant.Regular, DocumentHeaderFooterSizeAndContent.Values[1]) { } }
            public class DocumentHeart : Icon { public DocumentHeart() : base("DocumentHeart", IconVariant.Regular, DocumentHeartSizeAndContent.Values[0]) { } }
            public class DocumentHeartPulse : Icon { public DocumentHeartPulse() : base("DocumentHeartPulse", IconVariant.Regular, DocumentHeartPulseSizeAndContent.Values[0]) { } }
            public class DocumentImage : Icon { public DocumentImage() : base("DocumentImage", IconVariant.Regular, DocumentImageSizeAndContent.Values[1]) { } }
            public class DocumentJava : Icon { public DocumentJava() : base("DocumentJava", IconVariant.Regular, DocumentJavaSizeAndContent.Values[1]) { } }
            public class DocumentJavascript : Icon { public DocumentJavascript() : base("DocumentJavascript", IconVariant.Regular, DocumentJavascriptSizeAndContent.Values[0]) { } }
            public class DocumentKey : Icon { public DocumentKey() : base("DocumentKey", IconVariant.Regular, DocumentKeySizeAndContent.Values[0]) { } }
            public class DocumentLandscape : Icon { public DocumentLandscape() : base("DocumentLandscape", IconVariant.Regular, DocumentLandscapeSizeAndContent.Values[0]) { } }
            public class DocumentLandscapeData : Icon { public DocumentLandscapeData() : base("DocumentLandscapeData", IconVariant.Regular, DocumentLandscapeDataSizeAndContent.Values[0]) { } }
            public class DocumentLandscapeSplit : Icon { public DocumentLandscapeSplit() : base("DocumentLandscapeSplit", IconVariant.Regular, DocumentLandscapeSplitSizeAndContent.Values[0]) { } }
            public class DocumentLandscapeSplitHint : Icon { public DocumentLandscapeSplitHint() : base("DocumentLandscapeSplitHint", IconVariant.Regular, DocumentLandscapeSplitHintSizeAndContent.Values[0]) { } }
            public class DocumentLightning : Icon { public DocumentLightning() : base("DocumentLightning", IconVariant.Regular, DocumentLightningSizeAndContent.Values[1]) { } }
            public class DocumentLink : Icon { public DocumentLink() : base("DocumentLink", IconVariant.Regular, DocumentLinkSizeAndContent.Values[1]) { } }
            public class DocumentLock : Icon { public DocumentLock() : base("DocumentLock", IconVariant.Regular, DocumentLockSizeAndContent.Values[1]) { } }
            public class DocumentMargins : Icon { public DocumentMargins() : base("DocumentMargins", IconVariant.Regular, DocumentMarginsSizeAndContent.Values[0]) { } }
            public class DocumentMention : Icon { public DocumentMention() : base("DocumentMention", IconVariant.Regular, DocumentMentionSizeAndContent.Values[1]) { } }
            public class DocumentMultiple : Icon { public DocumentMultiple() : base("DocumentMultiple", IconVariant.Regular, DocumentMultipleSizeAndContent.Values[1]) { } }
            public class DocumentMultiplePercent : Icon { public DocumentMultiplePercent() : base("DocumentMultiplePercent", IconVariant.Regular, DocumentMultiplePercentSizeAndContent.Values[0]) { } }
            public class DocumentMultipleProhibited : Icon { public DocumentMultipleProhibited() : base("DocumentMultipleProhibited", IconVariant.Regular, DocumentMultipleProhibitedSizeAndContent.Values[0]) { } }
            public class DocumentMultipleSync : Icon { public DocumentMultipleSync() : base("DocumentMultipleSync", IconVariant.Regular, DocumentMultipleSyncSizeAndContent.Values[0]) { } }
            public class DocumentOnePage : Icon { public DocumentOnePage() : base("DocumentOnePage", IconVariant.Regular, DocumentOnePageSizeAndContent.Values[1]) { } }
            public class DocumentOnePageAdd : Icon { public DocumentOnePageAdd() : base("DocumentOnePageAdd", IconVariant.Regular, DocumentOnePageAddSizeAndContent.Values[1]) { } }
            public class DocumentOnePageColumns : Icon { public DocumentOnePageColumns() : base("DocumentOnePageColumns", IconVariant.Regular, DocumentOnePageColumnsSizeAndContent.Values[0]) { } }
            public class DocumentOnePageLink : Icon { public DocumentOnePageLink() : base("DocumentOnePageLink", IconVariant.Regular, DocumentOnePageLinkSizeAndContent.Values[1]) { } }
            public class DocumentOnePageMultiple : Icon { public DocumentOnePageMultiple() : base("DocumentOnePageMultiple", IconVariant.Regular, DocumentOnePageMultipleSizeAndContent.Values[1]) { } }
            public class DocumentOnePageSparkle : Icon { public DocumentOnePageSparkle() : base("DocumentOnePageSparkle", IconVariant.Regular, DocumentOnePageSparkleSizeAndContent.Values[1]) { } }
            public class DocumentPageBottomCenter : Icon { public DocumentPageBottomCenter() : base("DocumentPageBottomCenter", IconVariant.Regular, DocumentPageBottomCenterSizeAndContent.Values[0]) { } }
            public class DocumentPageBottomLeft : Icon { public DocumentPageBottomLeft() : base("DocumentPageBottomLeft", IconVariant.Regular, DocumentPageBottomLeftSizeAndContent.Values[0]) { } }
            public class DocumentPageBottomRight : Icon { public DocumentPageBottomRight() : base("DocumentPageBottomRight", IconVariant.Regular, DocumentPageBottomRightSizeAndContent.Values[0]) { } }
            public class DocumentPageBreak : Icon { public DocumentPageBreak() : base("DocumentPageBreak", IconVariant.Regular, DocumentPageBreakSizeAndContent.Values[0]) { } }
            public class DocumentPageNumber : Icon { public DocumentPageNumber() : base("DocumentPageNumber", IconVariant.Regular, DocumentPageNumberSizeAndContent.Values[0]) { } }
            public class DocumentPageTopCenter : Icon { public DocumentPageTopCenter() : base("DocumentPageTopCenter", IconVariant.Regular, DocumentPageTopCenterSizeAndContent.Values[0]) { } }
            public class DocumentPageTopLeft : Icon { public DocumentPageTopLeft() : base("DocumentPageTopLeft", IconVariant.Regular, DocumentPageTopLeftSizeAndContent.Values[0]) { } }
            public class DocumentPageTopRight : Icon { public DocumentPageTopRight() : base("DocumentPageTopRight", IconVariant.Regular, DocumentPageTopRightSizeAndContent.Values[0]) { } }
            public class DocumentPdf : Icon { public DocumentPdf() : base("DocumentPdf", IconVariant.Regular, DocumentPdfSizeAndContent.Values[1]) { } }
            public class DocumentPercent : Icon { public DocumentPercent() : base("DocumentPercent", IconVariant.Regular, DocumentPercentSizeAndContent.Values[0]) { } }
            public class DocumentPerson : Icon { public DocumentPerson() : base("DocumentPerson", IconVariant.Regular, DocumentPersonSizeAndContent.Values[1]) { } }
            public class DocumentPill : Icon { public DocumentPill() : base("DocumentPill", IconVariant.Regular, DocumentPillSizeAndContent.Values[0]) { } }
            public class DocumentPrint : Icon { public DocumentPrint() : base("DocumentPrint", IconVariant.Regular, DocumentPrintSizeAndContent.Values[0]) { } }
            public class DocumentProhibited : Icon { public DocumentProhibited() : base("DocumentProhibited", IconVariant.Regular, DocumentProhibitedSizeAndContent.Values[0]) { } }
            public class DocumentQuestionMark : Icon { public DocumentQuestionMark() : base("DocumentQuestionMark", IconVariant.Regular, DocumentQuestionMarkSizeAndContent.Values[1]) { } }
            public class DocumentQueue : Icon { public DocumentQueue() : base("DocumentQueue", IconVariant.Regular, DocumentQueueSizeAndContent.Values[0]) { } }
            public class DocumentQueueAdd : Icon { public DocumentQueueAdd() : base("DocumentQueueAdd", IconVariant.Regular, DocumentQueueAddSizeAndContent.Values[0]) { } }
            public class DocumentQueueMultiple : Icon { public DocumentQueueMultiple() : base("DocumentQueueMultiple", IconVariant.Regular, DocumentQueueMultipleSizeAndContent.Values[0]) { } }
            public class DocumentRibbon : Icon { public DocumentRibbon() : base("DocumentRibbon", IconVariant.Regular, DocumentRibbonSizeAndContent.Values[1]) { } }
            public class DocumentSass : Icon { public DocumentSass() : base("DocumentSass", IconVariant.Regular, DocumentSassSizeAndContent.Values[1]) { } }
            public class DocumentSave : Icon { public DocumentSave() : base("DocumentSave", IconVariant.Regular, DocumentSaveSizeAndContent.Values[0]) { } }
            public class DocumentSearch : Icon { public DocumentSearch() : base("DocumentSearch", IconVariant.Regular, DocumentSearchSizeAndContent.Values[1]) { } }
            public class DocumentSettings : Icon { public DocumentSettings() : base("DocumentSettings", IconVariant.Regular, DocumentSettingsSizeAndContent.Values[1]) { } }
            public class DocumentSplitHint : Icon { public DocumentSplitHint() : base("DocumentSplitHint", IconVariant.Regular, DocumentSplitHintSizeAndContent.Values[1]) { } }
            public class DocumentSplitHintOff : Icon { public DocumentSplitHintOff() : base("DocumentSplitHintOff", IconVariant.Regular, DocumentSplitHintOffSizeAndContent.Values[1]) { } }
            public class DocumentSync : Icon { public DocumentSync() : base("DocumentSync", IconVariant.Regular, DocumentSyncSizeAndContent.Values[1]) { } }
            public class DocumentTable : Icon { public DocumentTable() : base("DocumentTable", IconVariant.Regular, DocumentTableSizeAndContent.Values[1]) { } }
            public class DocumentTableArrowRight : Icon { public DocumentTableArrowRight() : base("DocumentTableArrowRight", IconVariant.Regular, DocumentTableArrowRightSizeAndContent.Values[0]) { } }
            public class DocumentTableCheckmark : Icon { public DocumentTableCheckmark() : base("DocumentTableCheckmark", IconVariant.Regular, DocumentTableCheckmarkSizeAndContent.Values[0]) { } }
            public class DocumentTableCube : Icon { public DocumentTableCube() : base("DocumentTableCube", IconVariant.Regular, DocumentTableCubeSizeAndContent.Values[0]) { } }
            public class DocumentTableSearch : Icon { public DocumentTableSearch() : base("DocumentTableSearch", IconVariant.Regular, DocumentTableSearchSizeAndContent.Values[0]) { } }
            public class DocumentTableTruck : Icon { public DocumentTableTruck() : base("DocumentTableTruck", IconVariant.Regular, DocumentTableTruckSizeAndContent.Values[0]) { } }
            public class DocumentText : Icon { public DocumentText() : base("DocumentText", IconVariant.Regular, DocumentTextSizeAndContent.Values[1]) { } }
            public class DocumentTextClock : Icon { public DocumentTextClock() : base("DocumentTextClock", IconVariant.Regular, DocumentTextClockSizeAndContent.Values[0]) { } }
            public class DocumentTextExtract : Icon { public DocumentTextExtract() : base("DocumentTextExtract", IconVariant.Regular, DocumentTextExtractSizeAndContent.Values[0]) { } }
            public class DocumentTextLink : Icon { public DocumentTextLink() : base("DocumentTextLink", IconVariant.Regular, DocumentTextLinkSizeAndContent.Values[0]) { } }
            public class DocumentTextToolbox : Icon { public DocumentTextToolbox() : base("DocumentTextToolbox", IconVariant.Regular, DocumentTextToolboxSizeAndContent.Values[0]) { } }
            public class DocumentToolbox : Icon { public DocumentToolbox() : base("DocumentToolbox", IconVariant.Regular, DocumentToolboxSizeAndContent.Values[0]) { } }
            public class DocumentWidth : Icon { public DocumentWidth() : base("DocumentWidth", IconVariant.Regular, DocumentWidthSizeAndContent.Values[0]) { } }
            public class DocumentYml : Icon { public DocumentYml() : base("DocumentYml", IconVariant.Regular, DocumentYmlSizeAndContent.Values[1]) { } }
            public class Door : Icon { public Door() : base("Door", IconVariant.Regular, DoorSizeAndContent.Values[1]) { } }
            public class DoorArrowLeft : Icon { public DoorArrowLeft() : base("DoorArrowLeft", IconVariant.Regular, DoorArrowLeftSizeAndContent.Values[1]) { } }
            public class DoorArrowRight : Icon { public DoorArrowRight() : base("DoorArrowRight", IconVariant.Regular, DoorArrowRightSizeAndContent.Values[1]) { } }
            public class DoorTag : Icon { public DoorTag() : base("DoorTag", IconVariant.Regular, DoorTagSizeAndContent.Values[0]) { } }
            public class DoubleSwipeDown : Icon { public DoubleSwipeDown() : base("DoubleSwipeDown", IconVariant.Regular, DoubleSwipeDownSizeAndContent.Values[0]) { } }
            public class DoubleSwipeUp : Icon { public DoubleSwipeUp() : base("DoubleSwipeUp", IconVariant.Regular, DoubleSwipeUpSizeAndContent.Values[0]) { } }
            public class DoubleTapSwipeDown : Icon { public DoubleTapSwipeDown() : base("DoubleTapSwipeDown", IconVariant.Regular, DoubleTapSwipeDownSizeAndContent.Values[0]) { } }
            public class DoubleTapSwipeUp : Icon { public DoubleTapSwipeUp() : base("DoubleTapSwipeUp", IconVariant.Regular, DoubleTapSwipeUpSizeAndContent.Values[0]) { } }
            public class Drafts : Icon { public Drafts() : base("Drafts", IconVariant.Regular, DraftsSizeAndContent.Values[1]) { } }
            public class Drag : Icon { public Drag() : base("Drag", IconVariant.Regular, DragSizeAndContent.Values[0]) { } }
            public class Drawer : Icon { public Drawer() : base("Drawer", IconVariant.Regular, DrawerSizeAndContent.Values[0]) { } }
            public class DrawerAdd : Icon { public DrawerAdd() : base("DrawerAdd", IconVariant.Regular, DrawerAddSizeAndContent.Values[0]) { } }
            public class DrawerArrowDownload : Icon { public DrawerArrowDownload() : base("DrawerArrowDownload", IconVariant.Regular, DrawerArrowDownloadSizeAndContent.Values[0]) { } }
            public class DrawerDismiss : Icon { public DrawerDismiss() : base("DrawerDismiss", IconVariant.Regular, DrawerDismissSizeAndContent.Values[0]) { } }
            public class DrawerPlay : Icon { public DrawerPlay() : base("DrawerPlay", IconVariant.Regular, DrawerPlaySizeAndContent.Values[0]) { } }
            public class DrawerSubtract : Icon { public DrawerSubtract() : base("DrawerSubtract", IconVariant.Regular, DrawerSubtractSizeAndContent.Values[0]) { } }
            public class DrawImage : Icon { public DrawImage() : base("DrawImage", IconVariant.Regular, DrawImageSizeAndContent.Values[0]) { } }
            public class DrawShape : Icon { public DrawShape() : base("DrawShape", IconVariant.Regular, DrawShapeSizeAndContent.Values[0]) { } }
            public class DrawText : Icon { public DrawText() : base("DrawText", IconVariant.Regular, DrawTextSizeAndContent.Values[0]) { } }
            public class DrinkBeer : Icon { public DrinkBeer() : base("DrinkBeer", IconVariant.Regular, DrinkBeerSizeAndContent.Values[1]) { } }
            public class DrinkBottle : Icon { public DrinkBottle() : base("DrinkBottle", IconVariant.Regular, DrinkBottleSizeAndContent.Values[0]) { } }
            public class DrinkBottleOff : Icon { public DrinkBottleOff() : base("DrinkBottleOff", IconVariant.Regular, DrinkBottleOffSizeAndContent.Values[0]) { } }
            public class DrinkCoffee : Icon { public DrinkCoffee() : base("DrinkCoffee", IconVariant.Regular, DrinkCoffeeSizeAndContent.Values[1]) { } }
            public class DrinkMargarita : Icon { public DrinkMargarita() : base("DrinkMargarita", IconVariant.Regular, DrinkMargaritaSizeAndContent.Values[1]) { } }
            public class DrinkToGo : Icon { public DrinkToGo() : base("DrinkToGo", IconVariant.Regular, DrinkToGoSizeAndContent.Values[0]) { } }
            public class DrinkWine : Icon { public DrinkWine() : base("DrinkWine", IconVariant.Regular, DrinkWineSizeAndContent.Values[1]) { } }
            public class DriveTrain : Icon { public DriveTrain() : base("DriveTrain", IconVariant.Regular, DriveTrainSizeAndContent.Values[0]) { } }
            public class Drop : Icon { public Drop() : base("Drop", IconVariant.Regular, DropSizeAndContent.Values[2]) { } }
            public class DualScreen : Icon { public DualScreen() : base("DualScreen", IconVariant.Regular, DualScreenSizeAndContent.Values[0]) { } }
            public class DualScreenAdd : Icon { public DualScreenAdd() : base("DualScreenAdd", IconVariant.Regular, DualScreenAddSizeAndContent.Values[0]) { } }
            public class DualScreenArrowRight : Icon { public DualScreenArrowRight() : base("DualScreenArrowRight", IconVariant.Regular, DualScreenArrowRightSizeAndContent.Values[0]) { } }
            public class DualScreenArrowUp : Icon { public DualScreenArrowUp() : base("DualScreenArrowUp", IconVariant.Regular, DualScreenArrowUpSizeAndContent.Values[0]) { } }
            public class DualScreenClock : Icon { public DualScreenClock() : base("DualScreenClock", IconVariant.Regular, DualScreenClockSizeAndContent.Values[0]) { } }
            public class DualScreenClosedAlert : Icon { public DualScreenClosedAlert() : base("DualScreenClosedAlert", IconVariant.Regular, DualScreenClosedAlertSizeAndContent.Values[0]) { } }
            public class DualScreenDesktop : Icon { public DualScreenDesktop() : base("DualScreenDesktop", IconVariant.Regular, DualScreenDesktopSizeAndContent.Values[0]) { } }
            public class DualScreenDismiss : Icon { public DualScreenDismiss() : base("DualScreenDismiss", IconVariant.Regular, DualScreenDismissSizeAndContent.Values[0]) { } }
            public class DualScreenGroup : Icon { public DualScreenGroup() : base("DualScreenGroup", IconVariant.Regular, DualScreenGroupSizeAndContent.Values[0]) { } }
            public class DualScreenHeader : Icon { public DualScreenHeader() : base("DualScreenHeader", IconVariant.Regular, DualScreenHeaderSizeAndContent.Values[0]) { } }
            public class DualScreenLock : Icon { public DualScreenLock() : base("DualScreenLock", IconVariant.Regular, DualScreenLockSizeAndContent.Values[0]) { } }
            public class DualScreenMirror : Icon { public DualScreenMirror() : base("DualScreenMirror", IconVariant.Regular, DualScreenMirrorSizeAndContent.Values[0]) { } }
            public class DualScreenPagination : Icon { public DualScreenPagination() : base("DualScreenPagination", IconVariant.Regular, DualScreenPaginationSizeAndContent.Values[0]) { } }
            public class DualScreenSettings : Icon { public DualScreenSettings() : base("DualScreenSettings", IconVariant.Regular, DualScreenSettingsSizeAndContent.Values[0]) { } }
            public class DualScreenSpan : Icon { public DualScreenSpan() : base("DualScreenSpan", IconVariant.Regular, DualScreenSpanSizeAndContent.Values[0]) { } }
            public class DualScreenSpeaker : Icon { public DualScreenSpeaker() : base("DualScreenSpeaker", IconVariant.Regular, DualScreenSpeakerSizeAndContent.Values[0]) { } }
            public class DualScreenStatusBar : Icon { public DualScreenStatusBar() : base("DualScreenStatusBar", IconVariant.Regular, DualScreenStatusBarSizeAndContent.Values[0]) { } }
            public class DualScreenTablet : Icon { public DualScreenTablet() : base("DualScreenTablet", IconVariant.Regular, DualScreenTabletSizeAndContent.Values[0]) { } }
            public class DualScreenUpdate : Icon { public DualScreenUpdate() : base("DualScreenUpdate", IconVariant.Regular, DualScreenUpdateSizeAndContent.Values[0]) { } }
            public class DualScreenVerticalScroll : Icon { public DualScreenVerticalScroll() : base("DualScreenVerticalScroll", IconVariant.Regular, DualScreenVerticalScrollSizeAndContent.Values[0]) { } }
            public class DualScreenVibrate : Icon { public DualScreenVibrate() : base("DualScreenVibrate", IconVariant.Regular, DualScreenVibrateSizeAndContent.Values[0]) { } }
            public class Dumbbell : Icon { public Dumbbell() : base("Dumbbell", IconVariant.Regular, DumbbellSizeAndContent.Values[1]) { } }
            public class Dust : Icon { public Dust() : base("Dust", IconVariant.Regular, DustSizeAndContent.Values[0]) { } }
            public class Earth : Icon { public Earth() : base("Earth", IconVariant.Regular, EarthSizeAndContent.Values[1]) { } }
            public class EarthLeaf : Icon { public EarthLeaf() : base("EarthLeaf", IconVariant.Regular, EarthLeafSizeAndContent.Values[1]) { } }
            public class Edit : Icon { public Edit() : base("Edit", IconVariant.Regular, EditSizeAndContent.Values[2]) { } }
            public class EditArrowBack : Icon { public EditArrowBack() : base("EditArrowBack", IconVariant.Regular, EditArrowBackSizeAndContent.Values[1]) { } }
            public class EditOff : Icon { public EditOff() : base("EditOff", IconVariant.Regular, EditOffSizeAndContent.Values[1]) { } }
            public class EditProhibited : Icon { public EditProhibited() : base("EditProhibited", IconVariant.Regular, EditProhibitedSizeAndContent.Values[1]) { } }
            public class EditSettings : Icon { public EditSettings() : base("EditSettings", IconVariant.Regular, EditSettingsSizeAndContent.Values[0]) { } }
            public class Elevator : Icon { public Elevator() : base("Elevator", IconVariant.Regular, ElevatorSizeAndContent.Values[0]) { } }
            public class Emoji : Icon { public Emoji() : base("Emoji", IconVariant.Regular, EmojiSizeAndContent.Values[1]) { } }
            public class EmojiAdd : Icon { public EmojiAdd() : base("EmojiAdd", IconVariant.Regular, EmojiAddSizeAndContent.Values[1]) { } }
            public class EmojiAngry : Icon { public EmojiAngry() : base("EmojiAngry", IconVariant.Regular, EmojiAngrySizeAndContent.Values[1]) { } }
            public class EmojiEdit : Icon { public EmojiEdit() : base("EmojiEdit", IconVariant.Regular, EmojiEditSizeAndContent.Values[1]) { } }
            public class EmojiHand : Icon { public EmojiHand() : base("EmojiHand", IconVariant.Regular, EmojiHandSizeAndContent.Values[1]) { } }
            public class EmojiHint : Icon { public EmojiHint() : base("EmojiHint", IconVariant.Regular, EmojiHintSizeAndContent.Values[1]) { } }
            public class EmojiLaugh : Icon { public EmojiLaugh() : base("EmojiLaugh", IconVariant.Regular, EmojiLaughSizeAndContent.Values[1]) { } }
            public class EmojiMeh : Icon { public EmojiMeh() : base("EmojiMeh", IconVariant.Regular, EmojiMehSizeAndContent.Values[1]) { } }
            public class EmojiMultiple : Icon { public EmojiMultiple() : base("EmojiMultiple", IconVariant.Regular, EmojiMultipleSizeAndContent.Values[0]) { } }
            public class EmojiSad : Icon { public EmojiSad() : base("EmojiSad", IconVariant.Regular, EmojiSadSizeAndContent.Values[1]) { } }
            public class EmojiSadSlight : Icon { public EmojiSadSlight() : base("EmojiSadSlight", IconVariant.Regular, EmojiSadSlightSizeAndContent.Values[0]) { } }
            public class EmojiSmileSlight : Icon { public EmojiSmileSlight() : base("EmojiSmileSlight", IconVariant.Regular, EmojiSmileSlightSizeAndContent.Values[0]) { } }
            public class EmojiSparkle : Icon { public EmojiSparkle() : base("EmojiSparkle", IconVariant.Regular, EmojiSparkleSizeAndContent.Values[1]) { } }
            public class EmojiSurprise : Icon { public EmojiSurprise() : base("EmojiSurprise", IconVariant.Regular, EmojiSurpriseSizeAndContent.Values[0]) { } }
            public class Engine : Icon { public Engine() : base("Engine", IconVariant.Regular, EngineSizeAndContent.Values[0]) { } }
            public class EqualCircle : Icon { public EqualCircle() : base("EqualCircle", IconVariant.Regular, EqualCircleSizeAndContent.Values[0]) { } }
            public class EqualOff : Icon { public EqualOff() : base("EqualOff", IconVariant.Regular, EqualOffSizeAndContent.Values[2]) { } }
            public class Eraser : Icon { public Eraser() : base("Eraser", IconVariant.Regular, EraserSizeAndContent.Values[0]) { } }
            public class EraserMedium : Icon { public EraserMedium() : base("EraserMedium", IconVariant.Regular, EraserMediumSizeAndContent.Values[0]) { } }
            public class EraserSegment : Icon { public EraserSegment() : base("EraserSegment", IconVariant.Regular, EraserSegmentSizeAndContent.Values[0]) { } }
            public class EraserSmall : Icon { public EraserSmall() : base("EraserSmall", IconVariant.Regular, EraserSmallSizeAndContent.Values[0]) { } }
            public class EraserTool : Icon { public EraserTool() : base("EraserTool", IconVariant.Regular, EraserToolSizeAndContent.Values[0]) { } }
            public class ErrorCircle : Icon { public ErrorCircle() : base("ErrorCircle", IconVariant.Regular, ErrorCircleSizeAndContent.Values[2]) { } }
            public class ErrorCircleSettings : Icon { public ErrorCircleSettings() : base("ErrorCircleSettings", IconVariant.Regular, ErrorCircleSettingsSizeAndContent.Values[1]) { } }
            public class ExpandUpLeft : Icon { public ExpandUpLeft() : base("ExpandUpLeft", IconVariant.Regular, ExpandUpLeftSizeAndContent.Values[1]) { } }
            public class ExpandUpRight : Icon { public ExpandUpRight() : base("ExpandUpRight", IconVariant.Regular, ExpandUpRightSizeAndContent.Values[1]) { } }
            public class ExtendedDock : Icon { public ExtendedDock() : base("ExtendedDock", IconVariant.Regular, ExtendedDockSizeAndContent.Values[0]) { } }
            public class Eye : Icon { public Eye() : base("Eye", IconVariant.Regular, EyeSizeAndContent.Values[2]) { } }
            public class Eyedropper : Icon { public Eyedropper() : base("Eyedropper", IconVariant.Regular, EyedropperSizeAndContent.Values[1]) { } }
            public class EyedropperOff : Icon { public EyedropperOff() : base("EyedropperOff", IconVariant.Regular, EyedropperOffSizeAndContent.Values[0]) { } }
            public class EyeLines : Icon { public EyeLines() : base("EyeLines", IconVariant.Regular, EyeLinesSizeAndContent.Values[0]) { } }
            public class EyeOff : Icon { public EyeOff() : base("EyeOff", IconVariant.Regular, EyeOffSizeAndContent.Values[1]) { } }
            public class EyeTracking : Icon { public EyeTracking() : base("EyeTracking", IconVariant.Regular, EyeTrackingSizeAndContent.Values[1]) { } }
            public class EyeTrackingOff : Icon { public EyeTrackingOff() : base("EyeTrackingOff", IconVariant.Regular, EyeTrackingOffSizeAndContent.Values[1]) { } }
            public class FastAcceleration : Icon { public FastAcceleration() : base("FastAcceleration", IconVariant.Regular, FastAccelerationSizeAndContent.Values[0]) { } }
            public class FastForward : Icon { public FastForward() : base("FastForward", IconVariant.Regular, FastForwardSizeAndContent.Values[1]) { } }
            public class Fax : Icon { public Fax() : base("Fax", IconVariant.Regular, FaxSizeAndContent.Values[1]) { } }
            public class Feed : Icon { public Feed() : base("Feed", IconVariant.Regular, FeedSizeAndContent.Values[1]) { } }
            public class Filmstrip : Icon { public Filmstrip() : base("Filmstrip", IconVariant.Regular, FilmstripSizeAndContent.Values[1]) { } }
            public class FilmstripImage : Icon { public FilmstripImage() : base("FilmstripImage", IconVariant.Regular, FilmstripImageSizeAndContent.Values[0]) { } }
            public class FilmstripPlay : Icon { public FilmstripPlay() : base("FilmstripPlay", IconVariant.Regular, FilmstripPlaySizeAndContent.Values[1]) { } }
            public class FilmstripSplit : Icon { public FilmstripSplit() : base("FilmstripSplit", IconVariant.Regular, FilmstripSplitSizeAndContent.Values[1]) { } }
            public class Filter : Icon { public Filter() : base("Filter", IconVariant.Regular, FilterSizeAndContent.Values[2]) { } }
            public class FilterAdd : Icon { public FilterAdd() : base("FilterAdd", IconVariant.Regular, FilterAddSizeAndContent.Values[0]) { } }
            public class FilterDismiss : Icon { public FilterDismiss() : base("FilterDismiss", IconVariant.Regular, FilterDismissSizeAndContent.Values[1]) { } }
            public class FilterSync : Icon { public FilterSync() : base("FilterSync", IconVariant.Regular, FilterSyncSizeAndContent.Values[0]) { } }
            public class Fingerprint : Icon { public Fingerprint() : base("Fingerprint", IconVariant.Regular, FingerprintSizeAndContent.Values[1]) { } }
            public class Fire : Icon { public Fire() : base("Fire", IconVariant.Regular, FireSizeAndContent.Values[1]) { } }
            public class Fireplace : Icon { public Fireplace() : base("Fireplace", IconVariant.Regular, FireplaceSizeAndContent.Values[0]) { } }
            public class FixedWidth : Icon { public FixedWidth() : base("FixedWidth", IconVariant.Regular, FixedWidthSizeAndContent.Values[0]) { } }
            public class Flag : Icon { public Flag() : base("Flag", IconVariant.Regular, FlagSizeAndContent.Values[1]) { } }
            public class FlagCheckered : Icon { public FlagCheckered() : base("FlagCheckered", IconVariant.Regular, FlagCheckeredSizeAndContent.Values[0]) { } }
            public class FlagClock : Icon { public FlagClock() : base("FlagClock", IconVariant.Regular, FlagClockSizeAndContent.Values[1]) { } }
            public class FlagOff : Icon { public FlagOff() : base("FlagOff", IconVariant.Regular, FlagOffSizeAndContent.Values[1]) { } }
            public class Flash : Icon { public Flash() : base("Flash", IconVariant.Regular, FlashSizeAndContent.Values[1]) { } }
            public class FlashAdd : Icon { public FlashAdd() : base("FlashAdd", IconVariant.Regular, FlashAddSizeAndContent.Values[0]) { } }
            public class FlashAuto : Icon { public FlashAuto() : base("FlashAuto", IconVariant.Regular, FlashAutoSizeAndContent.Values[0]) { } }
            public class FlashCheckmark : Icon { public FlashCheckmark() : base("FlashCheckmark", IconVariant.Regular, FlashCheckmarkSizeAndContent.Values[1]) { } }
            public class FlashFlow : Icon { public FlashFlow() : base("FlashFlow", IconVariant.Regular, FlashFlowSizeAndContent.Values[1]) { } }
            public class Flashlight : Icon { public Flashlight() : base("Flashlight", IconVariant.Regular, FlashlightSizeAndContent.Values[1]) { } }
            public class FlashlightOff : Icon { public FlashlightOff() : base("FlashlightOff", IconVariant.Regular, FlashlightOffSizeAndContent.Values[0]) { } }
            public class FlashOff : Icon { public FlashOff() : base("FlashOff", IconVariant.Regular, FlashOffSizeAndContent.Values[0]) { } }
            public class FlashPlay : Icon { public FlashPlay() : base("FlashPlay", IconVariant.Regular, FlashPlaySizeAndContent.Values[0]) { } }
            public class FlashSettings : Icon { public FlashSettings() : base("FlashSettings", IconVariant.Regular, FlashSettingsSizeAndContent.Values[0]) { } }
            public class FlashSparkle : Icon { public FlashSparkle() : base("FlashSparkle", IconVariant.Regular, FlashSparkleSizeAndContent.Values[0]) { } }
            public class FlipHorizontal : Icon { public FlipHorizontal() : base("FlipHorizontal", IconVariant.Regular, FlipHorizontalSizeAndContent.Values[1]) { } }
            public class FlipVertical : Icon { public FlipVertical() : base("FlipVertical", IconVariant.Regular, FlipVerticalSizeAndContent.Values[1]) { } }
            public class Flow : Icon { public Flow() : base("Flow", IconVariant.Regular, FlowSizeAndContent.Values[1]) { } }
            public class Flowchart : Icon { public Flowchart() : base("Flowchart", IconVariant.Regular, FlowchartSizeAndContent.Values[0]) { } }
            public class FlowchartCircle : Icon { public FlowchartCircle() : base("FlowchartCircle", IconVariant.Regular, FlowchartCircleSizeAndContent.Values[0]) { } }
            public class Fluent : Icon { public Fluent() : base("Fluent", IconVariant.Regular, FluentSizeAndContent.Values[0]) { } }
            public class Fluid : Icon { public Fluid() : base("Fluid", IconVariant.Regular, FluidSizeAndContent.Values[1]) { } }
            public class Folder : Icon { public Folder() : base("Folder", IconVariant.Regular, FolderSizeAndContent.Values[1]) { } }
            public class FolderAdd : Icon { public FolderAdd() : base("FolderAdd", IconVariant.Regular, FolderAddSizeAndContent.Values[1]) { } }
            public class FolderArrowLeft : Icon { public FolderArrowLeft() : base("FolderArrowLeft", IconVariant.Regular, FolderArrowLeftSizeAndContent.Values[1]) { } }
            public class FolderArrowRight : Icon { public FolderArrowRight() : base("FolderArrowRight", IconVariant.Regular, FolderArrowRightSizeAndContent.Values[1]) { } }
            public class FolderArrowUp : Icon { public FolderArrowUp() : base("FolderArrowUp", IconVariant.Regular, FolderArrowUpSizeAndContent.Values[1]) { } }
            public class FolderBriefcase : Icon { public FolderBriefcase() : base("FolderBriefcase", IconVariant.Regular, FolderBriefcaseSizeAndContent.Values[0]) { } }
            public class FolderGlobe : Icon { public FolderGlobe() : base("FolderGlobe", IconVariant.Regular, FolderGlobeSizeAndContent.Values[1]) { } }
            public class FolderLightning : Icon { public FolderLightning() : base("FolderLightning", IconVariant.Regular, FolderLightningSizeAndContent.Values[1]) { } }
            public class FolderLink : Icon { public FolderLink() : base("FolderLink", IconVariant.Regular, FolderLinkSizeAndContent.Values[1]) { } }
            public class FolderList : Icon { public FolderList() : base("FolderList", IconVariant.Regular, FolderListSizeAndContent.Values[1]) { } }
            public class FolderMail : Icon { public FolderMail() : base("FolderMail", IconVariant.Regular, FolderMailSizeAndContent.Values[1]) { } }
            public class FolderOpen : Icon { public FolderOpen() : base("FolderOpen", IconVariant.Regular, FolderOpenSizeAndContent.Values[1]) { } }
            public class FolderOpenVertical : Icon { public FolderOpenVertical() : base("FolderOpenVertical", IconVariant.Regular, FolderOpenVerticalSizeAndContent.Values[1]) { } }
            public class FolderPeople : Icon { public FolderPeople() : base("FolderPeople", IconVariant.Regular, FolderPeopleSizeAndContent.Values[0]) { } }
            public class FolderPerson : Icon { public FolderPerson() : base("FolderPerson", IconVariant.Regular, FolderPersonSizeAndContent.Values[1]) { } }
            public class FolderProhibited : Icon { public FolderProhibited() : base("FolderProhibited", IconVariant.Regular, FolderProhibitedSizeAndContent.Values[1]) { } }
            public class FolderSearch : Icon { public FolderSearch() : base("FolderSearch", IconVariant.Regular, FolderSearchSizeAndContent.Values[1]) { } }
            public class FolderSwap : Icon { public FolderSwap() : base("FolderSwap", IconVariant.Regular, FolderSwapSizeAndContent.Values[1]) { } }
            public class FolderSync : Icon { public FolderSync() : base("FolderSync", IconVariant.Regular, FolderSyncSizeAndContent.Values[1]) { } }
            public class FolderZip : Icon { public FolderZip() : base("FolderZip", IconVariant.Regular, FolderZipSizeAndContent.Values[1]) { } }
            public class FontDecrease : Icon { public FontDecrease() : base("FontDecrease", IconVariant.Regular, FontDecreaseSizeAndContent.Values[0]) { } }
            public class FontIncrease : Icon { public FontIncrease() : base("FontIncrease", IconVariant.Regular, FontIncreaseSizeAndContent.Values[0]) { } }
            public class FontSpaceTrackingIn : Icon { public FontSpaceTrackingIn() : base("FontSpaceTrackingIn", IconVariant.Regular, FontSpaceTrackingInSizeAndContent.Values[1]) { } }
            public class FontSpaceTrackingOut : Icon { public FontSpaceTrackingOut() : base("FontSpaceTrackingOut", IconVariant.Regular, FontSpaceTrackingOutSizeAndContent.Values[1]) { } }
            public class Food : Icon { public Food() : base("Food", IconVariant.Regular, FoodSizeAndContent.Values[1]) { } }
            public class FoodApple : Icon { public FoodApple() : base("FoodApple", IconVariant.Regular, FoodAppleSizeAndContent.Values[0]) { } }
            public class FoodCake : Icon { public FoodCake() : base("FoodCake", IconVariant.Regular, FoodCakeSizeAndContent.Values[2]) { } }
            public class FoodCarrot : Icon { public FoodCarrot() : base("FoodCarrot", IconVariant.Regular, FoodCarrotSizeAndContent.Values[0]) { } }
            public class FoodChickenLeg : Icon { public FoodChickenLeg() : base("FoodChickenLeg", IconVariant.Regular, FoodChickenLegSizeAndContent.Values[1]) { } }
            public class FoodEgg : Icon { public FoodEgg() : base("FoodEgg", IconVariant.Regular, FoodEggSizeAndContent.Values[1]) { } }
            public class FoodFish : Icon { public FoodFish() : base("FoodFish", IconVariant.Regular, FoodFishSizeAndContent.Values[0]) { } }
            public class FoodGrains : Icon { public FoodGrains() : base("FoodGrains", IconVariant.Regular, FoodGrainsSizeAndContent.Values[0]) { } }
            public class FoodPizza : Icon { public FoodPizza() : base("FoodPizza", IconVariant.Regular, FoodPizzaSizeAndContent.Values[0]) { } }
            public class FoodToast : Icon { public FoodToast() : base("FoodToast", IconVariant.Regular, FoodToastSizeAndContent.Values[1]) { } }
            public class Form : Icon { public Form() : base("Form", IconVariant.Regular, FormSizeAndContent.Values[0]) { } }
            public class FormMultiple : Icon { public FormMultiple() : base("FormMultiple", IconVariant.Regular, FormMultipleSizeAndContent.Values[0]) { } }
            public class FormNew : Icon { public FormNew() : base("FormNew", IconVariant.Regular, FormNewSizeAndContent.Values[0]) { } }
            public class Fps120 : Icon { public Fps120() : base("Fps120", IconVariant.Regular, Fps120SizeAndContent.Values[0]) { } }
            public class Fps240 : Icon { public Fps240() : base("Fps240", IconVariant.Regular, Fps240SizeAndContent.Values[0]) { } }
            public class Fps30 : Icon { public Fps30() : base("Fps30", IconVariant.Regular, Fps30SizeAndContent.Values[1]) { } }
            public class Fps60 : Icon { public Fps60() : base("Fps60", IconVariant.Regular, Fps60SizeAndContent.Values[1]) { } }
            public class Fps960 : Icon { public Fps960() : base("Fps960", IconVariant.Regular, Fps960SizeAndContent.Values[0]) { } }
            public class Frame : Icon { public Frame() : base("Frame", IconVariant.Regular, FrameSizeAndContent.Values[1]) { } }
            public class FStop : Icon { public FStop() : base("FStop", IconVariant.Regular, FStopSizeAndContent.Values[1]) { } }
            public class FullScreenMaximize : Icon { public FullScreenMaximize() : base("FullScreenMaximize", IconVariant.Regular, FullScreenMaximizeSizeAndContent.Values[1]) { } }
            public class FullScreenMinimize : Icon { public FullScreenMinimize() : base("FullScreenMinimize", IconVariant.Regular, FullScreenMinimizeSizeAndContent.Values[1]) { } }
            public class Games : Icon { public Games() : base("Games", IconVariant.Regular, GamesSizeAndContent.Values[1]) { } }
            public class GanttChart : Icon { public GanttChart() : base("GanttChart", IconVariant.Regular, GanttChartSizeAndContent.Values[1]) { } }
            public class Gas : Icon { public Gas() : base("Gas", IconVariant.Regular, GasSizeAndContent.Values[0]) { } }
            public class GasPump : Icon { public GasPump() : base("GasPump", IconVariant.Regular, GasPumpSizeAndContent.Values[0]) { } }
            public class Gather : Icon { public Gather() : base("Gather", IconVariant.Regular, GatherSizeAndContent.Values[0]) { } }
            public class Gauge : Icon { public Gauge() : base("Gauge", IconVariant.Regular, GaugeSizeAndContent.Values[0]) { } }
            public class GaugeAdd : Icon { public GaugeAdd() : base("GaugeAdd", IconVariant.Regular, GaugeAddSizeAndContent.Values[0]) { } }
            public class Gavel : Icon { public Gavel() : base("Gavel", IconVariant.Regular, GavelSizeAndContent.Values[1]) { } }
            public class GavelProhibited : Icon { public GavelProhibited() : base("GavelProhibited", IconVariant.Regular, GavelProhibitedSizeAndContent.Values[1]) { } }
            public class Gesture : Icon { public Gesture() : base("Gesture", IconVariant.Regular, GestureSizeAndContent.Values[0]) { } }
            public class Gif : Icon { public Gif() : base("Gif", IconVariant.Regular, GifSizeAndContent.Values[1]) { } }
            public class Gift : Icon { public Gift() : base("Gift", IconVariant.Regular, GiftSizeAndContent.Values[1]) { } }
            public class GiftCard : Icon { public GiftCard() : base("GiftCard", IconVariant.Regular, GiftCardSizeAndContent.Values[1]) { } }
            public class GiftCardAdd : Icon { public GiftCardAdd() : base("GiftCardAdd", IconVariant.Regular, GiftCardAddSizeAndContent.Values[0]) { } }
            public class GiftCardArrowRight : Icon { public GiftCardArrowRight() : base("GiftCardArrowRight", IconVariant.Regular, GiftCardArrowRightSizeAndContent.Values[0]) { } }
            public class GiftCardMoney : Icon { public GiftCardMoney() : base("GiftCardMoney", IconVariant.Regular, GiftCardMoneySizeAndContent.Values[0]) { } }
            public class GiftCardMultiple : Icon { public GiftCardMultiple() : base("GiftCardMultiple", IconVariant.Regular, GiftCardMultipleSizeAndContent.Values[0]) { } }
            public class GiftOpen : Icon { public GiftOpen() : base("GiftOpen", IconVariant.Regular, GiftOpenSizeAndContent.Values[1]) { } }
            public class Glance : Icon { public Glance() : base("Glance", IconVariant.Regular, GlanceSizeAndContent.Values[1]) { } }
            public class GlanceHorizontal : Icon { public GlanceHorizontal() : base("GlanceHorizontal", IconVariant.Regular, GlanceHorizontalSizeAndContent.Values[2]) { } }
            public class GlanceHorizontalSparkles : Icon { public GlanceHorizontalSparkles() : base("GlanceHorizontalSparkles", IconVariant.Regular, GlanceHorizontalSparklesSizeAndContent.Values[1]) { } }
            public class Glasses : Icon { public Glasses() : base("Glasses", IconVariant.Regular, GlassesSizeAndContent.Values[1]) { } }
            public class GlassesOff : Icon { public GlassesOff() : base("GlassesOff", IconVariant.Regular, GlassesOffSizeAndContent.Values[1]) { } }
            public class Globe : Icon { public Globe() : base("Globe", IconVariant.Regular, GlobeSizeAndContent.Values[2]) { } }
            public class GlobeAdd : Icon { public GlobeAdd() : base("GlobeAdd", IconVariant.Regular, GlobeAddSizeAndContent.Values[0]) { } }
            public class GlobeArrowForward : Icon { public GlobeArrowForward() : base("GlobeArrowForward", IconVariant.Regular, GlobeArrowForwardSizeAndContent.Values[1]) { } }
            public class GlobeArrowUp : Icon { public GlobeArrowUp() : base("GlobeArrowUp", IconVariant.Regular, GlobeArrowUpSizeAndContent.Values[1]) { } }
            public class GlobeClock : Icon { public GlobeClock() : base("GlobeClock", IconVariant.Regular, GlobeClockSizeAndContent.Values[1]) { } }
            public class GlobeDesktop : Icon { public GlobeDesktop() : base("GlobeDesktop", IconVariant.Regular, GlobeDesktopSizeAndContent.Values[0]) { } }
            public class GlobeError : Icon { public GlobeError() : base("GlobeError", IconVariant.Regular, GlobeErrorSizeAndContent.Values[1]) { } }
            public class GlobeLocation : Icon { public GlobeLocation() : base("GlobeLocation", IconVariant.Regular, GlobeLocationSizeAndContent.Values[0]) { } }
            public class GlobePerson : Icon { public GlobePerson() : base("GlobePerson", IconVariant.Regular, GlobePersonSizeAndContent.Values[0]) { } }
            public class GlobeProhibited : Icon { public GlobeProhibited() : base("GlobeProhibited", IconVariant.Regular, GlobeProhibitedSizeAndContent.Values[1]) { } }
            public class GlobeSearch : Icon { public GlobeSearch() : base("GlobeSearch", IconVariant.Regular, GlobeSearchSizeAndContent.Values[0]) { } }
            public class GlobeShield : Icon { public GlobeShield() : base("GlobeShield", IconVariant.Regular, GlobeShieldSizeAndContent.Values[0]) { } }
            public class GlobeStar : Icon { public GlobeStar() : base("GlobeStar", IconVariant.Regular, GlobeStarSizeAndContent.Values[1]) { } }
            public class GlobeSurface : Icon { public GlobeSurface() : base("GlobeSurface", IconVariant.Regular, GlobeSurfaceSizeAndContent.Values[0]) { } }
            public class GlobeSync : Icon { public GlobeSync() : base("GlobeSync", IconVariant.Regular, GlobeSyncSizeAndContent.Values[1]) { } }
            public class GlobeVideo : Icon { public GlobeVideo() : base("GlobeVideo", IconVariant.Regular, GlobeVideoSizeAndContent.Values[0]) { } }
            public class GlobeWarning : Icon { public GlobeWarning() : base("GlobeWarning", IconVariant.Regular, GlobeWarningSizeAndContent.Values[1]) { } }
            public class Grid : Icon { public Grid() : base("Grid", IconVariant.Regular, GridSizeAndContent.Values[1]) { } }
            public class GridDots : Icon { public GridDots() : base("GridDots", IconVariant.Regular, GridDotsSizeAndContent.Values[0]) { } }
            public class GridKanban : Icon { public GridKanban() : base("GridKanban", IconVariant.Regular, GridKanbanSizeAndContent.Values[1]) { } }
            public class Group : Icon { public Group() : base("Group", IconVariant.Regular, GroupSizeAndContent.Values[0]) { } }
            public class GroupDismiss : Icon { public GroupDismiss() : base("GroupDismiss", IconVariant.Regular, GroupDismissSizeAndContent.Values[0]) { } }
            public class GroupList : Icon { public GroupList() : base("GroupList", IconVariant.Regular, GroupListSizeAndContent.Values[0]) { } }
            public class GroupReturn : Icon { public GroupReturn() : base("GroupReturn", IconVariant.Regular, GroupReturnSizeAndContent.Values[0]) { } }
            public class Guardian : Icon { public Guardian() : base("Guardian", IconVariant.Regular, GuardianSizeAndContent.Values[0]) { } }
            public class Guest : Icon { public Guest() : base("Guest", IconVariant.Regular, GuestSizeAndContent.Values[1]) { } }
            public class GuestAdd : Icon { public GuestAdd() : base("GuestAdd", IconVariant.Regular, GuestAddSizeAndContent.Values[0]) { } }
            public class Guitar : Icon { public Guitar() : base("Guitar", IconVariant.Regular, GuitarSizeAndContent.Values[1]) { } }
            public class HandDraw : Icon { public HandDraw() : base("HandDraw", IconVariant.Regular, HandDrawSizeAndContent.Values[1]) { } }
            public class HandLeft : Icon { public HandLeft() : base("HandLeft", IconVariant.Regular, HandLeftSizeAndContent.Values[1]) { } }
            public class HandLeftChat : Icon { public HandLeftChat() : base("HandLeftChat", IconVariant.Regular, HandLeftChatSizeAndContent.Values[1]) { } }
            public class HandOpenHeart : Icon { public HandOpenHeart() : base("HandOpenHeart", IconVariant.Regular, HandOpenHeartSizeAndContent.Values[0]) { } }
            public class HandRight : Icon { public HandRight() : base("HandRight", IconVariant.Regular, HandRightSizeAndContent.Values[1]) { } }
            public class HandRightOff : Icon { public HandRightOff() : base("HandRightOff", IconVariant.Regular, HandRightOffSizeAndContent.Values[1]) { } }
            public class Handshake : Icon { public Handshake() : base("Handshake", IconVariant.Regular, HandshakeSizeAndContent.Values[1]) { } }
            public class HandWave : Icon { public HandWave() : base("HandWave", IconVariant.Regular, HandWaveSizeAndContent.Values[1]) { } }
            public class HardDrive : Icon { public HardDrive() : base("HardDrive", IconVariant.Regular, HardDriveSizeAndContent.Values[1]) { } }
            public class HatGraduation : Icon { public HatGraduation() : base("HatGraduation", IconVariant.Regular, HatGraduationSizeAndContent.Values[2]) { } }
            public class HatGraduationAdd : Icon { public HatGraduationAdd() : base("HatGraduationAdd", IconVariant.Regular, HatGraduationAddSizeAndContent.Values[1]) { } }
            public class HatGraduationSparkle : Icon { public HatGraduationSparkle() : base("HatGraduationSparkle", IconVariant.Regular, HatGraduationSparkleSizeAndContent.Values[1]) { } }
            public class Hd : Icon { public Hd() : base("Hd", IconVariant.Regular, HdSizeAndContent.Values[1]) { } }
            public class Hdr : Icon { public Hdr() : base("Hdr", IconVariant.Regular, HdrSizeAndContent.Values[0]) { } }
            public class HdrOff : Icon { public HdrOff() : base("HdrOff", IconVariant.Regular, HdrOffSizeAndContent.Values[0]) { } }
            public class Headphones : Icon { public Headphones() : base("Headphones", IconVariant.Regular, HeadphonesSizeAndContent.Values[0]) { } }
            public class HeadphonesSoundWave : Icon { public HeadphonesSoundWave() : base("HeadphonesSoundWave", IconVariant.Regular, HeadphonesSoundWaveSizeAndContent.Values[0]) { } }
            public class Headset : Icon { public Headset() : base("Headset", IconVariant.Regular, HeadsetSizeAndContent.Values[1]) { } }
            public class HeadsetAdd : Icon { public HeadsetAdd() : base("HeadsetAdd", IconVariant.Regular, HeadsetAddSizeAndContent.Values[0]) { } }
            public class HeadsetVr : Icon { public HeadsetVr() : base("HeadsetVr", IconVariant.Regular, HeadsetVrSizeAndContent.Values[0]) { } }
            public class Heart : Icon { public Heart() : base("Heart", IconVariant.Regular, HeartSizeAndContent.Values[2]) { } }
            public class HeartBroken : Icon { public HeartBroken() : base("HeartBroken", IconVariant.Regular, HeartBrokenSizeAndContent.Values[1]) { } }
            public class HeartCircle : Icon { public HeartCircle() : base("HeartCircle", IconVariant.Regular, HeartCircleSizeAndContent.Values[1]) { } }
            public class HeartCircleHint : Icon { public HeartCircleHint() : base("HeartCircleHint", IconVariant.Regular, HeartCircleHintSizeAndContent.Values[1]) { } }
            public class HeartOff : Icon { public HeartOff() : base("HeartOff", IconVariant.Regular, HeartOffSizeAndContent.Values[1]) { } }
            public class HeartPulse : Icon { public HeartPulse() : base("HeartPulse", IconVariant.Regular, HeartPulseSizeAndContent.Values[0]) { } }
            public class HeartPulseCheckmark : Icon { public HeartPulseCheckmark() : base("HeartPulseCheckmark", IconVariant.Regular, HeartPulseCheckmarkSizeAndContent.Values[0]) { } }
            public class HeartPulseError : Icon { public HeartPulseError() : base("HeartPulseError", IconVariant.Regular, HeartPulseErrorSizeAndContent.Values[0]) { } }
            public class HeartPulseWarning : Icon { public HeartPulseWarning() : base("HeartPulseWarning", IconVariant.Regular, HeartPulseWarningSizeAndContent.Values[0]) { } }
            public class Hexagon : Icon { public Hexagon() : base("Hexagon", IconVariant.Regular, HexagonSizeAndContent.Values[2]) { } }
            public class HexagonThree : Icon { public HexagonThree() : base("HexagonThree", IconVariant.Regular, HexagonThreeSizeAndContent.Values[2]) { } }
            public class Highlight : Icon { public Highlight() : base("Highlight", IconVariant.Regular, HighlightSizeAndContent.Values[1]) { } }
            public class HighlightLink : Icon { public HighlightLink() : base("HighlightLink", IconVariant.Regular, HighlightLinkSizeAndContent.Values[0]) { } }
            public class History : Icon { public History() : base("History", IconVariant.Regular, HistorySizeAndContent.Values[1]) { } }
            public class HistoryDismiss : Icon { public HistoryDismiss() : base("HistoryDismiss", IconVariant.Regular, HistoryDismissSizeAndContent.Values[0]) { } }
            public class Home : Icon { public Home() : base("Home", IconVariant.Regular, HomeSizeAndContent.Values[2]) { } }
            public class HomeAdd : Icon { public HomeAdd() : base("HomeAdd", IconVariant.Regular, HomeAddSizeAndContent.Values[0]) { } }
            public class HomeCheckmark : Icon { public HomeCheckmark() : base("HomeCheckmark", IconVariant.Regular, HomeCheckmarkSizeAndContent.Values[1]) { } }
            public class HomeDatabase : Icon { public HomeDatabase() : base("HomeDatabase", IconVariant.Regular, HomeDatabaseSizeAndContent.Values[0]) { } }
            public class HomeHeart : Icon { public HomeHeart() : base("HomeHeart", IconVariant.Regular, HomeHeartSizeAndContent.Values[1]) { } }
            public class HomeMore : Icon { public HomeMore() : base("HomeMore", IconVariant.Regular, HomeMoreSizeAndContent.Values[0]) { } }
            public class HomePerson : Icon { public HomePerson() : base("HomePerson", IconVariant.Regular, HomePersonSizeAndContent.Values[0]) { } }
            public class HomeSplit : Icon { public HomeSplit() : base("HomeSplit", IconVariant.Regular, HomeSplitSizeAndContent.Values[0]) { } }
            public class Hourglass : Icon { public Hourglass() : base("Hourglass", IconVariant.Regular, HourglassSizeAndContent.Values[1]) { } }
            public class HourglassHalf : Icon { public HourglassHalf() : base("HourglassHalf", IconVariant.Regular, HourglassHalfSizeAndContent.Values[1]) { } }
            public class HourglassOneQuarter : Icon { public HourglassOneQuarter() : base("HourglassOneQuarter", IconVariant.Regular, HourglassOneQuarterSizeAndContent.Values[1]) { } }
            public class HourglassThreeQuarter : Icon { public HourglassThreeQuarter() : base("HourglassThreeQuarter", IconVariant.Regular, HourglassThreeQuarterSizeAndContent.Values[1]) { } }
            public class Icons : Icon { public Icons() : base("Icons", IconVariant.Regular, IconsSizeAndContent.Values[0]) { } }
            public class Image : Icon { public Image() : base("Image", IconVariant.Regular, ImageSizeAndContent.Values[1]) { } }
            public class ImageAdd : Icon { public ImageAdd() : base("ImageAdd", IconVariant.Regular, ImageAddSizeAndContent.Values[0]) { } }
            public class ImageAltText : Icon { public ImageAltText() : base("ImageAltText", IconVariant.Regular, ImageAltTextSizeAndContent.Values[1]) { } }
            public class ImageArrowBack : Icon { public ImageArrowBack() : base("ImageArrowBack", IconVariant.Regular, ImageArrowBackSizeAndContent.Values[0]) { } }
            public class ImageArrowCounterclockwise : Icon { public ImageArrowCounterclockwise() : base("ImageArrowCounterclockwise", IconVariant.Regular, ImageArrowCounterclockwiseSizeAndContent.Values[0]) { } }
            public class ImageArrowForward : Icon { public ImageArrowForward() : base("ImageArrowForward", IconVariant.Regular, ImageArrowForwardSizeAndContent.Values[0]) { } }
            public class ImageBorder : Icon { public ImageBorder() : base("ImageBorder", IconVariant.Regular, ImageBorderSizeAndContent.Values[1]) { } }
            public class ImageCircle : Icon { public ImageCircle() : base("ImageCircle", IconVariant.Regular, ImageCircleSizeAndContent.Values[1]) { } }
            public class ImageCopy : Icon { public ImageCopy() : base("ImageCopy", IconVariant.Regular, ImageCopySizeAndContent.Values[0]) { } }
            public class ImageEdit : Icon { public ImageEdit() : base("ImageEdit", IconVariant.Regular, ImageEditSizeAndContent.Values[1]) { } }
            public class ImageGlobe : Icon { public ImageGlobe() : base("ImageGlobe", IconVariant.Regular, ImageGlobeSizeAndContent.Values[0]) { } }
            public class ImageMultiple : Icon { public ImageMultiple() : base("ImageMultiple", IconVariant.Regular, ImageMultipleSizeAndContent.Values[1]) { } }
            public class ImageMultipleOff : Icon { public ImageMultipleOff() : base("ImageMultipleOff", IconVariant.Regular, ImageMultipleOffSizeAndContent.Values[1]) { } }
            public class ImageOff : Icon { public ImageOff() : base("ImageOff", IconVariant.Regular, ImageOffSizeAndContent.Values[0]) { } }
            public class ImageProhibited : Icon { public ImageProhibited() : base("ImageProhibited", IconVariant.Regular, ImageProhibitedSizeAndContent.Values[0]) { } }
            public class ImageReflection : Icon { public ImageReflection() : base("ImageReflection", IconVariant.Regular, ImageReflectionSizeAndContent.Values[0]) { } }
            public class ImageSearch : Icon { public ImageSearch() : base("ImageSearch", IconVariant.Regular, ImageSearchSizeAndContent.Values[0]) { } }
            public class ImageShadow : Icon { public ImageShadow() : base("ImageShadow", IconVariant.Regular, ImageShadowSizeAndContent.Values[0]) { } }
            public class ImageSparkle : Icon { public ImageSparkle() : base("ImageSparkle", IconVariant.Regular, ImageSparkleSizeAndContent.Values[1]) { } }
            public class ImageStack : Icon { public ImageStack() : base("ImageStack", IconVariant.Regular, ImageStackSizeAndContent.Values[1]) { } }
            public class ImageTable : Icon { public ImageTable() : base("ImageTable", IconVariant.Regular, ImageTableSizeAndContent.Values[1]) { } }
            public class ImmersiveReader : Icon { public ImmersiveReader() : base("ImmersiveReader", IconVariant.Regular, ImmersiveReaderSizeAndContent.Values[1]) { } }
            public class Important : Icon { public Important() : base("Important", IconVariant.Regular, ImportantSizeAndContent.Values[2]) { } }
            public class Incognito : Icon { public Incognito() : base("Incognito", IconVariant.Regular, IncognitoSizeAndContent.Values[0]) { } }
            public class Info : Icon { public Info() : base("Info", IconVariant.Regular, InfoSizeAndContent.Values[2]) { } }
            public class InfoShield : Icon { public InfoShield() : base("InfoShield", IconVariant.Regular, InfoShieldSizeAndContent.Values[0]) { } }
            public class InkingTool : Icon { public InkingTool() : base("InkingTool", IconVariant.Regular, InkingToolSizeAndContent.Values[1]) { } }
            public class InkStroke : Icon { public InkStroke() : base("InkStroke", IconVariant.Regular, InkStrokeSizeAndContent.Values[0]) { } }
            public class InkStrokeArrowDown : Icon { public InkStrokeArrowDown() : base("InkStrokeArrowDown", IconVariant.Regular, InkStrokeArrowDownSizeAndContent.Values[0]) { } }
            public class InkStrokeArrowUpDown : Icon { public InkStrokeArrowUpDown() : base("InkStrokeArrowUpDown", IconVariant.Regular, InkStrokeArrowUpDownSizeAndContent.Values[0]) { } }
            public class InprivateAccount : Icon { public InprivateAccount() : base("InprivateAccount", IconVariant.Regular, InprivateAccountSizeAndContent.Values[1]) { } }
            public class Insert : Icon { public Insert() : base("Insert", IconVariant.Regular, InsertSizeAndContent.Values[0]) { } }
            public class IosChevronRight : Icon { public IosChevronRight() : base("IosChevronRight", IconVariant.Regular, IosChevronRightSizeAndContent.Values[0]) { } }
            public class Iot : Icon { public Iot() : base("Iot", IconVariant.Regular, IotSizeAndContent.Values[1]) { } }
            public class IotAlert : Icon { public IotAlert() : base("IotAlert", IconVariant.Regular, IotAlertSizeAndContent.Values[1]) { } }
            public class Javascript : Icon { public Javascript() : base("Javascript", IconVariant.Regular, JavascriptSizeAndContent.Values[1]) { } }
            public class Joystick : Icon { public Joystick() : base("Joystick", IconVariant.Regular, JoystickSizeAndContent.Values[0]) { } }
            public class Key : Icon { public Key() : base("Key", IconVariant.Regular, KeySizeAndContent.Values[1]) { } }
            public class Keyboard : Icon { public Keyboard() : base("Keyboard", IconVariant.Regular, KeyboardSizeAndContent.Values[1]) { } }
            public class Keyboard123 : Icon { public Keyboard123() : base("Keyboard123", IconVariant.Regular, Keyboard123SizeAndContent.Values[0]) { } }
            public class KeyboardDock : Icon { public KeyboardDock() : base("KeyboardDock", IconVariant.Regular, KeyboardDockSizeAndContent.Values[0]) { } }
            public class KeyboardLayoutFloat : Icon { public KeyboardLayoutFloat() : base("KeyboardLayoutFloat", IconVariant.Regular, KeyboardLayoutFloatSizeAndContent.Values[0]) { } }
            public class KeyboardLayoutOneHandedLeft : Icon { public KeyboardLayoutOneHandedLeft() : base("KeyboardLayoutOneHandedLeft", IconVariant.Regular, KeyboardLayoutOneHandedLeftSizeAndContent.Values[0]) { } }
            public class KeyboardLayoutResize : Icon { public KeyboardLayoutResize() : base("KeyboardLayoutResize", IconVariant.Regular, KeyboardLayoutResizeSizeAndContent.Values[0]) { } }
            public class KeyboardLayoutSplit : Icon { public KeyboardLayoutSplit() : base("KeyboardLayoutSplit", IconVariant.Regular, KeyboardLayoutSplitSizeAndContent.Values[0]) { } }
            public class KeyboardShift : Icon { public KeyboardShift() : base("KeyboardShift", IconVariant.Regular, KeyboardShiftSizeAndContent.Values[1]) { } }
            public class KeyboardShiftUppercase : Icon { public KeyboardShiftUppercase() : base("KeyboardShiftUppercase", IconVariant.Regular, KeyboardShiftUppercaseSizeAndContent.Values[1]) { } }
            public class KeyboardTab : Icon { public KeyboardTab() : base("KeyboardTab", IconVariant.Regular, KeyboardTabSizeAndContent.Values[0]) { } }
            public class KeyCommand : Icon { public KeyCommand() : base("KeyCommand", IconVariant.Regular, KeyCommandSizeAndContent.Values[1]) { } }
            public class KeyMultiple : Icon { public KeyMultiple() : base("KeyMultiple", IconVariant.Regular, KeyMultipleSizeAndContent.Values[1]) { } }
            public class KeyReset : Icon { public KeyReset() : base("KeyReset", IconVariant.Regular, KeyResetSizeAndContent.Values[0]) { } }
            public class Laptop : Icon { public Laptop() : base("Laptop", IconVariant.Regular, LaptopSizeAndContent.Values[1]) { } }
            public class LaptopDismiss : Icon { public LaptopDismiss() : base("LaptopDismiss", IconVariant.Regular, LaptopDismissSizeAndContent.Values[1]) { } }
            public class LaptopShield : Icon { public LaptopShield() : base("LaptopShield", IconVariant.Regular, LaptopShieldSizeAndContent.Values[1]) { } }
            public class LaserTool : Icon { public LaserTool() : base("LaserTool", IconVariant.Regular, LaserToolSizeAndContent.Values[0]) { } }
            public class Lasso : Icon { public Lasso() : base("Lasso", IconVariant.Regular, LassoSizeAndContent.Values[0]) { } }
            public class LauncherSettings : Icon { public LauncherSettings() : base("LauncherSettings", IconVariant.Regular, LauncherSettingsSizeAndContent.Values[0]) { } }
            public class Layer : Icon { public Layer() : base("Layer", IconVariant.Regular, LayerSizeAndContent.Values[0]) { } }
            public class LayerDiagonal : Icon { public LayerDiagonal() : base("LayerDiagonal", IconVariant.Regular, LayerDiagonalSizeAndContent.Values[1]) { } }
            public class LayerDiagonalAdd : Icon { public LayerDiagonalAdd() : base("LayerDiagonalAdd", IconVariant.Regular, LayerDiagonalAddSizeAndContent.Values[0]) { } }
            public class LayerDiagonalPerson : Icon { public LayerDiagonalPerson() : base("LayerDiagonalPerson", IconVariant.Regular, LayerDiagonalPersonSizeAndContent.Values[1]) { } }
            public class LayoutCellFour : Icon { public LayoutCellFour() : base("LayoutCellFour", IconVariant.Regular, LayoutCellFourSizeAndContent.Values[1]) { } }
            public class LayoutColumnFour : Icon { public LayoutColumnFour() : base("LayoutColumnFour", IconVariant.Regular, LayoutColumnFourSizeAndContent.Values[1]) { } }
            public class LayoutColumnOneThirdLeft : Icon { public LayoutColumnOneThirdLeft() : base("LayoutColumnOneThirdLeft", IconVariant.Regular, LayoutColumnOneThirdLeftSizeAndContent.Values[1]) { } }
            public class LayoutColumnOneThirdRight : Icon { public LayoutColumnOneThirdRight() : base("LayoutColumnOneThirdRight", IconVariant.Regular, LayoutColumnOneThirdRightSizeAndContent.Values[1]) { } }
            public class LayoutColumnOneThirdRightHint : Icon { public LayoutColumnOneThirdRightHint() : base("LayoutColumnOneThirdRightHint", IconVariant.Regular, LayoutColumnOneThirdRightHintSizeAndContent.Values[1]) { } }
            public class LayoutColumnThree : Icon { public LayoutColumnThree() : base("LayoutColumnThree", IconVariant.Regular, LayoutColumnThreeSizeAndContent.Values[1]) { } }
            public class LayoutColumnTwo : Icon { public LayoutColumnTwo() : base("LayoutColumnTwo", IconVariant.Regular, LayoutColumnTwoSizeAndContent.Values[1]) { } }
            public class LayoutColumnTwoSplitLeft : Icon { public LayoutColumnTwoSplitLeft() : base("LayoutColumnTwoSplitLeft", IconVariant.Regular, LayoutColumnTwoSplitLeftSizeAndContent.Values[1]) { } }
            public class LayoutColumnTwoSplitRight : Icon { public LayoutColumnTwoSplitRight() : base("LayoutColumnTwoSplitRight", IconVariant.Regular, LayoutColumnTwoSplitRightSizeAndContent.Values[1]) { } }
            public class LayoutRowFour : Icon { public LayoutRowFour() : base("LayoutRowFour", IconVariant.Regular, LayoutRowFourSizeAndContent.Values[1]) { } }
            public class LayoutRowThree : Icon { public LayoutRowThree() : base("LayoutRowThree", IconVariant.Regular, LayoutRowThreeSizeAndContent.Values[1]) { } }
            public class LayoutRowTwo : Icon { public LayoutRowTwo() : base("LayoutRowTwo", IconVariant.Regular, LayoutRowTwoSizeAndContent.Values[1]) { } }
            public class LayoutRowTwoSplitBottom : Icon { public LayoutRowTwoSplitBottom() : base("LayoutRowTwoSplitBottom", IconVariant.Regular, LayoutRowTwoSplitBottomSizeAndContent.Values[1]) { } }
            public class LayoutRowTwoSplitTop : Icon { public LayoutRowTwoSplitTop() : base("LayoutRowTwoSplitTop", IconVariant.Regular, LayoutRowTwoSplitTopSizeAndContent.Values[1]) { } }
            public class LeafOne : Icon { public LeafOne() : base("LeafOne", IconVariant.Regular, LeafOneSizeAndContent.Values[1]) { } }
            public class LeafThree : Icon { public LeafThree() : base("LeafThree", IconVariant.Regular, LeafThreeSizeAndContent.Values[1]) { } }
            public class LeafTwo : Icon { public LeafTwo() : base("LeafTwo", IconVariant.Regular, LeafTwoSizeAndContent.Values[1]) { } }
            public class LearningApp : Icon { public LearningApp() : base("LearningApp", IconVariant.Regular, LearningAppSizeAndContent.Values[0]) { } }
            public class Library : Icon { public Library() : base("Library", IconVariant.Regular, LibrarySizeAndContent.Values[1]) { } }
            public class Lightbulb : Icon { public Lightbulb() : base("Lightbulb", IconVariant.Regular, LightbulbSizeAndContent.Values[1]) { } }
            public class LightbulbCheckmark : Icon { public LightbulbCheckmark() : base("LightbulbCheckmark", IconVariant.Regular, LightbulbCheckmarkSizeAndContent.Values[0]) { } }
            public class LightbulbCircle : Icon { public LightbulbCircle() : base("LightbulbCircle", IconVariant.Regular, LightbulbCircleSizeAndContent.Values[0]) { } }
            public class LightbulbFilament : Icon { public LightbulbFilament() : base("LightbulbFilament", IconVariant.Regular, LightbulbFilamentSizeAndContent.Values[1]) { } }
            public class LightbulbPerson : Icon { public LightbulbPerson() : base("LightbulbPerson", IconVariant.Regular, LightbulbPersonSizeAndContent.Values[1]) { } }
            public class Likert : Icon { public Likert() : base("Likert", IconVariant.Regular, LikertSizeAndContent.Values[1]) { } }
            public class Line : Icon { public Line() : base("Line", IconVariant.Regular, LineSizeAndContent.Values[0]) { } }
            public class LineDashes : Icon { public LineDashes() : base("LineDashes", IconVariant.Regular, LineDashesSizeAndContent.Values[0]) { } }
            public class LineHorizontal1 : Icon { public LineHorizontal1() : base("LineHorizontal1", IconVariant.Regular, LineHorizontal1SizeAndContent.Values[1]) { } }
            public class LineHorizontal1Dashes : Icon { public LineHorizontal1Dashes() : base("LineHorizontal1Dashes", IconVariant.Regular, LineHorizontal1DashesSizeAndContent.Values[1]) { } }
            public class LineHorizontal2DashesSolid : Icon { public LineHorizontal2DashesSolid() : base("LineHorizontal2DashesSolid", IconVariant.Regular, LineHorizontal2DashesSolidSizeAndContent.Values[1]) { } }
            public class LineHorizontal3 : Icon { public LineHorizontal3() : base("LineHorizontal3", IconVariant.Regular, LineHorizontal3SizeAndContent.Values[0]) { } }
            public class LineHorizontal4 : Icon { public LineHorizontal4() : base("LineHorizontal4", IconVariant.Regular, LineHorizontal4SizeAndContent.Values[1]) { } }
            public class LineHorizontal4Search : Icon { public LineHorizontal4Search() : base("LineHorizontal4Search", IconVariant.Regular, LineHorizontal4SearchSizeAndContent.Values[1]) { } }
            public class LineHorizontal5 : Icon { public LineHorizontal5() : base("LineHorizontal5", IconVariant.Regular, LineHorizontal5SizeAndContent.Values[0]) { } }
            public class LineHorizontal5Error : Icon { public LineHorizontal5Error() : base("LineHorizontal5Error", IconVariant.Regular, LineHorizontal5ErrorSizeAndContent.Values[0]) { } }
            public class LineStyle : Icon { public LineStyle() : base("LineStyle", IconVariant.Regular, LineStyleSizeAndContent.Values[0]) { } }
            public class LineThickness : Icon { public LineThickness() : base("LineThickness", IconVariant.Regular, LineThicknessSizeAndContent.Values[0]) { } }
            public class Link : Icon { public Link() : base("Link", IconVariant.Regular, LinkSizeAndContent.Values[2]) { } }
            public class LinkAdd : Icon { public LinkAdd() : base("LinkAdd", IconVariant.Regular, LinkAddSizeAndContent.Values[1]) { } }
            public class LinkDismiss : Icon { public LinkDismiss() : base("LinkDismiss", IconVariant.Regular, LinkDismissSizeAndContent.Values[1]) { } }
            public class LinkEdit : Icon { public LinkEdit() : base("LinkEdit", IconVariant.Regular, LinkEditSizeAndContent.Values[1]) { } }
            public class LinkMultiple : Icon { public LinkMultiple() : base("LinkMultiple", IconVariant.Regular, LinkMultipleSizeAndContent.Values[1]) { } }
            public class LinkPerson : Icon { public LinkPerson() : base("LinkPerson", IconVariant.Regular, LinkPersonSizeAndContent.Values[1]) { } }
            public class LinkSquare : Icon { public LinkSquare() : base("LinkSquare", IconVariant.Regular, LinkSquareSizeAndContent.Values[2]) { } }
            public class LinkToolbox : Icon { public LinkToolbox() : base("LinkToolbox", IconVariant.Regular, LinkToolboxSizeAndContent.Values[0]) { } }
            public class List : Icon { public List() : base("List", IconVariant.Regular, ListSizeAndContent.Values[1]) { } }
            public class ListBar : Icon { public ListBar() : base("ListBar", IconVariant.Regular, ListBarSizeAndContent.Values[1]) { } }
            public class ListBarTree : Icon { public ListBarTree() : base("ListBarTree", IconVariant.Regular, ListBarTreeSizeAndContent.Values[1]) { } }
            public class ListBarTreeOffset : Icon { public ListBarTreeOffset() : base("ListBarTreeOffset", IconVariant.Regular, ListBarTreeOffsetSizeAndContent.Values[1]) { } }
            public class ListRtl : Icon { public ListRtl() : base("ListRtl", IconVariant.Regular, ListRtlSizeAndContent.Values[1]) { } }
            public class Live : Icon { public Live() : base("Live", IconVariant.Regular, LiveSizeAndContent.Values[0]) { } }
            public class LiveOff : Icon { public LiveOff() : base("LiveOff", IconVariant.Regular, LiveOffSizeAndContent.Values[0]) { } }
            public class LocalLanguage : Icon { public LocalLanguage() : base("LocalLanguage", IconVariant.Regular, LocalLanguageSizeAndContent.Values[1]) { } }
            public class LocalLanguageEn : Icon { public LocalLanguageEn() : base("LocalLanguageEn", IconVariant.Regular, LocalLanguageEnSizeAndContent.Values[1]) { } }
            public class LocalLanguageKo : Icon { public LocalLanguageKo() : base("LocalLanguageKo", IconVariant.Regular, LocalLanguageKoSizeAndContent.Values[1]) { } }
            public class Location : Icon { public Location() : base("Location", IconVariant.Regular, LocationSizeAndContent.Values[2]) { } }
            public class LocationAdd : Icon { public LocationAdd() : base("LocationAdd", IconVariant.Regular, LocationAddSizeAndContent.Values[1]) { } }
            public class LocationAddLeft : Icon { public LocationAddLeft() : base("LocationAddLeft", IconVariant.Regular, LocationAddLeftSizeAndContent.Values[0]) { } }
            public class LocationAddRight : Icon { public LocationAddRight() : base("LocationAddRight", IconVariant.Regular, LocationAddRightSizeAndContent.Values[0]) { } }
            public class LocationAddUp : Icon { public LocationAddUp() : base("LocationAddUp", IconVariant.Regular, LocationAddUpSizeAndContent.Values[0]) { } }
            public class LocationArrow : Icon { public LocationArrow() : base("LocationArrow", IconVariant.Regular, LocationArrowSizeAndContent.Values[2]) { } }
            public class LocationArrowLeft : Icon { public LocationArrowLeft() : base("LocationArrowLeft", IconVariant.Regular, LocationArrowLeftSizeAndContent.Values[1]) { } }
            public class LocationArrowRight : Icon { public LocationArrowRight() : base("LocationArrowRight", IconVariant.Regular, LocationArrowRightSizeAndContent.Values[1]) { } }
            public class LocationArrowUp : Icon { public LocationArrowUp() : base("LocationArrowUp", IconVariant.Regular, LocationArrowUpSizeAndContent.Values[1]) { } }
            public class LocationDismiss : Icon { public LocationDismiss() : base("LocationDismiss", IconVariant.Regular, LocationDismissSizeAndContent.Values[0]) { } }
            public class LocationLive : Icon { public LocationLive() : base("LocationLive", IconVariant.Regular, LocationLiveSizeAndContent.Values[0]) { } }
            public class LocationOff : Icon { public LocationOff() : base("LocationOff", IconVariant.Regular, LocationOffSizeAndContent.Values[1]) { } }
            public class LocationTargetSquare : Icon { public LocationTargetSquare() : base("LocationTargetSquare", IconVariant.Regular, LocationTargetSquareSizeAndContent.Values[1]) { } }
            public class LockClosed : Icon { public LockClosed() : base("LockClosed", IconVariant.Regular, LockClosedSizeAndContent.Values[2]) { } }
            public class LockClosedKey : Icon { public LockClosedKey() : base("LockClosedKey", IconVariant.Regular, LockClosedKeySizeAndContent.Values[1]) { } }
            public class LockMultiple : Icon { public LockMultiple() : base("LockMultiple", IconVariant.Regular, LockMultipleSizeAndContent.Values[0]) { } }
            public class LockOpen : Icon { public LockOpen() : base("LockOpen", IconVariant.Regular, LockOpenSizeAndContent.Values[2]) { } }
            public class LockShield : Icon { public LockShield() : base("LockShield", IconVariant.Regular, LockShieldSizeAndContent.Values[1]) { } }
            public class Lottery : Icon { public Lottery() : base("Lottery", IconVariant.Regular, LotterySizeAndContent.Values[0]) { } }
            public class Luggage : Icon { public Luggage() : base("Luggage", IconVariant.Regular, LuggageSizeAndContent.Values[1]) { } }
            public class Mail : Icon { public Mail() : base("Mail", IconVariant.Regular, MailSizeAndContent.Values[2]) { } }
            public class MailAdd : Icon { public MailAdd() : base("MailAdd", IconVariant.Regular, MailAddSizeAndContent.Values[1]) { } }
            public class MailAlert : Icon { public MailAlert() : base("MailAlert", IconVariant.Regular, MailAlertSizeAndContent.Values[1]) { } }
            public class MailAllRead : Icon { public MailAllRead() : base("MailAllRead", IconVariant.Regular, MailAllReadSizeAndContent.Values[1]) { } }
            public class MailAllUnread : Icon { public MailAllUnread() : base("MailAllUnread", IconVariant.Regular, MailAllUnreadSizeAndContent.Values[0]) { } }
            public class MailArrowDoubleBack : Icon { public MailArrowDoubleBack() : base("MailArrowDoubleBack", IconVariant.Regular, MailArrowDoubleBackSizeAndContent.Values[1]) { } }
            public class MailArrowDown : Icon { public MailArrowDown() : base("MailArrowDown", IconVariant.Regular, MailArrowDownSizeAndContent.Values[1]) { } }
            public class MailArrowForward : Icon { public MailArrowForward() : base("MailArrowForward", IconVariant.Regular, MailArrowForwardSizeAndContent.Values[1]) { } }
            public class MailArrowUp : Icon { public MailArrowUp() : base("MailArrowUp", IconVariant.Regular, MailArrowUpSizeAndContent.Values[1]) { } }
            public class MailAttach : Icon { public MailAttach() : base("MailAttach", IconVariant.Regular, MailAttachSizeAndContent.Values[1]) { } }
            public class Mailbox : Icon { public Mailbox() : base("Mailbox", IconVariant.Regular, MailboxSizeAndContent.Values[1]) { } }
            public class MailCheckmark : Icon { public MailCheckmark() : base("MailCheckmark", IconVariant.Regular, MailCheckmarkSizeAndContent.Values[1]) { } }
            public class MailClock : Icon { public MailClock() : base("MailClock", IconVariant.Regular, MailClockSizeAndContent.Values[1]) { } }
            public class MailCopy : Icon { public MailCopy() : base("MailCopy", IconVariant.Regular, MailCopySizeAndContent.Values[0]) { } }
            public class MailDismiss : Icon { public MailDismiss() : base("MailDismiss", IconVariant.Regular, MailDismissSizeAndContent.Values[1]) { } }
            public class MailEdit : Icon { public MailEdit() : base("MailEdit", IconVariant.Regular, MailEditSizeAndContent.Values[0]) { } }
            public class MailError : Icon { public MailError() : base("MailError", IconVariant.Regular, MailErrorSizeAndContent.Values[1]) { } }
            public class MailInbox : Icon { public MailInbox() : base("MailInbox", IconVariant.Regular, MailInboxSizeAndContent.Values[1]) { } }
            public class MailInboxAdd : Icon { public MailInboxAdd() : base("MailInboxAdd", IconVariant.Regular, MailInboxAddSizeAndContent.Values[1]) { } }
            public class MailInboxAll : Icon { public MailInboxAll() : base("MailInboxAll", IconVariant.Regular, MailInboxAllSizeAndContent.Values[0]) { } }
            public class MailInboxArrowDown : Icon { public MailInboxArrowDown() : base("MailInboxArrowDown", IconVariant.Regular, MailInboxArrowDownSizeAndContent.Values[1]) { } }
            public class MailInboxArrowRight : Icon { public MailInboxArrowRight() : base("MailInboxArrowRight", IconVariant.Regular, MailInboxArrowRightSizeAndContent.Values[0]) { } }
            public class MailInboxArrowUp : Icon { public MailInboxArrowUp() : base("MailInboxArrowUp", IconVariant.Regular, MailInboxArrowUpSizeAndContent.Values[0]) { } }
            public class MailInboxCheckmark : Icon { public MailInboxCheckmark() : base("MailInboxCheckmark", IconVariant.Regular, MailInboxCheckmarkSizeAndContent.Values[1]) { } }
            public class MailInboxDismiss : Icon { public MailInboxDismiss() : base("MailInboxDismiss", IconVariant.Regular, MailInboxDismissSizeAndContent.Values[1]) { } }
            public class MailLink : Icon { public MailLink() : base("MailLink", IconVariant.Regular, MailLinkSizeAndContent.Values[0]) { } }
            public class MailList : Icon { public MailList() : base("MailList", IconVariant.Regular, MailListSizeAndContent.Values[1]) { } }
            public class MailMultiple : Icon { public MailMultiple() : base("MailMultiple", IconVariant.Regular, MailMultipleSizeAndContent.Values[1]) { } }
            public class MailOff : Icon { public MailOff() : base("MailOff", IconVariant.Regular, MailOffSizeAndContent.Values[1]) { } }
            public class MailOpenPerson : Icon { public MailOpenPerson() : base("MailOpenPerson", IconVariant.Regular, MailOpenPersonSizeAndContent.Values[1]) { } }
            public class MailPause : Icon { public MailPause() : base("MailPause", IconVariant.Regular, MailPauseSizeAndContent.Values[1]) { } }
            public class MailProhibited : Icon { public MailProhibited() : base("MailProhibited", IconVariant.Regular, MailProhibitedSizeAndContent.Values[1]) { } }
            public class MailRead : Icon { public MailRead() : base("MailRead", IconVariant.Regular, MailReadSizeAndContent.Values[1]) { } }
            public class MailReadMultiple : Icon { public MailReadMultiple() : base("MailReadMultiple", IconVariant.Regular, MailReadMultipleSizeAndContent.Values[1]) { } }
            public class MailRewind : Icon { public MailRewind() : base("MailRewind", IconVariant.Regular, MailRewindSizeAndContent.Values[1]) { } }
            public class MailSettings : Icon { public MailSettings() : base("MailSettings", IconVariant.Regular, MailSettingsSizeAndContent.Values[1]) { } }
            public class MailShield : Icon { public MailShield() : base("MailShield", IconVariant.Regular, MailShieldSizeAndContent.Values[1]) { } }
            public class MailTemplate : Icon { public MailTemplate() : base("MailTemplate", IconVariant.Regular, MailTemplateSizeAndContent.Values[1]) { } }
            public class MailUnread : Icon { public MailUnread() : base("MailUnread", IconVariant.Regular, MailUnreadSizeAndContent.Values[2]) { } }
            public class MailWarning : Icon { public MailWarning() : base("MailWarning", IconVariant.Regular, MailWarningSizeAndContent.Values[1]) { } }
            public class Map : Icon { public Map() : base("Map", IconVariant.Regular, MapSizeAndContent.Values[1]) { } }
            public class MapDrive : Icon { public MapDrive() : base("MapDrive", IconVariant.Regular, MapDriveSizeAndContent.Values[1]) { } }
            public class Markdown : Icon { public Markdown() : base("Markdown", IconVariant.Regular, MarkdownSizeAndContent.Values[0]) { } }
            public class MatchAppLayout : Icon { public MatchAppLayout() : base("MatchAppLayout", IconVariant.Regular, MatchAppLayoutSizeAndContent.Values[0]) { } }
            public class MathFormatLinear : Icon { public MathFormatLinear() : base("MathFormatLinear", IconVariant.Regular, MathFormatLinearSizeAndContent.Values[0]) { } }
            public class MathFormatProfessional : Icon { public MathFormatProfessional() : base("MathFormatProfessional", IconVariant.Regular, MathFormatProfessionalSizeAndContent.Values[1]) { } }
            public class MathFormula : Icon { public MathFormula() : base("MathFormula", IconVariant.Regular, MathFormulaSizeAndContent.Values[1]) { } }
            public class MathSymbols : Icon { public MathSymbols() : base("MathSymbols", IconVariant.Regular, MathSymbolsSizeAndContent.Values[1]) { } }
            public class Maximize : Icon { public Maximize() : base("Maximize", IconVariant.Regular, MaximizeSizeAndContent.Values[1]) { } }
            public class MeetNow : Icon { public MeetNow() : base("MeetNow", IconVariant.Regular, MeetNowSizeAndContent.Values[1]) { } }
            public class Megaphone : Icon { public Megaphone() : base("Megaphone", IconVariant.Regular, MegaphoneSizeAndContent.Values[1]) { } }
            public class MegaphoneCircle : Icon { public MegaphoneCircle() : base("MegaphoneCircle", IconVariant.Regular, MegaphoneCircleSizeAndContent.Values[0]) { } }
            public class MegaphoneLoud : Icon { public MegaphoneLoud() : base("MegaphoneLoud", IconVariant.Regular, MegaphoneLoudSizeAndContent.Values[1]) { } }
            public class MegaphoneOff : Icon { public MegaphoneOff() : base("MegaphoneOff", IconVariant.Regular, MegaphoneOffSizeAndContent.Values[1]) { } }
            public class Mention : Icon { public Mention() : base("Mention", IconVariant.Regular, MentionSizeAndContent.Values[2]) { } }
            public class MentionArrowDown : Icon { public MentionArrowDown() : base("MentionArrowDown", IconVariant.Regular, MentionArrowDownSizeAndContent.Values[0]) { } }
            public class MentionBrackets : Icon { public MentionBrackets() : base("MentionBrackets", IconVariant.Regular, MentionBracketsSizeAndContent.Values[0]) { } }
            public class Merge : Icon { public Merge() : base("Merge", IconVariant.Regular, MergeSizeAndContent.Values[1]) { } }
            public class Mic : Icon { public Mic() : base("Mic", IconVariant.Regular, MicSizeAndContent.Values[1]) { } }
            public class MicOff : Icon { public MicOff() : base("MicOff", IconVariant.Regular, MicOffSizeAndContent.Values[2]) { } }
            public class MicProhibited : Icon { public MicProhibited() : base("MicProhibited", IconVariant.Regular, MicProhibitedSizeAndContent.Values[1]) { } }
            public class MicPulse : Icon { public MicPulse() : base("MicPulse", IconVariant.Regular, MicPulseSizeAndContent.Values[1]) { } }
            public class MicPulseOff : Icon { public MicPulseOff() : base("MicPulseOff", IconVariant.Regular, MicPulseOffSizeAndContent.Values[1]) { } }
            public class MicRecord : Icon { public MicRecord() : base("MicRecord", IconVariant.Regular, MicRecordSizeAndContent.Values[0]) { } }
            public class Microscope : Icon { public Microscope() : base("Microscope", IconVariant.Regular, MicroscopeSizeAndContent.Values[0]) { } }
            public class MicSettings : Icon { public MicSettings() : base("MicSettings", IconVariant.Regular, MicSettingsSizeAndContent.Values[0]) { } }
            public class MicSparkle : Icon { public MicSparkle() : base("MicSparkle", IconVariant.Regular, MicSparkleSizeAndContent.Values[1]) { } }
            public class MicSync : Icon { public MicSync() : base("MicSync", IconVariant.Regular, MicSyncSizeAndContent.Values[0]) { } }
            public class Midi : Icon { public Midi() : base("Midi", IconVariant.Regular, MidiSizeAndContent.Values[0]) { } }
            public class MobileOptimized : Icon { public MobileOptimized() : base("MobileOptimized", IconVariant.Regular, MobileOptimizedSizeAndContent.Values[0]) { } }
            public class Mold : Icon { public Mold() : base("Mold", IconVariant.Regular, MoldSizeAndContent.Values[0]) { } }
            public class Molecule : Icon { public Molecule() : base("Molecule", IconVariant.Regular, MoleculeSizeAndContent.Values[1]) { } }
            public class Money : Icon { public Money() : base("Money", IconVariant.Regular, MoneySizeAndContent.Values[1]) { } }
            public class MoneyCalculator : Icon { public MoneyCalculator() : base("MoneyCalculator", IconVariant.Regular, MoneyCalculatorSizeAndContent.Values[0]) { } }
            public class MoneyDismiss : Icon { public MoneyDismiss() : base("MoneyDismiss", IconVariant.Regular, MoneyDismissSizeAndContent.Values[0]) { } }
            public class MoneyHand : Icon { public MoneyHand() : base("MoneyHand", IconVariant.Regular, MoneyHandSizeAndContent.Values[1]) { } }
            public class MoneyOff : Icon { public MoneyOff() : base("MoneyOff", IconVariant.Regular, MoneyOffSizeAndContent.Values[0]) { } }
            public class MoneySettings : Icon { public MoneySettings() : base("MoneySettings", IconVariant.Regular, MoneySettingsSizeAndContent.Values[1]) { } }
            public class MoreCircle : Icon { public MoreCircle() : base("MoreCircle", IconVariant.Regular, MoreCircleSizeAndContent.Values[1]) { } }
            public class MoreHorizontal : Icon { public MoreHorizontal() : base("MoreHorizontal", IconVariant.Regular, MoreHorizontalSizeAndContent.Values[1]) { } }
            public class MoreVertical : Icon { public MoreVertical() : base("MoreVertical", IconVariant.Regular, MoreVerticalSizeAndContent.Values[1]) { } }
            public class MountainLocationBottom : Icon { public MountainLocationBottom() : base("MountainLocationBottom", IconVariant.Regular, MountainLocationBottomSizeAndContent.Values[0]) { } }
            public class MountainLocationTop : Icon { public MountainLocationTop() : base("MountainLocationTop", IconVariant.Regular, MountainLocationTopSizeAndContent.Values[0]) { } }
            public class MountainTrail : Icon { public MountainTrail() : base("MountainTrail", IconVariant.Regular, MountainTrailSizeAndContent.Values[0]) { } }
            public class MoviesAndTv : Icon { public MoviesAndTv() : base("MoviesAndTv", IconVariant.Regular, MoviesAndTvSizeAndContent.Values[1]) { } }
            public class Multiplier12x : Icon { public Multiplier12x() : base("Multiplier12x", IconVariant.Regular, Multiplier12xSizeAndContent.Values[0]) { } }
            public class Multiplier15x : Icon { public Multiplier15x() : base("Multiplier15x", IconVariant.Regular, Multiplier15xSizeAndContent.Values[0]) { } }
            public class Multiplier18x : Icon { public Multiplier18x() : base("Multiplier18x", IconVariant.Regular, Multiplier18xSizeAndContent.Values[0]) { } }
            public class Multiplier1x : Icon { public Multiplier1x() : base("Multiplier1x", IconVariant.Regular, Multiplier1xSizeAndContent.Values[0]) { } }
            public class Multiplier2x : Icon { public Multiplier2x() : base("Multiplier2x", IconVariant.Regular, Multiplier2xSizeAndContent.Values[0]) { } }
            public class Multiplier5x : Icon { public Multiplier5x() : base("Multiplier5x", IconVariant.Regular, Multiplier5xSizeAndContent.Values[0]) { } }
            public class MultiselectLtr : Icon { public MultiselectLtr() : base("MultiselectLtr", IconVariant.Regular, MultiselectLtrSizeAndContent.Values[1]) { } }
            public class MultiselectRtl : Icon { public MultiselectRtl() : base("MultiselectRtl", IconVariant.Regular, MultiselectRtlSizeAndContent.Values[1]) { } }
            public class MusicNote1 : Icon { public MusicNote1() : base("MusicNote1", IconVariant.Regular, MusicNote1SizeAndContent.Values[0]) { } }
            public class MusicNote2 : Icon { public MusicNote2() : base("MusicNote2", IconVariant.Regular, MusicNote2SizeAndContent.Values[1]) { } }
            public class MusicNote2Play : Icon { public MusicNote2Play() : base("MusicNote2Play", IconVariant.Regular, MusicNote2PlaySizeAndContent.Values[0]) { } }
            public class MusicNoteOff1 : Icon { public MusicNoteOff1() : base("MusicNoteOff1", IconVariant.Regular, MusicNoteOff1SizeAndContent.Values[0]) { } }
            public class MusicNoteOff2 : Icon { public MusicNoteOff2() : base("MusicNoteOff2", IconVariant.Regular, MusicNoteOff2SizeAndContent.Values[1]) { } }
            public class MyLocation : Icon { public MyLocation() : base("MyLocation", IconVariant.Regular, MyLocationSizeAndContent.Values[2]) { } }
            public class Navigation : Icon { public Navigation() : base("Navigation", IconVariant.Regular, NavigationSizeAndContent.Values[1]) { } }
            public class NavigationLocationTarget : Icon { public NavigationLocationTarget() : base("NavigationLocationTarget", IconVariant.Regular, NavigationLocationTargetSizeAndContent.Values[0]) { } }
            public class NavigationPlay : Icon { public NavigationPlay() : base("NavigationPlay", IconVariant.Regular, NavigationPlaySizeAndContent.Values[0]) { } }
            public class NavigationUnread : Icon { public NavigationUnread() : base("NavigationUnread", IconVariant.Regular, NavigationUnreadSizeAndContent.Values[0]) { } }
            public class NetworkCheck : Icon { public NetworkCheck() : base("NetworkCheck", IconVariant.Regular, NetworkCheckSizeAndContent.Values[0]) { } }
            public class New : Icon { public New() : base("New", IconVariant.Regular, NewSizeAndContent.Values[1]) { } }
            public class News : Icon { public News() : base("News", IconVariant.Regular, NewsSizeAndContent.Values[1]) { } }
            public class Next : Icon { public Next() : base("Next", IconVariant.Regular, NextSizeAndContent.Values[1]) { } }
            public class NextFrame : Icon { public NextFrame() : base("NextFrame", IconVariant.Regular, NextFrameSizeAndContent.Values[0]) { } }
            public class Note : Icon { public Note() : base("Note", IconVariant.Regular, NoteSizeAndContent.Values[1]) { } }
            public class NoteAdd : Icon { public NoteAdd() : base("NoteAdd", IconVariant.Regular, NoteAddSizeAndContent.Values[1]) { } }
            public class Notebook : Icon { public Notebook() : base("Notebook", IconVariant.Regular, NotebookSizeAndContent.Values[1]) { } }
            public class NotebookAdd : Icon { public NotebookAdd() : base("NotebookAdd", IconVariant.Regular, NotebookAddSizeAndContent.Values[0]) { } }
            public class NotebookArrowCurveDown : Icon { public NotebookArrowCurveDown() : base("NotebookArrowCurveDown", IconVariant.Regular, NotebookArrowCurveDownSizeAndContent.Values[0]) { } }
            public class NotebookError : Icon { public NotebookError() : base("NotebookError", IconVariant.Regular, NotebookErrorSizeAndContent.Values[0]) { } }
            public class NotebookEye : Icon { public NotebookEye() : base("NotebookEye", IconVariant.Regular, NotebookEyeSizeAndContent.Values[0]) { } }
            public class NotebookLightning : Icon { public NotebookLightning() : base("NotebookLightning", IconVariant.Regular, NotebookLightningSizeAndContent.Values[0]) { } }
            public class NotebookQuestionMark : Icon { public NotebookQuestionMark() : base("NotebookQuestionMark", IconVariant.Regular, NotebookQuestionMarkSizeAndContent.Values[0]) { } }
            public class NotebookSection : Icon { public NotebookSection() : base("NotebookSection", IconVariant.Regular, NotebookSectionSizeAndContent.Values[0]) { } }
            public class NotebookSectionArrowRight : Icon { public NotebookSectionArrowRight() : base("NotebookSectionArrowRight", IconVariant.Regular, NotebookSectionArrowRightSizeAndContent.Values[0]) { } }
            public class NotebookSubsection : Icon { public NotebookSubsection() : base("NotebookSubsection", IconVariant.Regular, NotebookSubsectionSizeAndContent.Values[0]) { } }
            public class NotebookSync : Icon { public NotebookSync() : base("NotebookSync", IconVariant.Regular, NotebookSyncSizeAndContent.Values[0]) { } }
            public class NoteEdit : Icon { public NoteEdit() : base("NoteEdit", IconVariant.Regular, NoteEditSizeAndContent.Values[0]) { } }
            public class Notepad : Icon { public Notepad() : base("Notepad", IconVariant.Regular, NotepadSizeAndContent.Values[2]) { } }
            public class NotepadEdit : Icon { public NotepadEdit() : base("NotepadEdit", IconVariant.Regular, NotepadEditSizeAndContent.Values[1]) { } }
            public class NotepadPerson : Icon { public NotepadPerson() : base("NotepadPerson", IconVariant.Regular, NotepadPersonSizeAndContent.Values[1]) { } }
            public class NotePin : Icon { public NotePin() : base("NotePin", IconVariant.Regular, NotePinSizeAndContent.Values[1]) { } }
            public class NumberCircle0 : Icon { public NumberCircle0() : base("NumberCircle0", IconVariant.Regular, NumberCircle0SizeAndContent.Values[1]) { } }
            public class NumberCircle1 : Icon { public NumberCircle1() : base("NumberCircle1", IconVariant.Regular, NumberCircle1SizeAndContent.Values[1]) { } }
            public class NumberCircle2 : Icon { public NumberCircle2() : base("NumberCircle2", IconVariant.Regular, NumberCircle2SizeAndContent.Values[1]) { } }
            public class NumberCircle3 : Icon { public NumberCircle3() : base("NumberCircle3", IconVariant.Regular, NumberCircle3SizeAndContent.Values[1]) { } }
            public class NumberCircle4 : Icon { public NumberCircle4() : base("NumberCircle4", IconVariant.Regular, NumberCircle4SizeAndContent.Values[1]) { } }
            public class NumberCircle5 : Icon { public NumberCircle5() : base("NumberCircle5", IconVariant.Regular, NumberCircle5SizeAndContent.Values[1]) { } }
            public class NumberCircle6 : Icon { public NumberCircle6() : base("NumberCircle6", IconVariant.Regular, NumberCircle6SizeAndContent.Values[1]) { } }
            public class NumberCircle7 : Icon { public NumberCircle7() : base("NumberCircle7", IconVariant.Regular, NumberCircle7SizeAndContent.Values[1]) { } }
            public class NumberCircle8 : Icon { public NumberCircle8() : base("NumberCircle8", IconVariant.Regular, NumberCircle8SizeAndContent.Values[1]) { } }
            public class NumberCircle9 : Icon { public NumberCircle9() : base("NumberCircle9", IconVariant.Regular, NumberCircle9SizeAndContent.Values[1]) { } }
            public class NumberRow : Icon { public NumberRow() : base("NumberRow", IconVariant.Regular, NumberRowSizeAndContent.Values[1]) { } }
            public class NumberSymbol : Icon { public NumberSymbol() : base("NumberSymbol", IconVariant.Regular, NumberSymbolSizeAndContent.Values[1]) { } }
            public class NumberSymbolDismiss : Icon { public NumberSymbolDismiss() : base("NumberSymbolDismiss", IconVariant.Regular, NumberSymbolDismissSizeAndContent.Values[0]) { } }
            public class NumberSymbolSquare : Icon { public NumberSymbolSquare() : base("NumberSymbolSquare", IconVariant.Regular, NumberSymbolSquareSizeAndContent.Values[0]) { } }
            public class Open : Icon { public Open() : base("Open", IconVariant.Regular, OpenSizeAndContent.Values[2]) { } }
            public class OpenFolder : Icon { public OpenFolder() : base("OpenFolder", IconVariant.Regular, OpenFolderSizeAndContent.Values[1]) { } }
            public class OpenOff : Icon { public OpenOff() : base("OpenOff", IconVariant.Regular, OpenOffSizeAndContent.Values[1]) { } }
            public class Options : Icon { public Options() : base("Options", IconVariant.Regular, OptionsSizeAndContent.Values[1]) { } }
            public class Organization : Icon { public Organization() : base("Organization", IconVariant.Regular, OrganizationSizeAndContent.Values[2]) { } }
            public class OrganizationHorizontal : Icon { public OrganizationHorizontal() : base("OrganizationHorizontal", IconVariant.Regular, OrganizationHorizontalSizeAndContent.Values[1]) { } }
            public class Orientation : Icon { public Orientation() : base("Orientation", IconVariant.Regular, OrientationSizeAndContent.Values[0]) { } }
            public class Oval : Icon { public Oval() : base("Oval", IconVariant.Regular, OvalSizeAndContent.Values[1]) { } }
            public class Oven : Icon { public Oven() : base("Oven", IconVariant.Regular, OvenSizeAndContent.Values[0]) { } }
            public class PaddingDown : Icon { public PaddingDown() : base("PaddingDown", IconVariant.Regular, PaddingDownSizeAndContent.Values[0]) { } }
            public class PaddingLeft : Icon { public PaddingLeft() : base("PaddingLeft", IconVariant.Regular, PaddingLeftSizeAndContent.Values[0]) { } }
            public class PaddingRight : Icon { public PaddingRight() : base("PaddingRight", IconVariant.Regular, PaddingRightSizeAndContent.Values[0]) { } }
            public class PaddingTop : Icon { public PaddingTop() : base("PaddingTop", IconVariant.Regular, PaddingTopSizeAndContent.Values[0]) { } }
            public class PageFit : Icon { public PageFit() : base("PageFit", IconVariant.Regular, PageFitSizeAndContent.Values[1]) { } }
            public class PaintBrush : Icon { public PaintBrush() : base("PaintBrush", IconVariant.Regular, PaintBrushSizeAndContent.Values[1]) { } }
            public class PaintBrushArrowDown : Icon { public PaintBrushArrowDown() : base("PaintBrushArrowDown", IconVariant.Regular, PaintBrushArrowDownSizeAndContent.Values[0]) { } }
            public class PaintBrushArrowUp : Icon { public PaintBrushArrowUp() : base("PaintBrushArrowUp", IconVariant.Regular, PaintBrushArrowUpSizeAndContent.Values[0]) { } }
            public class PaintBucket : Icon { public PaintBucket() : base("PaintBucket", IconVariant.Regular, PaintBucketSizeAndContent.Values[1]) { } }
            public class Pair : Icon { public Pair() : base("Pair", IconVariant.Regular, PairSizeAndContent.Values[0]) { } }
            public class PanelBottom : Icon { public PanelBottom() : base("PanelBottom", IconVariant.Regular, PanelBottomSizeAndContent.Values[0]) { } }
            public class PanelBottomContract : Icon { public PanelBottomContract() : base("PanelBottomContract", IconVariant.Regular, PanelBottomContractSizeAndContent.Values[0]) { } }
            public class PanelBottomExpand : Icon { public PanelBottomExpand() : base("PanelBottomExpand", IconVariant.Regular, PanelBottomExpandSizeAndContent.Values[0]) { } }
            public class PanelLeft : Icon { public PanelLeft() : base("PanelLeft", IconVariant.Regular, PanelLeftSizeAndContent.Values[1]) { } }
            public class PanelLeftAdd : Icon { public PanelLeftAdd() : base("PanelLeftAdd", IconVariant.Regular, PanelLeftAddSizeAndContent.Values[1]) { } }
            public class PanelLeftContract : Icon { public PanelLeftContract() : base("PanelLeftContract", IconVariant.Regular, PanelLeftContractSizeAndContent.Values[1]) { } }
            public class PanelLeftExpand : Icon { public PanelLeftExpand() : base("PanelLeftExpand", IconVariant.Regular, PanelLeftExpandSizeAndContent.Values[1]) { } }
            public class PanelLeftHeader : Icon { public PanelLeftHeader() : base("PanelLeftHeader", IconVariant.Regular, PanelLeftHeaderSizeAndContent.Values[1]) { } }
            public class PanelLeftHeaderAdd : Icon { public PanelLeftHeaderAdd() : base("PanelLeftHeaderAdd", IconVariant.Regular, PanelLeftHeaderAddSizeAndContent.Values[1]) { } }
            public class PanelLeftHeaderKey : Icon { public PanelLeftHeaderKey() : base("PanelLeftHeaderKey", IconVariant.Regular, PanelLeftHeaderKeySizeAndContent.Values[1]) { } }
            public class PanelLeftKey : Icon { public PanelLeftKey() : base("PanelLeftKey", IconVariant.Regular, PanelLeftKeySizeAndContent.Values[1]) { } }
            public class PanelLeftText : Icon { public PanelLeftText() : base("PanelLeftText", IconVariant.Regular, PanelLeftTextSizeAndContent.Values[1]) { } }
            public class PanelLeftTextAdd : Icon { public PanelLeftTextAdd() : base("PanelLeftTextAdd", IconVariant.Regular, PanelLeftTextAddSizeAndContent.Values[1]) { } }
            public class PanelLeftTextDismiss : Icon { public PanelLeftTextDismiss() : base("PanelLeftTextDismiss", IconVariant.Regular, PanelLeftTextDismissSizeAndContent.Values[1]) { } }
            public class PanelRight : Icon { public PanelRight() : base("PanelRight", IconVariant.Regular, PanelRightSizeAndContent.Values[1]) { } }
            public class PanelRightAdd : Icon { public PanelRightAdd() : base("PanelRightAdd", IconVariant.Regular, PanelRightAddSizeAndContent.Values[0]) { } }
            public class PanelRightContract : Icon { public PanelRightContract() : base("PanelRightContract", IconVariant.Regular, PanelRightContractSizeAndContent.Values[1]) { } }
            public class PanelRightCursor : Icon { public PanelRightCursor() : base("PanelRightCursor", IconVariant.Regular, PanelRightCursorSizeAndContent.Values[0]) { } }
            public class PanelRightExpand : Icon { public PanelRightExpand() : base("PanelRightExpand", IconVariant.Regular, PanelRightExpandSizeAndContent.Values[0]) { } }
            public class PanelRightGallery : Icon { public PanelRightGallery() : base("PanelRightGallery", IconVariant.Regular, PanelRightGallerySizeAndContent.Values[1]) { } }
            public class PanelSeparateWindow : Icon { public PanelSeparateWindow() : base("PanelSeparateWindow", IconVariant.Regular, PanelSeparateWindowSizeAndContent.Values[0]) { } }
            public class PanelTopContract : Icon { public PanelTopContract() : base("PanelTopContract", IconVariant.Regular, PanelTopContractSizeAndContent.Values[0]) { } }
            public class PanelTopExpand : Icon { public PanelTopExpand() : base("PanelTopExpand", IconVariant.Regular, PanelTopExpandSizeAndContent.Values[0]) { } }
            public class PanelTopGallery : Icon { public PanelTopGallery() : base("PanelTopGallery", IconVariant.Regular, PanelTopGallerySizeAndContent.Values[1]) { } }
            public class Password : Icon { public Password() : base("Password", IconVariant.Regular, PasswordSizeAndContent.Values[1]) { } }
            public class Patch : Icon { public Patch() : base("Patch", IconVariant.Regular, PatchSizeAndContent.Values[0]) { } }
            public class Patient : Icon { public Patient() : base("Patient", IconVariant.Regular, PatientSizeAndContent.Values[0]) { } }
            public class Pause : Icon { public Pause() : base("Pause", IconVariant.Regular, PauseSizeAndContent.Values[2]) { } }
            public class PauseCircle : Icon { public PauseCircle() : base("PauseCircle", IconVariant.Regular, PauseCircleSizeAndContent.Values[0]) { } }
            public class PauseOff : Icon { public PauseOff() : base("PauseOff", IconVariant.Regular, PauseOffSizeAndContent.Values[1]) { } }
            public class PauseSettings : Icon { public PauseSettings() : base("PauseSettings", IconVariant.Regular, PauseSettingsSizeAndContent.Values[1]) { } }
            public class Payment : Icon { public Payment() : base("Payment", IconVariant.Regular, PaymentSizeAndContent.Values[1]) { } }
            public class Pen : Icon { public Pen() : base("Pen", IconVariant.Regular, PenSizeAndContent.Values[1]) { } }
            public class PenDismiss : Icon { public PenDismiss() : base("PenDismiss", IconVariant.Regular, PenDismissSizeAndContent.Values[1]) { } }
            public class PenOff : Icon { public PenOff() : base("PenOff", IconVariant.Regular, PenOffSizeAndContent.Values[1]) { } }
            public class PenProhibited : Icon { public PenProhibited() : base("PenProhibited", IconVariant.Regular, PenProhibitedSizeAndContent.Values[1]) { } }
            public class PenSparkle : Icon { public PenSparkle() : base("PenSparkle", IconVariant.Regular, PenSparkleSizeAndContent.Values[1]) { } }
            public class Pentagon : Icon { public Pentagon() : base("Pentagon", IconVariant.Regular, PentagonSizeAndContent.Values[0]) { } }
            public class People : Icon { public People() : base("People", IconVariant.Regular, PeopleSizeAndContent.Values[2]) { } }
            public class PeopleAdd : Icon { public PeopleAdd() : base("PeopleAdd", IconVariant.Regular, PeopleAddSizeAndContent.Values[1]) { } }
            public class PeopleAudience : Icon { public PeopleAudience() : base("PeopleAudience", IconVariant.Regular, PeopleAudienceSizeAndContent.Values[0]) { } }
            public class PeopleCall : Icon { public PeopleCall() : base("PeopleCall", IconVariant.Regular, PeopleCallSizeAndContent.Values[1]) { } }
            public class PeopleChat : Icon { public PeopleChat() : base("PeopleChat", IconVariant.Regular, PeopleChatSizeAndContent.Values[1]) { } }
            public class PeopleCheckmark : Icon { public PeopleCheckmark() : base("PeopleCheckmark", IconVariant.Regular, PeopleCheckmarkSizeAndContent.Values[1]) { } }
            public class PeopleCommunity : Icon { public PeopleCommunity() : base("PeopleCommunity", IconVariant.Regular, PeopleCommunitySizeAndContent.Values[1]) { } }
            public class PeopleCommunityAdd : Icon { public PeopleCommunityAdd() : base("PeopleCommunityAdd", IconVariant.Regular, PeopleCommunityAddSizeAndContent.Values[0]) { } }
            public class PeopleEdit : Icon { public PeopleEdit() : base("PeopleEdit", IconVariant.Regular, PeopleEditSizeAndContent.Values[1]) { } }
            public class PeopleError : Icon { public PeopleError() : base("PeopleError", IconVariant.Regular, PeopleErrorSizeAndContent.Values[1]) { } }
            public class PeopleList : Icon { public PeopleList() : base("PeopleList", IconVariant.Regular, PeopleListSizeAndContent.Values[1]) { } }
            public class PeopleLock : Icon { public PeopleLock() : base("PeopleLock", IconVariant.Regular, PeopleLockSizeAndContent.Values[0]) { } }
            public class PeopleMoney : Icon { public PeopleMoney() : base("PeopleMoney", IconVariant.Regular, PeopleMoneySizeAndContent.Values[0]) { } }
            public class PeopleProhibited : Icon { public PeopleProhibited() : base("PeopleProhibited", IconVariant.Regular, PeopleProhibitedSizeAndContent.Values[1]) { } }
            public class PeopleQueue : Icon { public PeopleQueue() : base("PeopleQueue", IconVariant.Regular, PeopleQueueSizeAndContent.Values[0]) { } }
            public class PeopleSearch : Icon { public PeopleSearch() : base("PeopleSearch", IconVariant.Regular, PeopleSearchSizeAndContent.Values[0]) { } }
            public class PeopleSettings : Icon { public PeopleSettings() : base("PeopleSettings", IconVariant.Regular, PeopleSettingsSizeAndContent.Values[0]) { } }
            public class PeopleStar : Icon { public PeopleStar() : base("PeopleStar", IconVariant.Regular, PeopleStarSizeAndContent.Values[1]) { } }
            public class PeopleSwap : Icon { public PeopleSwap() : base("PeopleSwap", IconVariant.Regular, PeopleSwapSizeAndContent.Values[1]) { } }
            public class PeopleSync : Icon { public PeopleSync() : base("PeopleSync", IconVariant.Regular, PeopleSyncSizeAndContent.Values[1]) { } }
            public class PeopleTeam : Icon { public PeopleTeam() : base("PeopleTeam", IconVariant.Regular, PeopleTeamSizeAndContent.Values[1]) { } }
            public class PeopleTeamAdd : Icon { public PeopleTeamAdd() : base("PeopleTeamAdd", IconVariant.Regular, PeopleTeamAddSizeAndContent.Values[0]) { } }
            public class PeopleTeamDelete : Icon { public PeopleTeamDelete() : base("PeopleTeamDelete", IconVariant.Regular, PeopleTeamDeleteSizeAndContent.Values[1]) { } }
            public class PeopleTeamToolbox : Icon { public PeopleTeamToolbox() : base("PeopleTeamToolbox", IconVariant.Regular, PeopleTeamToolboxSizeAndContent.Values[0]) { } }
            public class PeopleToolbox : Icon { public PeopleToolbox() : base("PeopleToolbox", IconVariant.Regular, PeopleToolboxSizeAndContent.Values[1]) { } }
            public class Person : Icon { public Person() : base("Person", IconVariant.Regular, PersonSizeAndContent.Values[2]) { } }
            public class Person5 : Icon { public Person5() : base("Person5", IconVariant.Regular, Person5SizeAndContent.Values[0]) { } }
            public class Person6 : Icon { public Person6() : base("Person6", IconVariant.Regular, Person6SizeAndContent.Values[0]) { } }
            public class PersonAccounts : Icon { public PersonAccounts() : base("PersonAccounts", IconVariant.Regular, PersonAccountsSizeAndContent.Values[0]) { } }
            public class PersonAdd : Icon { public PersonAdd() : base("PersonAdd", IconVariant.Regular, PersonAddSizeAndContent.Values[1]) { } }
            public class PersonAlert : Icon { public PersonAlert() : base("PersonAlert", IconVariant.Regular, PersonAlertSizeAndContent.Values[1]) { } }
            public class PersonArrowBack : Icon { public PersonArrowBack() : base("PersonArrowBack", IconVariant.Regular, PersonArrowBackSizeAndContent.Values[1]) { } }
            public class PersonArrowLeft : Icon { public PersonArrowLeft() : base("PersonArrowLeft", IconVariant.Regular, PersonArrowLeftSizeAndContent.Values[1]) { } }
            public class PersonArrowRight : Icon { public PersonArrowRight() : base("PersonArrowRight", IconVariant.Regular, PersonArrowRightSizeAndContent.Values[1]) { } }
            public class PersonAvailable : Icon { public PersonAvailable() : base("PersonAvailable", IconVariant.Regular, PersonAvailableSizeAndContent.Values[1]) { } }
            public class PersonBoard : Icon { public PersonBoard() : base("PersonBoard", IconVariant.Regular, PersonBoardSizeAndContent.Values[1]) { } }
            public class PersonCall : Icon { public PersonCall() : base("PersonCall", IconVariant.Regular, PersonCallSizeAndContent.Values[1]) { } }
            public class PersonChat : Icon { public PersonChat() : base("PersonChat", IconVariant.Regular, PersonChatSizeAndContent.Values[1]) { } }
            public class PersonCircle : Icon { public PersonCircle() : base("PersonCircle", IconVariant.Regular, PersonCircleSizeAndContent.Values[1]) { } }
            public class PersonClock : Icon { public PersonClock() : base("PersonClock", IconVariant.Regular, PersonClockSizeAndContent.Values[1]) { } }
            public class PersonDelete : Icon { public PersonDelete() : base("PersonDelete", IconVariant.Regular, PersonDeleteSizeAndContent.Values[1]) { } }
            public class PersonDesktop : Icon { public PersonDesktop() : base("PersonDesktop", IconVariant.Regular, PersonDesktopSizeAndContent.Values[0]) { } }
            public class PersonEdit : Icon { public PersonEdit() : base("PersonEdit", IconVariant.Regular, PersonEditSizeAndContent.Values[0]) { } }
            public class PersonFeedback : Icon { public PersonFeedback() : base("PersonFeedback", IconVariant.Regular, PersonFeedbackSizeAndContent.Values[1]) { } }
            public class PersonHeart : Icon { public PersonHeart() : base("PersonHeart", IconVariant.Regular, PersonHeartSizeAndContent.Values[0]) { } }
            public class PersonInfo : Icon { public PersonInfo() : base("PersonInfo", IconVariant.Regular, PersonInfoSizeAndContent.Values[1]) { } }
            public class PersonKey : Icon { public PersonKey() : base("PersonKey", IconVariant.Regular, PersonKeySizeAndContent.Values[0]) { } }
            public class PersonLightbulb : Icon { public PersonLightbulb() : base("PersonLightbulb", IconVariant.Regular, PersonLightbulbSizeAndContent.Values[0]) { } }
            public class PersonLightning : Icon { public PersonLightning() : base("PersonLightning", IconVariant.Regular, PersonLightningSizeAndContent.Values[1]) { } }
            public class PersonLink : Icon { public PersonLink() : base("PersonLink", IconVariant.Regular, PersonLinkSizeAndContent.Values[1]) { } }
            public class PersonLock : Icon { public PersonLock() : base("PersonLock", IconVariant.Regular, PersonLockSizeAndContent.Values[1]) { } }
            public class PersonMail : Icon { public PersonMail() : base("PersonMail", IconVariant.Regular, PersonMailSizeAndContent.Values[1]) { } }
            public class PersonMoney : Icon { public PersonMoney() : base("PersonMoney", IconVariant.Regular, PersonMoneySizeAndContent.Values[0]) { } }
            public class PersonNote : Icon { public PersonNote() : base("PersonNote", IconVariant.Regular, PersonNoteSizeAndContent.Values[1]) { } }
            public class PersonPill : Icon { public PersonPill() : base("PersonPill", IconVariant.Regular, PersonPillSizeAndContent.Values[0]) { } }
            public class PersonProhibited : Icon { public PersonProhibited() : base("PersonProhibited", IconVariant.Regular, PersonProhibitedSizeAndContent.Values[1]) { } }
            public class PersonQuestionMark : Icon { public PersonQuestionMark() : base("PersonQuestionMark", IconVariant.Regular, PersonQuestionMarkSizeAndContent.Values[1]) { } }
            public class PersonRibbon : Icon { public PersonRibbon() : base("PersonRibbon", IconVariant.Regular, PersonRibbonSizeAndContent.Values[1]) { } }
            public class PersonRunning : Icon { public PersonRunning() : base("PersonRunning", IconVariant.Regular, PersonRunningSizeAndContent.Values[0]) { } }
            public class PersonSearch : Icon { public PersonSearch() : base("PersonSearch", IconVariant.Regular, PersonSearchSizeAndContent.Values[1]) { } }
            public class PersonSettings : Icon { public PersonSettings() : base("PersonSettings", IconVariant.Regular, PersonSettingsSizeAndContent.Values[1]) { } }
            public class PersonSquare : Icon { public PersonSquare() : base("PersonSquare", IconVariant.Regular, PersonSquareSizeAndContent.Values[1]) { } }
            public class PersonSquareCheckmark : Icon { public PersonSquareCheckmark() : base("PersonSquareCheckmark", IconVariant.Regular, PersonSquareCheckmarkSizeAndContent.Values[1]) { } }
            public class PersonStar : Icon { public PersonStar() : base("PersonStar", IconVariant.Regular, PersonStarSizeAndContent.Values[1]) { } }
            public class PersonStarburst : Icon { public PersonStarburst() : base("PersonStarburst", IconVariant.Regular, PersonStarburstSizeAndContent.Values[0]) { } }
            public class PersonSubtract : Icon { public PersonSubtract() : base("PersonSubtract", IconVariant.Regular, PersonSubtractSizeAndContent.Values[1]) { } }
            public class PersonSupport : Icon { public PersonSupport() : base("PersonSupport", IconVariant.Regular, PersonSupportSizeAndContent.Values[1]) { } }
            public class PersonSwap : Icon { public PersonSwap() : base("PersonSwap", IconVariant.Regular, PersonSwapSizeAndContent.Values[1]) { } }
            public class PersonSync : Icon { public PersonSync() : base("PersonSync", IconVariant.Regular, PersonSyncSizeAndContent.Values[1]) { } }
            public class PersonTag : Icon { public PersonTag() : base("PersonTag", IconVariant.Regular, PersonTagSizeAndContent.Values[0]) { } }
            public class PersonVoice : Icon { public PersonVoice() : base("PersonVoice", IconVariant.Regular, PersonVoiceSizeAndContent.Values[1]) { } }
            public class PersonWalking : Icon { public PersonWalking() : base("PersonWalking", IconVariant.Regular, PersonWalkingSizeAndContent.Values[1]) { } }
            public class PersonWarning : Icon { public PersonWarning() : base("PersonWarning", IconVariant.Regular, PersonWarningSizeAndContent.Values[1]) { } }
            public class PersonWrench : Icon { public PersonWrench() : base("PersonWrench", IconVariant.Regular, PersonWrenchSizeAndContent.Values[0]) { } }
            public class Phone : Icon { public Phone() : base("Phone", IconVariant.Regular, PhoneSizeAndContent.Values[2]) { } }
            public class PhoneAdd : Icon { public PhoneAdd() : base("PhoneAdd", IconVariant.Regular, PhoneAddSizeAndContent.Values[0]) { } }
            public class PhoneArrowRight : Icon { public PhoneArrowRight() : base("PhoneArrowRight", IconVariant.Regular, PhoneArrowRightSizeAndContent.Values[0]) { } }
            public class PhoneChat : Icon { public PhoneChat() : base("PhoneChat", IconVariant.Regular, PhoneChatSizeAndContent.Values[1]) { } }
            public class PhoneCheckmark : Icon { public PhoneCheckmark() : base("PhoneCheckmark", IconVariant.Regular, PhoneCheckmarkSizeAndContent.Values[1]) { } }
            public class PhoneDesktop : Icon { public PhoneDesktop() : base("PhoneDesktop", IconVariant.Regular, PhoneDesktopSizeAndContent.Values[1]) { } }
            public class PhoneDesktopAdd : Icon { public PhoneDesktopAdd() : base("PhoneDesktopAdd", IconVariant.Regular, PhoneDesktopAddSizeAndContent.Values[0]) { } }
            public class PhoneDismiss : Icon { public PhoneDismiss() : base("PhoneDismiss", IconVariant.Regular, PhoneDismissSizeAndContent.Values[0]) { } }
            public class PhoneEdit : Icon { public PhoneEdit() : base("PhoneEdit", IconVariant.Regular, PhoneEditSizeAndContent.Values[0]) { } }
            public class PhoneEraser : Icon { public PhoneEraser() : base("PhoneEraser", IconVariant.Regular, PhoneEraserSizeAndContent.Values[1]) { } }
            public class PhoneFooterArrowDown : Icon { public PhoneFooterArrowDown() : base("PhoneFooterArrowDown", IconVariant.Regular, PhoneFooterArrowDownSizeAndContent.Values[0]) { } }
            public class PhoneHeaderArrowUp : Icon { public PhoneHeaderArrowUp() : base("PhoneHeaderArrowUp", IconVariant.Regular, PhoneHeaderArrowUpSizeAndContent.Values[0]) { } }
            public class PhoneKey : Icon { public PhoneKey() : base("PhoneKey", IconVariant.Regular, PhoneKeySizeAndContent.Values[0]) { } }
            public class PhoneLaptop : Icon { public PhoneLaptop() : base("PhoneLaptop", IconVariant.Regular, PhoneLaptopSizeAndContent.Values[1]) { } }
            public class PhoneLinkSetup : Icon { public PhoneLinkSetup() : base("PhoneLinkSetup", IconVariant.Regular, PhoneLinkSetupSizeAndContent.Values[0]) { } }
            public class PhoneLock : Icon { public PhoneLock() : base("PhoneLock", IconVariant.Regular, PhoneLockSizeAndContent.Values[0]) { } }
            public class PhonePageHeader : Icon { public PhonePageHeader() : base("PhonePageHeader", IconVariant.Regular, PhonePageHeaderSizeAndContent.Values[0]) { } }
            public class PhonePagination : Icon { public PhonePagination() : base("PhonePagination", IconVariant.Regular, PhonePaginationSizeAndContent.Values[0]) { } }
            public class PhoneScreenTime : Icon { public PhoneScreenTime() : base("PhoneScreenTime", IconVariant.Regular, PhoneScreenTimeSizeAndContent.Values[0]) { } }
            public class PhoneShake : Icon { public PhoneShake() : base("PhoneShake", IconVariant.Regular, PhoneShakeSizeAndContent.Values[0]) { } }
            public class PhoneSpanIn : Icon { public PhoneSpanIn() : base("PhoneSpanIn", IconVariant.Regular, PhoneSpanInSizeAndContent.Values[1]) { } }
            public class PhoneSpanOut : Icon { public PhoneSpanOut() : base("PhoneSpanOut", IconVariant.Regular, PhoneSpanOutSizeAndContent.Values[1]) { } }
            public class PhoneSpeaker : Icon { public PhoneSpeaker() : base("PhoneSpeaker", IconVariant.Regular, PhoneSpeakerSizeAndContent.Values[0]) { } }
            public class PhoneStatusBar : Icon { public PhoneStatusBar() : base("PhoneStatusBar", IconVariant.Regular, PhoneStatusBarSizeAndContent.Values[0]) { } }
            public class PhoneTablet : Icon { public PhoneTablet() : base("PhoneTablet", IconVariant.Regular, PhoneTabletSizeAndContent.Values[0]) { } }
            public class PhoneUpdate : Icon { public PhoneUpdate() : base("PhoneUpdate", IconVariant.Regular, PhoneUpdateSizeAndContent.Values[0]) { } }
            public class PhoneUpdateCheckmark : Icon { public PhoneUpdateCheckmark() : base("PhoneUpdateCheckmark", IconVariant.Regular, PhoneUpdateCheckmarkSizeAndContent.Values[0]) { } }
            public class PhoneVerticalScroll : Icon { public PhoneVerticalScroll() : base("PhoneVerticalScroll", IconVariant.Regular, PhoneVerticalScrollSizeAndContent.Values[0]) { } }
            public class PhoneVibrate : Icon { public PhoneVibrate() : base("PhoneVibrate", IconVariant.Regular, PhoneVibrateSizeAndContent.Values[0]) { } }
            public class PhotoFilter : Icon { public PhotoFilter() : base("PhotoFilter", IconVariant.Regular, PhotoFilterSizeAndContent.Values[0]) { } }
            public class Pi : Icon { public Pi() : base("Pi", IconVariant.Regular, PiSizeAndContent.Values[0]) { } }
            public class PictureIn : Icon { public PictureIn() : base("PictureIn", IconVariant.Regular, PictureInSizeAndContent.Values[1]) { } }
            public class PictureInEnter : Icon { public PictureInEnter() : base("PictureInEnter", IconVariant.Regular, PictureInEnterSizeAndContent.Values[1]) { } }
            public class PictureInExit : Icon { public PictureInExit() : base("PictureInExit", IconVariant.Regular, PictureInExitSizeAndContent.Values[1]) { } }
            public class Pill : Icon { public Pill() : base("Pill", IconVariant.Regular, PillSizeAndContent.Values[1]) { } }
            public class Pin : Icon { public Pin() : base("Pin", IconVariant.Regular, PinSizeAndContent.Values[2]) { } }
            public class PinOff : Icon { public PinOff() : base("PinOff", IconVariant.Regular, PinOffSizeAndContent.Values[1]) { } }
            public class Pipeline : Icon { public Pipeline() : base("Pipeline", IconVariant.Regular, PipelineSizeAndContent.Values[0]) { } }
            public class PipelineAdd : Icon { public PipelineAdd() : base("PipelineAdd", IconVariant.Regular, PipelineAddSizeAndContent.Values[0]) { } }
            public class PipelineArrowCurveDown : Icon { public PipelineArrowCurveDown() : base("PipelineArrowCurveDown", IconVariant.Regular, PipelineArrowCurveDownSizeAndContent.Values[0]) { } }
            public class PipelinePlay : Icon { public PipelinePlay() : base("PipelinePlay", IconVariant.Regular, PipelinePlaySizeAndContent.Values[0]) { } }
            public class Pivot : Icon { public Pivot() : base("Pivot", IconVariant.Regular, PivotSizeAndContent.Values[0]) { } }
            public class PlantGrass : Icon { public PlantGrass() : base("PlantGrass", IconVariant.Regular, PlantGrassSizeAndContent.Values[0]) { } }
            public class PlantRagweed : Icon { public PlantRagweed() : base("PlantRagweed", IconVariant.Regular, PlantRagweedSizeAndContent.Values[0]) { } }
            public class Play : Icon { public Play() : base("Play", IconVariant.Regular, PlaySizeAndContent.Values[2]) { } }
            public class PlayCircle : Icon { public PlayCircle() : base("PlayCircle", IconVariant.Regular, PlayCircleSizeAndContent.Values[1]) { } }
            public class PlayCircleHint : Icon { public PlayCircleHint() : base("PlayCircleHint", IconVariant.Regular, PlayCircleHintSizeAndContent.Values[1]) { } }
            public class PlayingCards : Icon { public PlayingCards() : base("PlayingCards", IconVariant.Regular, PlayingCardsSizeAndContent.Values[0]) { } }
            public class PlaySettings : Icon { public PlaySettings() : base("PlaySettings", IconVariant.Regular, PlaySettingsSizeAndContent.Values[0]) { } }
            public class PlugConnected : Icon { public PlugConnected() : base("PlugConnected", IconVariant.Regular, PlugConnectedSizeAndContent.Values[1]) { } }
            public class PlugConnectedAdd : Icon { public PlugConnectedAdd() : base("PlugConnectedAdd", IconVariant.Regular, PlugConnectedAddSizeAndContent.Values[0]) { } }
            public class PlugConnectedCheckmark : Icon { public PlugConnectedCheckmark() : base("PlugConnectedCheckmark", IconVariant.Regular, PlugConnectedCheckmarkSizeAndContent.Values[0]) { } }
            public class PlugConnectedSettings : Icon { public PlugConnectedSettings() : base("PlugConnectedSettings", IconVariant.Regular, PlugConnectedSettingsSizeAndContent.Values[0]) { } }
            public class PlugDisconnected : Icon { public PlugDisconnected() : base("PlugDisconnected", IconVariant.Regular, PlugDisconnectedSizeAndContent.Values[1]) { } }
            public class PointScan : Icon { public PointScan() : base("PointScan", IconVariant.Regular, PointScanSizeAndContent.Values[0]) { } }
            public class Poll : Icon { public Poll() : base("Poll", IconVariant.Regular, PollSizeAndContent.Values[1]) { } }
            public class PollHorizontal : Icon { public PollHorizontal() : base("PollHorizontal", IconVariant.Regular, PollHorizontalSizeAndContent.Values[1]) { } }
            public class PortHdmi : Icon { public PortHdmi() : base("PortHdmi", IconVariant.Regular, PortHdmiSizeAndContent.Values[0]) { } }
            public class PortMicroUsb : Icon { public PortMicroUsb() : base("PortMicroUsb", IconVariant.Regular, PortMicroUsbSizeAndContent.Values[0]) { } }
            public class PortUsbA : Icon { public PortUsbA() : base("PortUsbA", IconVariant.Regular, PortUsbASizeAndContent.Values[0]) { } }
            public class PortUsbC : Icon { public PortUsbC() : base("PortUsbC", IconVariant.Regular, PortUsbCSizeAndContent.Values[0]) { } }
            public class PositionBackward : Icon { public PositionBackward() : base("PositionBackward", IconVariant.Regular, PositionBackwardSizeAndContent.Values[0]) { } }
            public class PositionForward : Icon { public PositionForward() : base("PositionForward", IconVariant.Regular, PositionForwardSizeAndContent.Values[0]) { } }
            public class PositionToBack : Icon { public PositionToBack() : base("PositionToBack", IconVariant.Regular, PositionToBackSizeAndContent.Values[0]) { } }
            public class PositionToFront : Icon { public PositionToFront() : base("PositionToFront", IconVariant.Regular, PositionToFrontSizeAndContent.Values[0]) { } }
            public class Power : Icon { public Power() : base("Power", IconVariant.Regular, PowerSizeAndContent.Values[0]) { } }
            public class Predictions : Icon { public Predictions() : base("Predictions", IconVariant.Regular, PredictionsSizeAndContent.Values[0]) { } }
            public class Premium : Icon { public Premium() : base("Premium", IconVariant.Regular, PremiumSizeAndContent.Values[2]) { } }
            public class PremiumPerson : Icon { public PremiumPerson() : base("PremiumPerson", IconVariant.Regular, PremiumPersonSizeAndContent.Values[1]) { } }
            public class PresenceAvailable : Icon { public PresenceAvailable() : base("PresenceAvailable", IconVariant.Regular, PresenceAvailableSizeAndContent.Values[3]) { } }
            public class PresenceAway : Icon { public PresenceAway() : base("PresenceAway", IconVariant.Regular, PresenceAwaySizeAndContent.Values[3]) { } }
            public class PresenceBlocked : Icon { public PresenceBlocked() : base("PresenceBlocked", IconVariant.Regular, PresenceBlockedSizeAndContent.Values[3]) { } }
            public class PresenceDnd : Icon { public PresenceDnd() : base("PresenceDnd", IconVariant.Regular, PresenceDndSizeAndContent.Values[3]) { } }
            public class PresenceOffline : Icon { public PresenceOffline() : base("PresenceOffline", IconVariant.Regular, PresenceOfflineSizeAndContent.Values[3]) { } }
            public class PresenceOof : Icon { public PresenceOof() : base("PresenceOof", IconVariant.Regular, PresenceOofSizeAndContent.Values[3]) { } }
            public class PresenceUnknown : Icon { public PresenceUnknown() : base("PresenceUnknown", IconVariant.Regular, PresenceUnknownSizeAndContent.Values[3]) { } }
            public class Presenter : Icon { public Presenter() : base("Presenter", IconVariant.Regular, PresenterSizeAndContent.Values[0]) { } }
            public class PresenterOff : Icon { public PresenterOff() : base("PresenterOff", IconVariant.Regular, PresenterOffSizeAndContent.Values[0]) { } }
            public class PreviewLink : Icon { public PreviewLink() : base("PreviewLink", IconVariant.Regular, PreviewLinkSizeAndContent.Values[1]) { } }
            public class Previous : Icon { public Previous() : base("Previous", IconVariant.Regular, PreviousSizeAndContent.Values[1]) { } }
            public class PreviousFrame : Icon { public PreviousFrame() : base("PreviousFrame", IconVariant.Regular, PreviousFrameSizeAndContent.Values[0]) { } }
            public class Print : Icon { public Print() : base("Print", IconVariant.Regular, PrintSizeAndContent.Values[1]) { } }
            public class PrintAdd : Icon { public PrintAdd() : base("PrintAdd", IconVariant.Regular, PrintAddSizeAndContent.Values[0]) { } }
            public class Production : Icon { public Production() : base("Production", IconVariant.Regular, ProductionSizeAndContent.Values[0]) { } }
            public class ProductionCheckmark : Icon { public ProductionCheckmark() : base("ProductionCheckmark", IconVariant.Regular, ProductionCheckmarkSizeAndContent.Values[0]) { } }
            public class Prohibited : Icon { public Prohibited() : base("Prohibited", IconVariant.Regular, ProhibitedSizeAndContent.Values[2]) { } }
            public class ProhibitedMultiple : Icon { public ProhibitedMultiple() : base("ProhibitedMultiple", IconVariant.Regular, ProhibitedMultipleSizeAndContent.Values[1]) { } }
            public class ProhibitedNote : Icon { public ProhibitedNote() : base("ProhibitedNote", IconVariant.Regular, ProhibitedNoteSizeAndContent.Values[0]) { } }
            public class ProjectionScreen : Icon { public ProjectionScreen() : base("ProjectionScreen", IconVariant.Regular, ProjectionScreenSizeAndContent.Values[1]) { } }
            public class ProjectionScreenDismiss : Icon { public ProjectionScreenDismiss() : base("ProjectionScreenDismiss", IconVariant.Regular, ProjectionScreenDismissSizeAndContent.Values[1]) { } }
            public class ProjectionScreenText : Icon { public ProjectionScreenText() : base("ProjectionScreenText", IconVariant.Regular, ProjectionScreenTextSizeAndContent.Values[0]) { } }
            public class ProtocolHandler : Icon { public ProtocolHandler() : base("ProtocolHandler", IconVariant.Regular, ProtocolHandlerSizeAndContent.Values[1]) { } }
            public class Pulse : Icon { public Pulse() : base("Pulse", IconVariant.Regular, PulseSizeAndContent.Values[0]) { } }
            public class PulseSquare : Icon { public PulseSquare() : base("PulseSquare", IconVariant.Regular, PulseSquareSizeAndContent.Values[0]) { } }
            public class PuzzleCube : Icon { public PuzzleCube() : base("PuzzleCube", IconVariant.Regular, PuzzleCubeSizeAndContent.Values[1]) { } }
            public class PuzzleCubePiece : Icon { public PuzzleCubePiece() : base("PuzzleCubePiece", IconVariant.Regular, PuzzleCubePieceSizeAndContent.Values[0]) { } }
            public class PuzzlePiece : Icon { public PuzzlePiece() : base("PuzzlePiece", IconVariant.Regular, PuzzlePieceSizeAndContent.Values[1]) { } }
            public class PuzzlePieceShield : Icon { public PuzzlePieceShield() : base("PuzzlePieceShield", IconVariant.Regular, PuzzlePieceShieldSizeAndContent.Values[0]) { } }
            public class QrCode : Icon { public QrCode() : base("QrCode", IconVariant.Regular, QrCodeSizeAndContent.Values[0]) { } }
            public class Question : Icon { public Question() : base("Question", IconVariant.Regular, QuestionSizeAndContent.Values[1]) { } }
            public class QuestionCircle : Icon { public QuestionCircle() : base("QuestionCircle", IconVariant.Regular, QuestionCircleSizeAndContent.Values[2]) { } }
            public class QuizNew : Icon { public QuizNew() : base("QuizNew", IconVariant.Regular, QuizNewSizeAndContent.Values[0]) { } }
            public class Radar : Icon { public Radar() : base("Radar", IconVariant.Regular, RadarSizeAndContent.Values[0]) { } }
            public class RadarCheckmark : Icon { public RadarCheckmark() : base("RadarCheckmark", IconVariant.Regular, RadarCheckmarkSizeAndContent.Values[0]) { } }
            public class RadarRectangleMultiple : Icon { public RadarRectangleMultiple() : base("RadarRectangleMultiple", IconVariant.Regular, RadarRectangleMultipleSizeAndContent.Values[0]) { } }
            public class RadioButton : Icon { public RadioButton() : base("RadioButton", IconVariant.Regular, RadioButtonSizeAndContent.Values[1]) { } }
            public class Ram : Icon { public Ram() : base("Ram", IconVariant.Regular, RamSizeAndContent.Values[1]) { } }
            public class RatingMature : Icon { public RatingMature() : base("RatingMature", IconVariant.Regular, RatingMatureSizeAndContent.Values[1]) { } }
            public class RatioOneTo : Icon { public RatioOneTo() : base("RatioOneTo", IconVariant.Regular, RatioOneToSizeAndContent.Values[0]) { } }
            public class ReadAloud : Icon { public ReadAloud() : base("ReadAloud", IconVariant.Regular, ReadAloudSizeAndContent.Values[1]) { } }
            public class ReadingList : Icon { public ReadingList() : base("ReadingList", IconVariant.Regular, ReadingListSizeAndContent.Values[1]) { } }
            public class ReadingListAdd : Icon { public ReadingListAdd() : base("ReadingListAdd", IconVariant.Regular, ReadingListAddSizeAndContent.Values[1]) { } }
            public class ReadingModeMobile : Icon { public ReadingModeMobile() : base("ReadingModeMobile", IconVariant.Regular, ReadingModeMobileSizeAndContent.Values[0]) { } }
            public class RealEstate : Icon { public RealEstate() : base("RealEstate", IconVariant.Regular, RealEstateSizeAndContent.Values[0]) { } }
            public class Receipt : Icon { public Receipt() : base("Receipt", IconVariant.Regular, ReceiptSizeAndContent.Values[1]) { } }
            public class ReceiptAdd : Icon { public ReceiptAdd() : base("ReceiptAdd", IconVariant.Regular, ReceiptAddSizeAndContent.Values[0]) { } }
            public class ReceiptBag : Icon { public ReceiptBag() : base("ReceiptBag", IconVariant.Regular, ReceiptBagSizeAndContent.Values[0]) { } }
            public class ReceiptCube : Icon { public ReceiptCube() : base("ReceiptCube", IconVariant.Regular, ReceiptCubeSizeAndContent.Values[0]) { } }
            public class ReceiptMoney : Icon { public ReceiptMoney() : base("ReceiptMoney", IconVariant.Regular, ReceiptMoneySizeAndContent.Values[1]) { } }
            public class ReceiptPlay : Icon { public ReceiptPlay() : base("ReceiptPlay", IconVariant.Regular, ReceiptPlaySizeAndContent.Values[0]) { } }
            public class ReceiptSearch : Icon { public ReceiptSearch() : base("ReceiptSearch", IconVariant.Regular, ReceiptSearchSizeAndContent.Values[0]) { } }
            public class ReceiptSparkles : Icon { public ReceiptSparkles() : base("ReceiptSparkles", IconVariant.Regular, ReceiptSparklesSizeAndContent.Values[1]) { } }
            public class Record : Icon { public Record() : base("Record", IconVariant.Regular, RecordSizeAndContent.Values[2]) { } }
            public class RecordStop : Icon { public RecordStop() : base("RecordStop", IconVariant.Regular, RecordStopSizeAndContent.Values[2]) { } }
            public class RectangleLandscape : Icon { public RectangleLandscape() : base("RectangleLandscape", IconVariant.Regular, RectangleLandscapeSizeAndContent.Values[2]) { } }
            public class RectangleLandscapeHintCopy : Icon { public RectangleLandscapeHintCopy() : base("RectangleLandscapeHintCopy", IconVariant.Regular, RectangleLandscapeHintCopySizeAndContent.Values[1]) { } }
            public class RectangleLandscapeSparkle : Icon { public RectangleLandscapeSparkle() : base("RectangleLandscapeSparkle", IconVariant.Regular, RectangleLandscapeSparkleSizeAndContent.Values[1]) { } }
            public class RectanglePortraitLocationTarget : Icon { public RectanglePortraitLocationTarget() : base("RectanglePortraitLocationTarget", IconVariant.Regular, RectanglePortraitLocationTargetSizeAndContent.Values[0]) { } }
            public class Recycle : Icon { public Recycle() : base("Recycle", IconVariant.Regular, RecycleSizeAndContent.Values[0]) { } }
            public class RemixAdd : Icon { public RemixAdd() : base("RemixAdd", IconVariant.Regular, RemixAddSizeAndContent.Values[1]) { } }
            public class Remote : Icon { public Remote() : base("Remote", IconVariant.Regular, RemoteSizeAndContent.Values[1]) { } }
            public class Rename : Icon { public Rename() : base("Rename", IconVariant.Regular, RenameSizeAndContent.Values[1]) { } }
            public class Reorder : Icon { public Reorder() : base("Reorder", IconVariant.Regular, ReorderSizeAndContent.Values[0]) { } }
            public class ReOrderDotsHorizontal : Icon { public ReOrderDotsHorizontal() : base("ReOrderDotsHorizontal", IconVariant.Regular, ReOrderDotsHorizontalSizeAndContent.Values[1]) { } }
            public class ReOrderDotsVertical : Icon { public ReOrderDotsVertical() : base("ReOrderDotsVertical", IconVariant.Regular, ReOrderDotsVerticalSizeAndContent.Values[1]) { } }
            public class Replay : Icon { public Replay() : base("Replay", IconVariant.Regular, ReplaySizeAndContent.Values[0]) { } }
            public class Resize : Icon { public Resize() : base("Resize", IconVariant.Regular, ResizeSizeAndContent.Values[1]) { } }
            public class ResizeImage : Icon { public ResizeImage() : base("ResizeImage", IconVariant.Regular, ResizeImageSizeAndContent.Values[0]) { } }
            public class ResizeLarge : Icon { public ResizeLarge() : base("ResizeLarge", IconVariant.Regular, ResizeLargeSizeAndContent.Values[1]) { } }
            public class ResizeSmall : Icon { public ResizeSmall() : base("ResizeSmall", IconVariant.Regular, ResizeSmallSizeAndContent.Values[1]) { } }
            public class ResizeTable : Icon { public ResizeTable() : base("ResizeTable", IconVariant.Regular, ResizeTableSizeAndContent.Values[0]) { } }
            public class ResizeVideo : Icon { public ResizeVideo() : base("ResizeVideo", IconVariant.Regular, ResizeVideoSizeAndContent.Values[0]) { } }
            public class Reward : Icon { public Reward() : base("Reward", IconVariant.Regular, RewardSizeAndContent.Values[2]) { } }
            public class Rewind : Icon { public Rewind() : base("Rewind", IconVariant.Regular, RewindSizeAndContent.Values[1]) { } }
            public class Rhombus : Icon { public Rhombus() : base("Rhombus", IconVariant.Regular, RhombusSizeAndContent.Values[1]) { } }
            public class Ribbon : Icon { public Ribbon() : base("Ribbon", IconVariant.Regular, RibbonSizeAndContent.Values[2]) { } }
            public class RibbonAdd : Icon { public RibbonAdd() : base("RibbonAdd", IconVariant.Regular, RibbonAddSizeAndContent.Values[0]) { } }
            public class RibbonOff : Icon { public RibbonOff() : base("RibbonOff", IconVariant.Regular, RibbonOffSizeAndContent.Values[2]) { } }
            public class RibbonStar : Icon { public RibbonStar() : base("RibbonStar", IconVariant.Regular, RibbonStarSizeAndContent.Values[0]) { } }
            public class RoadCone : Icon { public RoadCone() : base("RoadCone", IconVariant.Regular, RoadConeSizeAndContent.Values[1]) { } }
            public class Rocket : Icon { public Rocket() : base("Rocket", IconVariant.Regular, RocketSizeAndContent.Values[1]) { } }
            public class RotateLeft : Icon { public RotateLeft() : base("RotateLeft", IconVariant.Regular, RotateLeftSizeAndContent.Values[0]) { } }
            public class RotateRight : Icon { public RotateRight() : base("RotateRight", IconVariant.Regular, RotateRightSizeAndContent.Values[0]) { } }
            public class Router : Icon { public Router() : base("Router", IconVariant.Regular, RouterSizeAndContent.Values[0]) { } }
            public class RowTriple : Icon { public RowTriple() : base("RowTriple", IconVariant.Regular, RowTripleSizeAndContent.Values[0]) { } }
            public class Rss : Icon { public Rss() : base("Rss", IconVariant.Regular, RssSizeAndContent.Values[1]) { } }
            public class Ruler : Icon { public Ruler() : base("Ruler", IconVariant.Regular, RulerSizeAndContent.Values[1]) { } }
            public class Run : Icon { public Run() : base("Run", IconVariant.Regular, RunSizeAndContent.Values[1]) { } }
            public class Sanitize : Icon { public Sanitize() : base("Sanitize", IconVariant.Regular, SanitizeSizeAndContent.Values[0]) { } }
            public class Save : Icon { public Save() : base("Save", IconVariant.Regular, SaveSizeAndContent.Values[1]) { } }
            public class SaveArrowRight : Icon { public SaveArrowRight() : base("SaveArrowRight", IconVariant.Regular, SaveArrowRightSizeAndContent.Values[0]) { } }
            public class SaveCopy : Icon { public SaveCopy() : base("SaveCopy", IconVariant.Regular, SaveCopySizeAndContent.Values[0]) { } }
            public class SaveEdit : Icon { public SaveEdit() : base("SaveEdit", IconVariant.Regular, SaveEditSizeAndContent.Values[0]) { } }
            public class SaveImage : Icon { public SaveImage() : base("SaveImage", IconVariant.Regular, SaveImageSizeAndContent.Values[0]) { } }
            public class SaveMultiple : Icon { public SaveMultiple() : base("SaveMultiple", IconVariant.Regular, SaveMultipleSizeAndContent.Values[1]) { } }
            public class SaveSearch : Icon { public SaveSearch() : base("SaveSearch", IconVariant.Regular, SaveSearchSizeAndContent.Values[0]) { } }
            public class SaveSync : Icon { public SaveSync() : base("SaveSync", IconVariant.Regular, SaveSyncSizeAndContent.Values[0]) { } }
            public class Savings : Icon { public Savings() : base("Savings", IconVariant.Regular, SavingsSizeAndContent.Values[1]) { } }
            public class ScaleFill : Icon { public ScaleFill() : base("ScaleFill", IconVariant.Regular, ScaleFillSizeAndContent.Values[0]) { } }
            public class ScaleFit : Icon { public ScaleFit() : base("ScaleFit", IconVariant.Regular, ScaleFitSizeAndContent.Values[1]) { } }
            public class Scales : Icon { public Scales() : base("Scales", IconVariant.Regular, ScalesSizeAndContent.Values[0]) { } }
            public class Scan : Icon { public Scan() : base("Scan", IconVariant.Regular, ScanSizeAndContent.Values[1]) { } }
            public class ScanCamera : Icon { public ScanCamera() : base("ScanCamera", IconVariant.Regular, ScanCameraSizeAndContent.Values[1]) { } }
            public class ScanDash : Icon { public ScanDash() : base("ScanDash", IconVariant.Regular, ScanDashSizeAndContent.Values[2]) { } }
            public class ScanObject : Icon { public ScanObject() : base("ScanObject", IconVariant.Regular, ScanObjectSizeAndContent.Values[0]) { } }
            public class ScanPerson : Icon { public ScanPerson() : base("ScanPerson", IconVariant.Regular, ScanPersonSizeAndContent.Values[1]) { } }
            public class ScanTable : Icon { public ScanTable() : base("ScanTable", IconVariant.Regular, ScanTableSizeAndContent.Values[0]) { } }
            public class ScanText : Icon { public ScanText() : base("ScanText", IconVariant.Regular, ScanTextSizeAndContent.Values[1]) { } }
            public class ScanThumbUp : Icon { public ScanThumbUp() : base("ScanThumbUp", IconVariant.Regular, ScanThumbUpSizeAndContent.Values[1]) { } }
            public class ScanThumbUpOff : Icon { public ScanThumbUpOff() : base("ScanThumbUpOff", IconVariant.Regular, ScanThumbUpOffSizeAndContent.Values[1]) { } }
            public class ScanType : Icon { public ScanType() : base("ScanType", IconVariant.Regular, ScanTypeSizeAndContent.Values[0]) { } }
            public class ScanTypeCheckmark : Icon { public ScanTypeCheckmark() : base("ScanTypeCheckmark", IconVariant.Regular, ScanTypeCheckmarkSizeAndContent.Values[0]) { } }
            public class ScanTypeOff : Icon { public ScanTypeOff() : base("ScanTypeOff", IconVariant.Regular, ScanTypeOffSizeAndContent.Values[0]) { } }
            public class Scratchpad : Icon { public Scratchpad() : base("Scratchpad", IconVariant.Regular, ScratchpadSizeAndContent.Values[0]) { } }
            public class ScreenCut : Icon { public ScreenCut() : base("ScreenCut", IconVariant.Regular, ScreenCutSizeAndContent.Values[0]) { } }
            public class ScreenPerson : Icon { public ScreenPerson() : base("ScreenPerson", IconVariant.Regular, ScreenPersonSizeAndContent.Values[0]) { } }
            public class ScreenSearch : Icon { public ScreenSearch() : base("ScreenSearch", IconVariant.Regular, ScreenSearchSizeAndContent.Values[0]) { } }
            public class Screenshot : Icon { public Screenshot() : base("Screenshot", IconVariant.Regular, ScreenshotSizeAndContent.Values[1]) { } }
            public class ScreenshotRecord : Icon { public ScreenshotRecord() : base("ScreenshotRecord", IconVariant.Regular, ScreenshotRecordSizeAndContent.Values[1]) { } }
            public class Script : Icon { public Script() : base("Script", IconVariant.Regular, ScriptSizeAndContent.Values[1]) { } }
            public class Search : Icon { public Search() : base("Search", IconVariant.Regular, SearchSizeAndContent.Values[2]) { } }
            public class SearchInfo : Icon { public SearchInfo() : base("SearchInfo", IconVariant.Regular, SearchInfoSizeAndContent.Values[0]) { } }
            public class SearchSettings : Icon { public SearchSettings() : base("SearchSettings", IconVariant.Regular, SearchSettingsSizeAndContent.Values[0]) { } }
            public class SearchShield : Icon { public SearchShield() : base("SearchShield", IconVariant.Regular, SearchShieldSizeAndContent.Values[0]) { } }
            public class SearchSquare : Icon { public SearchSquare() : base("SearchSquare", IconVariant.Regular, SearchSquareSizeAndContent.Values[0]) { } }
            public class SearchVisual : Icon { public SearchVisual() : base("SearchVisual", IconVariant.Regular, SearchVisualSizeAndContent.Values[1]) { } }
            public class SelectAllOff : Icon { public SelectAllOff() : base("SelectAllOff", IconVariant.Regular, SelectAllOffSizeAndContent.Values[1]) { } }
            public class SelectAllOn : Icon { public SelectAllOn() : base("SelectAllOn", IconVariant.Regular, SelectAllOnSizeAndContent.Values[1]) { } }
            public class SelectObject : Icon { public SelectObject() : base("SelectObject", IconVariant.Regular, SelectObjectSizeAndContent.Values[0]) { } }
            public class SelectObjectSkew : Icon { public SelectObjectSkew() : base("SelectObjectSkew", IconVariant.Regular, SelectObjectSkewSizeAndContent.Values[0]) { } }
            public class SelectObjectSkewDismiss : Icon { public SelectObjectSkewDismiss() : base("SelectObjectSkewDismiss", IconVariant.Regular, SelectObjectSkewDismissSizeAndContent.Values[0]) { } }
            public class SelectObjectSkewEdit : Icon { public SelectObjectSkewEdit() : base("SelectObjectSkewEdit", IconVariant.Regular, SelectObjectSkewEditSizeAndContent.Values[0]) { } }
            public class Send : Icon { public Send() : base("Send", IconVariant.Regular, SendSizeAndContent.Values[1]) { } }
            public class SendBeaker : Icon { public SendBeaker() : base("SendBeaker", IconVariant.Regular, SendBeakerSizeAndContent.Values[1]) { } }
            public class SendClock : Icon { public SendClock() : base("SendClock", IconVariant.Regular, SendClockSizeAndContent.Values[0]) { } }
            public class SendCopy : Icon { public SendCopy() : base("SendCopy", IconVariant.Regular, SendCopySizeAndContent.Values[0]) { } }
            public class SerialPort : Icon { public SerialPort() : base("SerialPort", IconVariant.Regular, SerialPortSizeAndContent.Values[1]) { } }
            public class Server : Icon { public Server() : base("Server", IconVariant.Regular, ServerSizeAndContent.Values[2]) { } }
            public class ServerLink : Icon { public ServerLink() : base("ServerLink", IconVariant.Regular, ServerLinkSizeAndContent.Values[1]) { } }
            public class ServerMultiple : Icon { public ServerMultiple() : base("ServerMultiple", IconVariant.Regular, ServerMultipleSizeAndContent.Values[0]) { } }
            public class ServerPlay : Icon { public ServerPlay() : base("ServerPlay", IconVariant.Regular, ServerPlaySizeAndContent.Values[0]) { } }
            public class ServiceBell : Icon { public ServiceBell() : base("ServiceBell", IconVariant.Regular, ServiceBellSizeAndContent.Values[1]) { } }
            public class Settings : Icon { public Settings() : base("Settings", IconVariant.Regular, SettingsSizeAndContent.Values[1]) { } }
            public class SettingsChat : Icon { public SettingsChat() : base("SettingsChat", IconVariant.Regular, SettingsChatSizeAndContent.Values[0]) { } }
            public class SettingsCogMultiple : Icon { public SettingsCogMultiple() : base("SettingsCogMultiple", IconVariant.Regular, SettingsCogMultipleSizeAndContent.Values[0]) { } }
            public class ShapeExclude : Icon { public ShapeExclude() : base("ShapeExclude", IconVariant.Regular, ShapeExcludeSizeAndContent.Values[1]) { } }
            public class ShapeIntersect : Icon { public ShapeIntersect() : base("ShapeIntersect", IconVariant.Regular, ShapeIntersectSizeAndContent.Values[1]) { } }
            public class ShapeOrganic : Icon { public ShapeOrganic() : base("ShapeOrganic", IconVariant.Regular, ShapeOrganicSizeAndContent.Values[1]) { } }
            public class Shapes : Icon { public Shapes() : base("Shapes", IconVariant.Regular, ShapesSizeAndContent.Values[1]) { } }
            public class ShapeSubtract : Icon { public ShapeSubtract() : base("ShapeSubtract", IconVariant.Regular, ShapeSubtractSizeAndContent.Values[1]) { } }
            public class ShapeUnion : Icon { public ShapeUnion() : base("ShapeUnion", IconVariant.Regular, ShapeUnionSizeAndContent.Values[1]) { } }
            public class Share : Icon { public Share() : base("Share", IconVariant.Regular, ShareSizeAndContent.Values[1]) { } }
            public class ShareAndroid : Icon { public ShareAndroid() : base("ShareAndroid", IconVariant.Regular, ShareAndroidSizeAndContent.Values[1]) { } }
            public class ShareCloseTray : Icon { public ShareCloseTray() : base("ShareCloseTray", IconVariant.Regular, ShareCloseTraySizeAndContent.Values[0]) { } }
            public class ShareIos : Icon { public ShareIos() : base("ShareIos", IconVariant.Regular, ShareIosSizeAndContent.Values[0]) { } }
            public class ShareScreenPerson : Icon { public ShareScreenPerson() : base("ShareScreenPerson", IconVariant.Regular, ShareScreenPersonSizeAndContent.Values[1]) { } }
            public class ShareScreenPersonOverlay : Icon { public ShareScreenPersonOverlay() : base("ShareScreenPersonOverlay", IconVariant.Regular, ShareScreenPersonOverlaySizeAndContent.Values[1]) { } }
            public class ShareScreenPersonOverlayInside : Icon { public ShareScreenPersonOverlayInside() : base("ShareScreenPersonOverlayInside", IconVariant.Regular, ShareScreenPersonOverlayInsideSizeAndContent.Values[1]) { } }
            public class ShareScreenPersonP : Icon { public ShareScreenPersonP() : base("ShareScreenPersonP", IconVariant.Regular, ShareScreenPersonPSizeAndContent.Values[1]) { } }
            public class ShareScreenStart : Icon { public ShareScreenStart() : base("ShareScreenStart", IconVariant.Regular, ShareScreenStartSizeAndContent.Values[0]) { } }
            public class ShareScreenStop : Icon { public ShareScreenStop() : base("ShareScreenStop", IconVariant.Regular, ShareScreenStopSizeAndContent.Values[1]) { } }
            public class Shield : Icon { public Shield() : base("Shield", IconVariant.Regular, ShieldSizeAndContent.Values[2]) { } }
            public class ShieldAdd : Icon { public ShieldAdd() : base("ShieldAdd", IconVariant.Regular, ShieldAddSizeAndContent.Values[1]) { } }
            public class ShieldBadge : Icon { public ShieldBadge() : base("ShieldBadge", IconVariant.Regular, ShieldBadgeSizeAndContent.Values[0]) { } }
            public class ShieldCheckmark : Icon { public ShieldCheckmark() : base("ShieldCheckmark", IconVariant.Regular, ShieldCheckmarkSizeAndContent.Values[1]) { } }
            public class ShieldDismiss : Icon { public ShieldDismiss() : base("ShieldDismiss", IconVariant.Regular, ShieldDismissSizeAndContent.Values[1]) { } }
            public class ShieldError : Icon { public ShieldError() : base("ShieldError", IconVariant.Regular, ShieldErrorSizeAndContent.Values[1]) { } }
            public class ShieldGlobe : Icon { public ShieldGlobe() : base("ShieldGlobe", IconVariant.Regular, ShieldGlobeSizeAndContent.Values[1]) { } }
            public class ShieldKeyhole : Icon { public ShieldKeyhole() : base("ShieldKeyhole", IconVariant.Regular, ShieldKeyholeSizeAndContent.Values[1]) { } }
            public class ShieldLock : Icon { public ShieldLock() : base("ShieldLock", IconVariant.Regular, ShieldLockSizeAndContent.Values[1]) { } }
            public class ShieldPerson : Icon { public ShieldPerson() : base("ShieldPerson", IconVariant.Regular, ShieldPersonSizeAndContent.Values[0]) { } }
            public class ShieldPersonAdd : Icon { public ShieldPersonAdd() : base("ShieldPersonAdd", IconVariant.Regular, ShieldPersonAddSizeAndContent.Values[0]) { } }
            public class ShieldProhibited : Icon { public ShieldProhibited() : base("ShieldProhibited", IconVariant.Regular, ShieldProhibitedSizeAndContent.Values[0]) { } }
            public class ShieldQuestion : Icon { public ShieldQuestion() : base("ShieldQuestion", IconVariant.Regular, ShieldQuestionSizeAndContent.Values[1]) { } }
            public class ShieldTask : Icon { public ShieldTask() : base("ShieldTask", IconVariant.Regular, ShieldTaskSizeAndContent.Values[1]) { } }
            public class Shifts : Icon { public Shifts() : base("Shifts", IconVariant.Regular, ShiftsSizeAndContent.Values[1]) { } }
            public class Shifts30Minutes : Icon { public Shifts30Minutes() : base("Shifts30Minutes", IconVariant.Regular, Shifts30MinutesSizeAndContent.Values[0]) { } }
            public class ShiftsActivity : Icon { public ShiftsActivity() : base("ShiftsActivity", IconVariant.Regular, ShiftsActivitySizeAndContent.Values[1]) { } }
            public class ShiftsAdd : Icon { public ShiftsAdd() : base("ShiftsAdd", IconVariant.Regular, ShiftsAddSizeAndContent.Values[0]) { } }
            public class ShiftsAvailability : Icon { public ShiftsAvailability() : base("ShiftsAvailability", IconVariant.Regular, ShiftsAvailabilitySizeAndContent.Values[0]) { } }
            public class ShiftsCheckmark : Icon { public ShiftsCheckmark() : base("ShiftsCheckmark", IconVariant.Regular, ShiftsCheckmarkSizeAndContent.Values[0]) { } }
            public class ShiftsDay : Icon { public ShiftsDay() : base("ShiftsDay", IconVariant.Regular, ShiftsDaySizeAndContent.Values[0]) { } }
            public class ShiftsOpen : Icon { public ShiftsOpen() : base("ShiftsOpen", IconVariant.Regular, ShiftsOpenSizeAndContent.Values[0]) { } }
            public class ShiftsProhibited : Icon { public ShiftsProhibited() : base("ShiftsProhibited", IconVariant.Regular, ShiftsProhibitedSizeAndContent.Values[0]) { } }
            public class ShiftsQuestionMark : Icon { public ShiftsQuestionMark() : base("ShiftsQuestionMark", IconVariant.Regular, ShiftsQuestionMarkSizeAndContent.Values[0]) { } }
            public class ShiftsTeam : Icon { public ShiftsTeam() : base("ShiftsTeam", IconVariant.Regular, ShiftsTeamSizeAndContent.Values[0]) { } }
            public class ShoppingBag : Icon { public ShoppingBag() : base("ShoppingBag", IconVariant.Regular, ShoppingBagSizeAndContent.Values[1]) { } }
            public class ShoppingBagArrowLeft : Icon { public ShoppingBagArrowLeft() : base("ShoppingBagArrowLeft", IconVariant.Regular, ShoppingBagArrowLeftSizeAndContent.Values[0]) { } }
            public class ShoppingBagDismiss : Icon { public ShoppingBagDismiss() : base("ShoppingBagDismiss", IconVariant.Regular, ShoppingBagDismissSizeAndContent.Values[0]) { } }
            public class ShoppingBagPause : Icon { public ShoppingBagPause() : base("ShoppingBagPause", IconVariant.Regular, ShoppingBagPauseSizeAndContent.Values[0]) { } }
            public class ShoppingBagPercent : Icon { public ShoppingBagPercent() : base("ShoppingBagPercent", IconVariant.Regular, ShoppingBagPercentSizeAndContent.Values[0]) { } }
            public class ShoppingBagPlay : Icon { public ShoppingBagPlay() : base("ShoppingBagPlay", IconVariant.Regular, ShoppingBagPlaySizeAndContent.Values[0]) { } }
            public class ShoppingBagTag : Icon { public ShoppingBagTag() : base("ShoppingBagTag", IconVariant.Regular, ShoppingBagTagSizeAndContent.Values[0]) { } }
            public class Shortpick : Icon { public Shortpick() : base("Shortpick", IconVariant.Regular, ShortpickSizeAndContent.Values[0]) { } }
            public class Showerhead : Icon { public Showerhead() : base("Showerhead", IconVariant.Regular, ShowerheadSizeAndContent.Values[0]) { } }
            public class SidebarSearchLtr : Icon { public SidebarSearchLtr() : base("SidebarSearchLtr", IconVariant.Regular, SidebarSearchLtrSizeAndContent.Values[0]) { } }
            public class SidebarSearchRtl : Icon { public SidebarSearchRtl() : base("SidebarSearchRtl", IconVariant.Regular, SidebarSearchRtlSizeAndContent.Values[0]) { } }
            public class Signature : Icon { public Signature() : base("Signature", IconVariant.Regular, SignatureSizeAndContent.Values[1]) { } }
            public class SignOut : Icon { public SignOut() : base("SignOut", IconVariant.Regular, SignOutSizeAndContent.Values[0]) { } }
            public class Sim : Icon { public Sim() : base("Sim", IconVariant.Regular, SimSizeAndContent.Values[1]) { } }
            public class SkipBack10 : Icon { public SkipBack10() : base("SkipBack10", IconVariant.Regular, SkipBack10SizeAndContent.Values[0]) { } }
            public class SkipForward10 : Icon { public SkipForward10() : base("SkipForward10", IconVariant.Regular, SkipForward10SizeAndContent.Values[0]) { } }
            public class SkipForward30 : Icon { public SkipForward30() : base("SkipForward30", IconVariant.Regular, SkipForward30SizeAndContent.Values[0]) { } }
            public class SkipForwardTab : Icon { public SkipForwardTab() : base("SkipForwardTab", IconVariant.Regular, SkipForwardTabSizeAndContent.Values[0]) { } }
            public class SlashForward : Icon { public SlashForward() : base("SlashForward", IconVariant.Regular, SlashForwardSizeAndContent.Values[2]) { } }
            public class Sleep : Icon { public Sleep() : base("Sleep", IconVariant.Regular, SleepSizeAndContent.Values[0]) { } }
            public class SlideAdd : Icon { public SlideAdd() : base("SlideAdd", IconVariant.Regular, SlideAddSizeAndContent.Values[1]) { } }
            public class SlideArrowRight : Icon { public SlideArrowRight() : base("SlideArrowRight", IconVariant.Regular, SlideArrowRightSizeAndContent.Values[0]) { } }
            public class SlideEraser : Icon { public SlideEraser() : base("SlideEraser", IconVariant.Regular, SlideEraserSizeAndContent.Values[1]) { } }
            public class SlideGrid : Icon { public SlideGrid() : base("SlideGrid", IconVariant.Regular, SlideGridSizeAndContent.Values[0]) { } }
            public class SlideHide : Icon { public SlideHide() : base("SlideHide", IconVariant.Regular, SlideHideSizeAndContent.Values[0]) { } }
            public class SlideLayout : Icon { public SlideLayout() : base("SlideLayout", IconVariant.Regular, SlideLayoutSizeAndContent.Values[0]) { } }
            public class SlideLink : Icon { public SlideLink() : base("SlideLink", IconVariant.Regular, SlideLinkSizeAndContent.Values[0]) { } }
            public class SlideMicrophone : Icon { public SlideMicrophone() : base("SlideMicrophone", IconVariant.Regular, SlideMicrophoneSizeAndContent.Values[0]) { } }
            public class SlideMultiple : Icon { public SlideMultiple() : base("SlideMultiple", IconVariant.Regular, SlideMultipleSizeAndContent.Values[0]) { } }
            public class SlideMultipleArrowRight : Icon { public SlideMultipleArrowRight() : base("SlideMultipleArrowRight", IconVariant.Regular, SlideMultipleArrowRightSizeAndContent.Values[0]) { } }
            public class SlideMultipleSearch : Icon { public SlideMultipleSearch() : base("SlideMultipleSearch", IconVariant.Regular, SlideMultipleSearchSizeAndContent.Values[0]) { } }
            public class SlideRecord : Icon { public SlideRecord() : base("SlideRecord", IconVariant.Regular, SlideRecordSizeAndContent.Values[1]) { } }
            public class SlideSearch : Icon { public SlideSearch() : base("SlideSearch", IconVariant.Regular, SlideSearchSizeAndContent.Values[1]) { } }
            public class SlideSettings : Icon { public SlideSettings() : base("SlideSettings", IconVariant.Regular, SlideSettingsSizeAndContent.Values[0]) { } }
            public class SlideSize : Icon { public SlideSize() : base("SlideSize", IconVariant.Regular, SlideSizeSizeAndContent.Values[0]) { } }
            public class SlideText : Icon { public SlideText() : base("SlideText", IconVariant.Regular, SlideTextSizeAndContent.Values[1]) { } }
            public class SlideTextEdit : Icon { public SlideTextEdit() : base("SlideTextEdit", IconVariant.Regular, SlideTextEditSizeAndContent.Values[1]) { } }
            public class SlideTextMultiple : Icon { public SlideTextMultiple() : base("SlideTextMultiple", IconVariant.Regular, SlideTextMultipleSizeAndContent.Values[1]) { } }
            public class SlideTextPerson : Icon { public SlideTextPerson() : base("SlideTextPerson", IconVariant.Regular, SlideTextPersonSizeAndContent.Values[1]) { } }
            public class SlideTextSparkle : Icon { public SlideTextSparkle() : base("SlideTextSparkle", IconVariant.Regular, SlideTextSparkleSizeAndContent.Values[1]) { } }
            public class SlideTransition : Icon { public SlideTransition() : base("SlideTransition", IconVariant.Regular, SlideTransitionSizeAndContent.Values[0]) { } }
            public class Smartwatch : Icon { public Smartwatch() : base("Smartwatch", IconVariant.Regular, SmartwatchSizeAndContent.Values[0]) { } }
            public class SmartwatchDot : Icon { public SmartwatchDot() : base("SmartwatchDot", IconVariant.Regular, SmartwatchDotSizeAndContent.Values[0]) { } }
            public class Snooze : Icon { public Snooze() : base("Snooze", IconVariant.Regular, SnoozeSizeAndContent.Values[1]) { } }
            public class SoundSource : Icon { public SoundSource() : base("SoundSource", IconVariant.Regular, SoundSourceSizeAndContent.Values[0]) { } }
            public class SoundWaveCircle : Icon { public SoundWaveCircle() : base("SoundWaveCircle", IconVariant.Regular, SoundWaveCircleSizeAndContent.Values[0]) { } }
            public class Space3d : Icon { public Space3d() : base("Space3d", IconVariant.Regular, Space3dSizeAndContent.Values[1]) { } }
            public class Spacebar : Icon { public Spacebar() : base("Spacebar", IconVariant.Regular, SpacebarSizeAndContent.Values[0]) { } }
            public class Sparkle : Icon { public Sparkle() : base("Sparkle", IconVariant.Regular, SparkleSizeAndContent.Values[1]) { } }
            public class SparkleCircle : Icon { public SparkleCircle() : base("SparkleCircle", IconVariant.Regular, SparkleCircleSizeAndContent.Values[1]) { } }
            public class Speaker0 : Icon { public Speaker0() : base("Speaker0", IconVariant.Regular, Speaker0SizeAndContent.Values[1]) { } }
            public class Speaker1 : Icon { public Speaker1() : base("Speaker1", IconVariant.Regular, Speaker1SizeAndContent.Values[1]) { } }
            public class Speaker2 : Icon { public Speaker2() : base("Speaker2", IconVariant.Regular, Speaker2SizeAndContent.Values[1]) { } }
            public class SpeakerBluetooth : Icon { public SpeakerBluetooth() : base("SpeakerBluetooth", IconVariant.Regular, SpeakerBluetoothSizeAndContent.Values[0]) { } }
            public class SpeakerEdit : Icon { public SpeakerEdit() : base("SpeakerEdit", IconVariant.Regular, SpeakerEditSizeAndContent.Values[1]) { } }
            public class SpeakerMute : Icon { public SpeakerMute() : base("SpeakerMute", IconVariant.Regular, SpeakerMuteSizeAndContent.Values[1]) { } }
            public class SpeakerOff : Icon { public SpeakerOff() : base("SpeakerOff", IconVariant.Regular, SpeakerOffSizeAndContent.Values[1]) { } }
            public class SpeakerSettings : Icon { public SpeakerSettings() : base("SpeakerSettings", IconVariant.Regular, SpeakerSettingsSizeAndContent.Values[0]) { } }
            public class SpeakerUsb : Icon { public SpeakerUsb() : base("SpeakerUsb", IconVariant.Regular, SpeakerUsbSizeAndContent.Values[0]) { } }
            public class SpinnerIos : Icon { public SpinnerIos() : base("SpinnerIos", IconVariant.Regular, SpinnerIosSizeAndContent.Values[1]) { } }
            public class SplitHint : Icon { public SplitHint() : base("SplitHint", IconVariant.Regular, SplitHintSizeAndContent.Values[0]) { } }
            public class SplitHorizontal : Icon { public SplitHorizontal() : base("SplitHorizontal", IconVariant.Regular, SplitHorizontalSizeAndContent.Values[2]) { } }
            public class SplitVertical : Icon { public SplitVertical() : base("SplitVertical", IconVariant.Regular, SplitVerticalSizeAndContent.Values[2]) { } }
            public class Sport : Icon { public Sport() : base("Sport", IconVariant.Regular, SportSizeAndContent.Values[1]) { } }
            public class SportAmericanFootball : Icon { public SportAmericanFootball() : base("SportAmericanFootball", IconVariant.Regular, SportAmericanFootballSizeAndContent.Values[0]) { } }
            public class SportBaseball : Icon { public SportBaseball() : base("SportBaseball", IconVariant.Regular, SportBaseballSizeAndContent.Values[0]) { } }
            public class SportBasketball : Icon { public SportBasketball() : base("SportBasketball", IconVariant.Regular, SportBasketballSizeAndContent.Values[0]) { } }
            public class SportHockey : Icon { public SportHockey() : base("SportHockey", IconVariant.Regular, SportHockeySizeAndContent.Values[0]) { } }
            public class SportSoccer : Icon { public SportSoccer() : base("SportSoccer", IconVariant.Regular, SportSoccerSizeAndContent.Values[1]) { } }
            public class Square : Icon { public Square() : base("Square", IconVariant.Regular, SquareSizeAndContent.Values[2]) { } }
            public class SquareAdd : Icon { public SquareAdd() : base("SquareAdd", IconVariant.Regular, SquareAddSizeAndContent.Values[1]) { } }
            public class SquareArrowForward : Icon { public SquareArrowForward() : base("SquareArrowForward", IconVariant.Regular, SquareArrowForwardSizeAndContent.Values[1]) { } }
            public class SquareDismiss : Icon { public SquareDismiss() : base("SquareDismiss", IconVariant.Regular, SquareDismissSizeAndContent.Values[1]) { } }
            public class SquareEraser : Icon { public SquareEraser() : base("SquareEraser", IconVariant.Regular, SquareEraserSizeAndContent.Values[0]) { } }
            public class SquareHint : Icon { public SquareHint() : base("SquareHint", IconVariant.Regular, SquareHintSizeAndContent.Values[1]) { } }
            public class SquareHintApps : Icon { public SquareHintApps() : base("SquareHintApps", IconVariant.Regular, SquareHintAppsSizeAndContent.Values[0]) { } }
            public class SquareHintArrowBack : Icon { public SquareHintArrowBack() : base("SquareHintArrowBack", IconVariant.Regular, SquareHintArrowBackSizeAndContent.Values[1]) { } }
            public class SquareHintHexagon : Icon { public SquareHintHexagon() : base("SquareHintHexagon", IconVariant.Regular, SquareHintHexagonSizeAndContent.Values[2]) { } }
            public class SquareHintSparkles : Icon { public SquareHintSparkles() : base("SquareHintSparkles", IconVariant.Regular, SquareHintSparklesSizeAndContent.Values[1]) { } }
            public class SquareMultiple : Icon { public SquareMultiple() : base("SquareMultiple", IconVariant.Regular, SquareMultipleSizeAndContent.Values[1]) { } }
            public class SquareShadow : Icon { public SquareShadow() : base("SquareShadow", IconVariant.Regular, SquareShadowSizeAndContent.Values[1]) { } }
            public class SquaresNested : Icon { public SquaresNested() : base("SquaresNested", IconVariant.Regular, SquaresNestedSizeAndContent.Values[0]) { } }
            public class Stack : Icon { public Stack() : base("Stack", IconVariant.Regular, StackSizeAndContent.Values[1]) { } }
            public class StackAdd : Icon { public StackAdd() : base("StackAdd", IconVariant.Regular, StackAddSizeAndContent.Values[0]) { } }
            public class StackArrowForward : Icon { public StackArrowForward() : base("StackArrowForward", IconVariant.Regular, StackArrowForwardSizeAndContent.Values[0]) { } }
            public class StackStar : Icon { public StackStar() : base("StackStar", IconVariant.Regular, StackStarSizeAndContent.Values[1]) { } }
            public class StackVertical : Icon { public StackVertical() : base("StackVertical", IconVariant.Regular, StackVerticalSizeAndContent.Values[0]) { } }
            public class Star : Icon { public Star() : base("Star", IconVariant.Regular, StarSizeAndContent.Values[2]) { } }
            public class StarAdd : Icon { public StarAdd() : base("StarAdd", IconVariant.Regular, StarAddSizeAndContent.Values[1]) { } }
            public class StarArrowBack : Icon { public StarArrowBack() : base("StarArrowBack", IconVariant.Regular, StarArrowBackSizeAndContent.Values[1]) { } }
            public class StarArrowRightEnd : Icon { public StarArrowRightEnd() : base("StarArrowRightEnd", IconVariant.Regular, StarArrowRightEndSizeAndContent.Values[0]) { } }
            public class StarArrowRightStart : Icon { public StarArrowRightStart() : base("StarArrowRightStart", IconVariant.Regular, StarArrowRightStartSizeAndContent.Values[0]) { } }
            public class StarCheckmark : Icon { public StarCheckmark() : base("StarCheckmark", IconVariant.Regular, StarCheckmarkSizeAndContent.Values[1]) { } }
            public class StarDismiss : Icon { public StarDismiss() : base("StarDismiss", IconVariant.Regular, StarDismissSizeAndContent.Values[1]) { } }
            public class StarEdit : Icon { public StarEdit() : base("StarEdit", IconVariant.Regular, StarEditSizeAndContent.Values[0]) { } }
            public class StarEmphasis : Icon { public StarEmphasis() : base("StarEmphasis", IconVariant.Regular, StarEmphasisSizeAndContent.Values[1]) { } }
            public class StarHalf : Icon { public StarHalf() : base("StarHalf", IconVariant.Regular, StarHalfSizeAndContent.Values[2]) { } }
            public class StarLineHorizontal3 : Icon { public StarLineHorizontal3() : base("StarLineHorizontal3", IconVariant.Regular, StarLineHorizontal3SizeAndContent.Values[1]) { } }
            public class StarOff : Icon { public StarOff() : base("StarOff", IconVariant.Regular, StarOffSizeAndContent.Values[2]) { } }
            public class StarOneQuarter : Icon { public StarOneQuarter() : base("StarOneQuarter", IconVariant.Regular, StarOneQuarterSizeAndContent.Values[2]) { } }
            public class StarProhibited : Icon { public StarProhibited() : base("StarProhibited", IconVariant.Regular, StarProhibitedSizeAndContent.Values[1]) { } }
            public class StarSettings : Icon { public StarSettings() : base("StarSettings", IconVariant.Regular, StarSettingsSizeAndContent.Values[0]) { } }
            public class StarThreeQuarter : Icon { public StarThreeQuarter() : base("StarThreeQuarter", IconVariant.Regular, StarThreeQuarterSizeAndContent.Values[2]) { } }
            public class Status : Icon { public Status() : base("Status", IconVariant.Regular, StatusSizeAndContent.Values[2]) { } }
            public class Step : Icon { public Step() : base("Step", IconVariant.Regular, StepSizeAndContent.Values[1]) { } }
            public class Steps : Icon { public Steps() : base("Steps", IconVariant.Regular, StepsSizeAndContent.Values[1]) { } }
            public class Stethoscope : Icon { public Stethoscope() : base("Stethoscope", IconVariant.Regular, StethoscopeSizeAndContent.Values[0]) { } }
            public class Sticker : Icon { public Sticker() : base("Sticker", IconVariant.Regular, StickerSizeAndContent.Values[1]) { } }
            public class StickerAdd : Icon { public StickerAdd() : base("StickerAdd", IconVariant.Regular, StickerAddSizeAndContent.Values[0]) { } }
            public class Stop : Icon { public Stop() : base("Stop", IconVariant.Regular, StopSizeAndContent.Values[1]) { } }
            public class Storage : Icon { public Storage() : base("Storage", IconVariant.Regular, StorageSizeAndContent.Values[0]) { } }
            public class StoreMicrosoft : Icon { public StoreMicrosoft() : base("StoreMicrosoft", IconVariant.Regular, StoreMicrosoftSizeAndContent.Values[1]) { } }
            public class Stream : Icon { public Stream() : base("Stream", IconVariant.Regular, StreamSizeAndContent.Values[0]) { } }
            public class StreamInput : Icon { public StreamInput() : base("StreamInput", IconVariant.Regular, StreamInputSizeAndContent.Values[0]) { } }
            public class StreamInputOutput : Icon { public StreamInputOutput() : base("StreamInputOutput", IconVariant.Regular, StreamInputOutputSizeAndContent.Values[0]) { } }
            public class StreamOutput : Icon { public StreamOutput() : base("StreamOutput", IconVariant.Regular, StreamOutputSizeAndContent.Values[0]) { } }
            public class StyleGuide : Icon { public StyleGuide() : base("StyleGuide", IconVariant.Regular, StyleGuideSizeAndContent.Values[0]) { } }
            public class SubGrid : Icon { public SubGrid() : base("SubGrid", IconVariant.Regular, SubGridSizeAndContent.Values[0]) { } }
            public class Subtitles : Icon { public Subtitles() : base("Subtitles", IconVariant.Regular, SubtitlesSizeAndContent.Values[1]) { } }
            public class Subtract : Icon { public Subtract() : base("Subtract", IconVariant.Regular, SubtractSizeAndContent.Values[2]) { } }
            public class SubtractCircle : Icon { public SubtractCircle() : base("SubtractCircle", IconVariant.Regular, SubtractCircleSizeAndContent.Values[2]) { } }
            public class SubtractCircleArrowBack : Icon { public SubtractCircleArrowBack() : base("SubtractCircleArrowBack", IconVariant.Regular, SubtractCircleArrowBackSizeAndContent.Values[1]) { } }
            public class SubtractCircleArrowForward : Icon { public SubtractCircleArrowForward() : base("SubtractCircleArrowForward", IconVariant.Regular, SubtractCircleArrowForwardSizeAndContent.Values[1]) { } }
            public class SubtractParentheses : Icon { public SubtractParentheses() : base("SubtractParentheses", IconVariant.Regular, SubtractParenthesesSizeAndContent.Values[1]) { } }
            public class SubtractSquare : Icon { public SubtractSquare() : base("SubtractSquare", IconVariant.Regular, SubtractSquareSizeAndContent.Values[1]) { } }
            public class SubtractSquareMultiple : Icon { public SubtractSquareMultiple() : base("SubtractSquareMultiple", IconVariant.Regular, SubtractSquareMultipleSizeAndContent.Values[1]) { } }
            public class SurfaceEarbuds : Icon { public SurfaceEarbuds() : base("SurfaceEarbuds", IconVariant.Regular, SurfaceEarbudsSizeAndContent.Values[0]) { } }
            public class SurfaceHub : Icon { public SurfaceHub() : base("SurfaceHub", IconVariant.Regular, SurfaceHubSizeAndContent.Values[0]) { } }
            public class SwimmingPool : Icon { public SwimmingPool() : base("SwimmingPool", IconVariant.Regular, SwimmingPoolSizeAndContent.Values[0]) { } }
            public class SwipeDown : Icon { public SwipeDown() : base("SwipeDown", IconVariant.Regular, SwipeDownSizeAndContent.Values[0]) { } }
            public class SwipeRight : Icon { public SwipeRight() : base("SwipeRight", IconVariant.Regular, SwipeRightSizeAndContent.Values[0]) { } }
            public class SwipeUp : Icon { public SwipeUp() : base("SwipeUp", IconVariant.Regular, SwipeUpSizeAndContent.Values[0]) { } }
            public class Symbols : Icon { public Symbols() : base("Symbols", IconVariant.Regular, SymbolsSizeAndContent.Values[1]) { } }
            public class SyncOff : Icon { public SyncOff() : base("SyncOff", IconVariant.Regular, SyncOffSizeAndContent.Values[1]) { } }
            public class Syringe : Icon { public Syringe() : base("Syringe", IconVariant.Regular, SyringeSizeAndContent.Values[0]) { } }
            public class System : Icon { public System() : base("System", IconVariant.Regular, SystemSizeAndContent.Values[0]) { } }
            public class Tab : Icon { public Tab() : base("Tab", IconVariant.Regular, TabSizeAndContent.Values[1]) { } }
            public class TabAdd : Icon { public TabAdd() : base("TabAdd", IconVariant.Regular, TabAddSizeAndContent.Values[0]) { } }
            public class TabArrowLeft : Icon { public TabArrowLeft() : base("TabArrowLeft", IconVariant.Regular, TabArrowLeftSizeAndContent.Values[0]) { } }
            public class TabDesktop : Icon { public TabDesktop() : base("TabDesktop", IconVariant.Regular, TabDesktopSizeAndContent.Values[1]) { } }
            public class TabDesktopArrowClockwise : Icon { public TabDesktopArrowClockwise() : base("TabDesktopArrowClockwise", IconVariant.Regular, TabDesktopArrowClockwiseSizeAndContent.Values[1]) { } }
            public class TabDesktopArrowLeft : Icon { public TabDesktopArrowLeft() : base("TabDesktopArrowLeft", IconVariant.Regular, TabDesktopArrowLeftSizeAndContent.Values[0]) { } }
            public class TabDesktopBottom : Icon { public TabDesktopBottom() : base("TabDesktopBottom", IconVariant.Regular, TabDesktopBottomSizeAndContent.Values[0]) { } }
            public class TabDesktopClock : Icon { public TabDesktopClock() : base("TabDesktopClock", IconVariant.Regular, TabDesktopClockSizeAndContent.Values[0]) { } }
            public class TabDesktopCopy : Icon { public TabDesktopCopy() : base("TabDesktopCopy", IconVariant.Regular, TabDesktopCopySizeAndContent.Values[0]) { } }
            public class TabDesktopImage : Icon { public TabDesktopImage() : base("TabDesktopImage", IconVariant.Regular, TabDesktopImageSizeAndContent.Values[1]) { } }
            public class TabDesktopLink : Icon { public TabDesktopLink() : base("TabDesktopLink", IconVariant.Regular, TabDesktopLinkSizeAndContent.Values[1]) { } }
            public class TabDesktopMultiple : Icon { public TabDesktopMultiple() : base("TabDesktopMultiple", IconVariant.Regular, TabDesktopMultipleSizeAndContent.Values[1]) { } }
            public class TabDesktopMultipleAdd : Icon { public TabDesktopMultipleAdd() : base("TabDesktopMultipleAdd", IconVariant.Regular, TabDesktopMultipleAddSizeAndContent.Values[1]) { } }
            public class TabDesktopMultipleBottom : Icon { public TabDesktopMultipleBottom() : base("TabDesktopMultipleBottom", IconVariant.Regular, TabDesktopMultipleBottomSizeAndContent.Values[0]) { } }
            public class TabDesktopNewPage : Icon { public TabDesktopNewPage() : base("TabDesktopNewPage", IconVariant.Regular, TabDesktopNewPageSizeAndContent.Values[0]) { } }
            public class TabInPrivate : Icon { public TabInPrivate() : base("TabInPrivate", IconVariant.Regular, TabInPrivateSizeAndContent.Values[1]) { } }
            public class TabInprivateAccount : Icon { public TabInprivateAccount() : base("TabInprivateAccount", IconVariant.Regular, TabInprivateAccountSizeAndContent.Values[0]) { } }
            public class Table : Icon { public Table() : base("Table", IconVariant.Regular, TableSizeAndContent.Values[1]) { } }
            public class TableAdd : Icon { public TableAdd() : base("TableAdd", IconVariant.Regular, TableAddSizeAndContent.Values[1]) { } }
            public class TableArrowUp : Icon { public TableArrowUp() : base("TableArrowUp", IconVariant.Regular, TableArrowUpSizeAndContent.Values[0]) { } }
            public class TableBottomRow : Icon { public TableBottomRow() : base("TableBottomRow", IconVariant.Regular, TableBottomRowSizeAndContent.Values[1]) { } }
            public class TableCalculator : Icon { public TableCalculator() : base("TableCalculator", IconVariant.Regular, TableCalculatorSizeAndContent.Values[1]) { } }
            public class TableCellEdit : Icon { public TableCellEdit() : base("TableCellEdit", IconVariant.Regular, TableCellEditSizeAndContent.Values[1]) { } }
            public class TableCellsMerge : Icon { public TableCellsMerge() : base("TableCellsMerge", IconVariant.Regular, TableCellsMergeSizeAndContent.Values[1]) { } }
            public class TableCellsSplit : Icon { public TableCellsSplit() : base("TableCellsSplit", IconVariant.Regular, TableCellsSplitSizeAndContent.Values[1]) { } }
            public class TableChecker : Icon { public TableChecker() : base("TableChecker", IconVariant.Regular, TableCheckerSizeAndContent.Values[0]) { } }
            public class TableColumnTopBottom : Icon { public TableColumnTopBottom() : base("TableColumnTopBottom", IconVariant.Regular, TableColumnTopBottomSizeAndContent.Values[0]) { } }
            public class TableCopy : Icon { public TableCopy() : base("TableCopy", IconVariant.Regular, TableCopySizeAndContent.Values[0]) { } }
            public class TableDeleteColumn : Icon { public TableDeleteColumn() : base("TableDeleteColumn", IconVariant.Regular, TableDeleteColumnSizeAndContent.Values[1]) { } }
            public class TableDeleteRow : Icon { public TableDeleteRow() : base("TableDeleteRow", IconVariant.Regular, TableDeleteRowSizeAndContent.Values[1]) { } }
            public class TableDismiss : Icon { public TableDismiss() : base("TableDismiss", IconVariant.Regular, TableDismissSizeAndContent.Values[1]) { } }
            public class TableEdit : Icon { public TableEdit() : base("TableEdit", IconVariant.Regular, TableEditSizeAndContent.Values[1]) { } }
            public class TableFreezeColumn : Icon { public TableFreezeColumn() : base("TableFreezeColumn", IconVariant.Regular, TableFreezeColumnSizeAndContent.Values[1]) { } }
            public class TableFreezeColumnAndRow : Icon { public TableFreezeColumnAndRow() : base("TableFreezeColumnAndRow", IconVariant.Regular, TableFreezeColumnAndRowSizeAndContent.Values[1]) { } }
            public class TableFreezeRow : Icon { public TableFreezeRow() : base("TableFreezeRow", IconVariant.Regular, TableFreezeRowSizeAndContent.Values[1]) { } }
            public class TableImage : Icon { public TableImage() : base("TableImage", IconVariant.Regular, TableImageSizeAndContent.Values[0]) { } }
            public class TableInsertColumn : Icon { public TableInsertColumn() : base("TableInsertColumn", IconVariant.Regular, TableInsertColumnSizeAndContent.Values[1]) { } }
            public class TableInsertRow : Icon { public TableInsertRow() : base("TableInsertRow", IconVariant.Regular, TableInsertRowSizeAndContent.Values[1]) { } }
            public class TableLightning : Icon { public TableLightning() : base("TableLightning", IconVariant.Regular, TableLightningSizeAndContent.Values[1]) { } }
            public class TableLink : Icon { public TableLink() : base("TableLink", IconVariant.Regular, TableLinkSizeAndContent.Values[1]) { } }
            public class TableLock : Icon { public TableLock() : base("TableLock", IconVariant.Regular, TableLockSizeAndContent.Values[1]) { } }
            public class TableMoveAbove : Icon { public TableMoveAbove() : base("TableMoveAbove", IconVariant.Regular, TableMoveAboveSizeAndContent.Values[1]) { } }
            public class TableMoveBelow : Icon { public TableMoveBelow() : base("TableMoveBelow", IconVariant.Regular, TableMoveBelowSizeAndContent.Values[1]) { } }
            public class TableMoveLeft : Icon { public TableMoveLeft() : base("TableMoveLeft", IconVariant.Regular, TableMoveLeftSizeAndContent.Values[1]) { } }
            public class TableMoveRight : Icon { public TableMoveRight() : base("TableMoveRight", IconVariant.Regular, TableMoveRightSizeAndContent.Values[1]) { } }
            public class TableMultiple : Icon { public TableMultiple() : base("TableMultiple", IconVariant.Regular, TableMultipleSizeAndContent.Values[0]) { } }
            public class TableOffset : Icon { public TableOffset() : base("TableOffset", IconVariant.Regular, TableOffsetSizeAndContent.Values[0]) { } }
            public class TableOffsetAdd : Icon { public TableOffsetAdd() : base("TableOffsetAdd", IconVariant.Regular, TableOffsetAddSizeAndContent.Values[0]) { } }
            public class TableOffsetLessThanOrEqualTo : Icon { public TableOffsetLessThanOrEqualTo() : base("TableOffsetLessThanOrEqualTo", IconVariant.Regular, TableOffsetLessThanOrEqualToSizeAndContent.Values[0]) { } }
            public class TableOffsetSettings : Icon { public TableOffsetSettings() : base("TableOffsetSettings", IconVariant.Regular, TableOffsetSettingsSizeAndContent.Values[0]) { } }
            public class TableResizeColumn : Icon { public TableResizeColumn() : base("TableResizeColumn", IconVariant.Regular, TableResizeColumnSizeAndContent.Values[1]) { } }
            public class TableResizeRow : Icon { public TableResizeRow() : base("TableResizeRow", IconVariant.Regular, TableResizeRowSizeAndContent.Values[1]) { } }
            public class TableSearch : Icon { public TableSearch() : base("TableSearch", IconVariant.Regular, TableSearchSizeAndContent.Values[0]) { } }
            public class TableSettings : Icon { public TableSettings() : base("TableSettings", IconVariant.Regular, TableSettingsSizeAndContent.Values[1]) { } }
            public class TableSimple : Icon { public TableSimple() : base("TableSimple", IconVariant.Regular, TableSimpleSizeAndContent.Values[1]) { } }
            public class TableSimpleCheckmark : Icon { public TableSimpleCheckmark() : base("TableSimpleCheckmark", IconVariant.Regular, TableSimpleCheckmarkSizeAndContent.Values[1]) { } }
            public class TableSimpleExclude : Icon { public TableSimpleExclude() : base("TableSimpleExclude", IconVariant.Regular, TableSimpleExcludeSizeAndContent.Values[1]) { } }
            public class TableSimpleInclude : Icon { public TableSimpleInclude() : base("TableSimpleInclude", IconVariant.Regular, TableSimpleIncludeSizeAndContent.Values[1]) { } }
            public class TableSimpleMultiple : Icon { public TableSimpleMultiple() : base("TableSimpleMultiple", IconVariant.Regular, TableSimpleMultipleSizeAndContent.Values[0]) { } }
            public class TableSplit : Icon { public TableSplit() : base("TableSplit", IconVariant.Regular, TableSplitSizeAndContent.Values[0]) { } }
            public class TableStackAbove : Icon { public TableStackAbove() : base("TableStackAbove", IconVariant.Regular, TableStackAboveSizeAndContent.Values[1]) { } }
            public class TableStackBelow : Icon { public TableStackBelow() : base("TableStackBelow", IconVariant.Regular, TableStackBelowSizeAndContent.Values[1]) { } }
            public class TableStackLeft : Icon { public TableStackLeft() : base("TableStackLeft", IconVariant.Regular, TableStackLeftSizeAndContent.Values[1]) { } }
            public class TableStackRight : Icon { public TableStackRight() : base("TableStackRight", IconVariant.Regular, TableStackRightSizeAndContent.Values[1]) { } }
            public class TableSwitch : Icon { public TableSwitch() : base("TableSwitch", IconVariant.Regular, TableSwitchSizeAndContent.Values[1]) { } }
            public class Tablet : Icon { public Tablet() : base("Tablet", IconVariant.Regular, TabletSizeAndContent.Values[2]) { } }
            public class TabletLaptop : Icon { public TabletLaptop() : base("TabletLaptop", IconVariant.Regular, TabletLaptopSizeAndContent.Values[0]) { } }
            public class TabletSpeaker : Icon { public TabletSpeaker() : base("TabletSpeaker", IconVariant.Regular, TabletSpeakerSizeAndContent.Values[0]) { } }
            public class TabProhibited : Icon { public TabProhibited() : base("TabProhibited", IconVariant.Regular, TabProhibitedSizeAndContent.Values[0]) { } }
            public class Tabs : Icon { public Tabs() : base("Tabs", IconVariant.Regular, TabsSizeAndContent.Values[1]) { } }
            public class TabShieldDismiss : Icon { public TabShieldDismiss() : base("TabShieldDismiss", IconVariant.Regular, TabShieldDismissSizeAndContent.Values[0]) { } }
            public class Tag : Icon { public Tag() : base("Tag", IconVariant.Regular, TagSizeAndContent.Values[1]) { } }
            public class TagCircle : Icon { public TagCircle() : base("TagCircle", IconVariant.Regular, TagCircleSizeAndContent.Values[0]) { } }
            public class TagDismiss : Icon { public TagDismiss() : base("TagDismiss", IconVariant.Regular, TagDismissSizeAndContent.Values[1]) { } }
            public class TagError : Icon { public TagError() : base("TagError", IconVariant.Regular, TagErrorSizeAndContent.Values[1]) { } }
            public class TagLock : Icon { public TagLock() : base("TagLock", IconVariant.Regular, TagLockSizeAndContent.Values[1]) { } }
            public class TagMultiple : Icon { public TagMultiple() : base("TagMultiple", IconVariant.Regular, TagMultipleSizeAndContent.Values[1]) { } }
            public class TagOff : Icon { public TagOff() : base("TagOff", IconVariant.Regular, TagOffSizeAndContent.Values[0]) { } }
            public class TagQuestionMark : Icon { public TagQuestionMark() : base("TagQuestionMark", IconVariant.Regular, TagQuestionMarkSizeAndContent.Values[1]) { } }
            public class TagReset : Icon { public TagReset() : base("TagReset", IconVariant.Regular, TagResetSizeAndContent.Values[0]) { } }
            public class TagSearch : Icon { public TagSearch() : base("TagSearch", IconVariant.Regular, TagSearchSizeAndContent.Values[0]) { } }
            public class TapDouble : Icon { public TapDouble() : base("TapDouble", IconVariant.Regular, TapDoubleSizeAndContent.Values[0]) { } }
            public class TapSingle : Icon { public TapSingle() : base("TapSingle", IconVariant.Regular, TapSingleSizeAndContent.Values[0]) { } }
            public class Target : Icon { public Target() : base("Target", IconVariant.Regular, TargetSizeAndContent.Values[1]) { } }
            public class TargetAdd : Icon { public TargetAdd() : base("TargetAdd", IconVariant.Regular, TargetAddSizeAndContent.Values[0]) { } }
            public class TargetArrow : Icon { public TargetArrow() : base("TargetArrow", IconVariant.Regular, TargetArrowSizeAndContent.Values[1]) { } }
            public class TargetDismiss : Icon { public TargetDismiss() : base("TargetDismiss", IconVariant.Regular, TargetDismissSizeAndContent.Values[0]) { } }
            public class TargetEdit : Icon { public TargetEdit() : base("TargetEdit", IconVariant.Regular, TargetEditSizeAndContent.Values[1]) { } }
            public class TaskListAdd : Icon { public TaskListAdd() : base("TaskListAdd", IconVariant.Regular, TaskListAddSizeAndContent.Values[0]) { } }
            public class TaskListLtr : Icon { public TaskListLtr() : base("TaskListLtr", IconVariant.Regular, TaskListLtrSizeAndContent.Values[0]) { } }
            public class TaskListRtl : Icon { public TaskListRtl() : base("TaskListRtl", IconVariant.Regular, TaskListRtlSizeAndContent.Values[0]) { } }
            public class TaskListSquareAdd : Icon { public TaskListSquareAdd() : base("TaskListSquareAdd", IconVariant.Regular, TaskListSquareAddSizeAndContent.Values[0]) { } }
            public class TaskListSquareDatabase : Icon { public TaskListSquareDatabase() : base("TaskListSquareDatabase", IconVariant.Regular, TaskListSquareDatabaseSizeAndContent.Values[0]) { } }
            public class TaskListSquareLtr : Icon { public TaskListSquareLtr() : base("TaskListSquareLtr", IconVariant.Regular, TaskListSquareLtrSizeAndContent.Values[1]) { } }
            public class TaskListSquarePerson : Icon { public TaskListSquarePerson() : base("TaskListSquarePerson", IconVariant.Regular, TaskListSquarePersonSizeAndContent.Values[0]) { } }
            public class TaskListSquareRtl : Icon { public TaskListSquareRtl() : base("TaskListSquareRtl", IconVariant.Regular, TaskListSquareRtlSizeAndContent.Values[1]) { } }
            public class TaskListSquareSettings : Icon { public TaskListSquareSettings() : base("TaskListSquareSettings", IconVariant.Regular, TaskListSquareSettingsSizeAndContent.Values[0]) { } }
            public class TasksApp : Icon { public TasksApp() : base("TasksApp", IconVariant.Regular, TasksAppSizeAndContent.Values[0]) { } }
            public class TeardropBottomRight : Icon { public TeardropBottomRight() : base("TeardropBottomRight", IconVariant.Regular, TeardropBottomRightSizeAndContent.Values[1]) { } }
            public class Teddy : Icon { public Teddy() : base("Teddy", IconVariant.Regular, TeddySizeAndContent.Values[0]) { } }
            public class Temperature : Icon { public Temperature() : base("Temperature", IconVariant.Regular, TemperatureSizeAndContent.Values[1]) { } }
            public class Tent : Icon { public Tent() : base("Tent", IconVariant.Regular, TentSizeAndContent.Values[2]) { } }
            public class TetrisApp : Icon { public TetrisApp() : base("TetrisApp", IconVariant.Regular, TetrisAppSizeAndContent.Values[1]) { } }
            public class TextAdd : Icon { public TextAdd() : base("TextAdd", IconVariant.Regular, TextAddSizeAndContent.Values[0]) { } }
            public class TextAddSpaceAfter : Icon { public TextAddSpaceAfter() : base("TextAddSpaceAfter", IconVariant.Regular, TextAddSpaceAfterSizeAndContent.Values[0]) { } }
            public class TextAddSpaceBefore : Icon { public TextAddSpaceBefore() : base("TextAddSpaceBefore", IconVariant.Regular, TextAddSpaceBeforeSizeAndContent.Values[0]) { } }
            public class TextAddT : Icon { public TextAddT() : base("TextAddT", IconVariant.Regular, TextAddTSizeAndContent.Values[0]) { } }
            public class TextAlignCenter : Icon { public TextAlignCenter() : base("TextAlignCenter", IconVariant.Regular, TextAlignCenterSizeAndContent.Values[1]) { } }
            public class TextAlignCenterRotate270 : Icon { public TextAlignCenterRotate270() : base("TextAlignCenterRotate270", IconVariant.Regular, TextAlignCenterRotate270SizeAndContent.Values[1]) { } }
            public class TextAlignCenterRotate90 : Icon { public TextAlignCenterRotate90() : base("TextAlignCenterRotate90", IconVariant.Regular, TextAlignCenterRotate90SizeAndContent.Values[1]) { } }
            public class TextAlignDistributed : Icon { public TextAlignDistributed() : base("TextAlignDistributed", IconVariant.Regular, TextAlignDistributedSizeAndContent.Values[0]) { } }
            public class TextAlignDistributedEvenly : Icon { public TextAlignDistributedEvenly() : base("TextAlignDistributedEvenly", IconVariant.Regular, TextAlignDistributedEvenlySizeAndContent.Values[0]) { } }
            public class TextAlignDistributedVertical : Icon { public TextAlignDistributedVertical() : base("TextAlignDistributedVertical", IconVariant.Regular, TextAlignDistributedVerticalSizeAndContent.Values[0]) { } }
            public class TextAlignJustify : Icon { public TextAlignJustify() : base("TextAlignJustify", IconVariant.Regular, TextAlignJustifySizeAndContent.Values[0]) { } }
            public class TextAlignJustifyLow : Icon { public TextAlignJustifyLow() : base("TextAlignJustifyLow", IconVariant.Regular, TextAlignJustifyLowSizeAndContent.Values[0]) { } }
            public class TextAlignJustifyLow90 : Icon { public TextAlignJustifyLow90() : base("TextAlignJustifyLow90", IconVariant.Regular, TextAlignJustifyLow90SizeAndContent.Values[0]) { } }
            public class TextAlignJustifyLowRotate270 : Icon { public TextAlignJustifyLowRotate270() : base("TextAlignJustifyLowRotate270", IconVariant.Regular, TextAlignJustifyLowRotate270SizeAndContent.Values[0]) { } }
            public class TextAlignJustifyLowRotate90 : Icon { public TextAlignJustifyLowRotate90() : base("TextAlignJustifyLowRotate90", IconVariant.Regular, TextAlignJustifyLowRotate90SizeAndContent.Values[0]) { } }
            public class TextAlignJustifyRotate270 : Icon { public TextAlignJustifyRotate270() : base("TextAlignJustifyRotate270", IconVariant.Regular, TextAlignJustifyRotate270SizeAndContent.Values[0]) { } }
            public class TextAlignJustifyRotate90 : Icon { public TextAlignJustifyRotate90() : base("TextAlignJustifyRotate90", IconVariant.Regular, TextAlignJustifyRotate90SizeAndContent.Values[0]) { } }
            public class TextAlignLeft : Icon { public TextAlignLeft() : base("TextAlignLeft", IconVariant.Regular, TextAlignLeftSizeAndContent.Values[1]) { } }
            public class TextAlignLeftRotate270 : Icon { public TextAlignLeftRotate270() : base("TextAlignLeftRotate270", IconVariant.Regular, TextAlignLeftRotate270SizeAndContent.Values[1]) { } }
            public class TextAlignLeftRotate90 : Icon { public TextAlignLeftRotate90() : base("TextAlignLeftRotate90", IconVariant.Regular, TextAlignLeftRotate90SizeAndContent.Values[1]) { } }
            public class TextAlignRight : Icon { public TextAlignRight() : base("TextAlignRight", IconVariant.Regular, TextAlignRightSizeAndContent.Values[1]) { } }
            public class TextAlignRightRotate270 : Icon { public TextAlignRightRotate270() : base("TextAlignRightRotate270", IconVariant.Regular, TextAlignRightRotate270SizeAndContent.Values[1]) { } }
            public class TextAlignRightRotate90 : Icon { public TextAlignRightRotate90() : base("TextAlignRightRotate90", IconVariant.Regular, TextAlignRightRotate90SizeAndContent.Values[1]) { } }
            public class TextArrowDownRightColumn : Icon { public TextArrowDownRightColumn() : base("TextArrowDownRightColumn", IconVariant.Regular, TextArrowDownRightColumnSizeAndContent.Values[1]) { } }
            public class TextAsterisk : Icon { public TextAsterisk() : base("TextAsterisk", IconVariant.Regular, TextAsteriskSizeAndContent.Values[1]) { } }
            public class TextBaseline : Icon { public TextBaseline() : base("TextBaseline", IconVariant.Regular, TextBaselineSizeAndContent.Values[0]) { } }
            public class TextBold : Icon { public TextBold() : base("TextBold", IconVariant.Regular, TextBoldSizeAndContent.Values[1]) { } }
            public class TextBoldBg : Icon { public TextBoldBg() : base("TextBoldBg", IconVariant.Regular, TextBoldBgSizeAndContent.Values[1]) { } }
            public class TextBoldCa : Icon { public TextBoldCa() : base("TextBoldCa", IconVariant.Regular, TextBoldCaSizeAndContent.Values[1]) { } }
            public class TextBoldDa : Icon { public TextBoldDa() : base("TextBoldDa", IconVariant.Regular, TextBoldDaSizeAndContent.Values[1]) { } }
            public class TextBoldDe : Icon { public TextBoldDe() : base("TextBoldDe", IconVariant.Regular, TextBoldDeSizeAndContent.Values[1]) { } }
            public class TextBoldEn : Icon { public TextBoldEn() : base("TextBoldEn", IconVariant.Regular, TextBoldEnSizeAndContent.Values[1]) { } }
            public class TextBoldEs : Icon { public TextBoldEs() : base("TextBoldEs", IconVariant.Regular, TextBoldEsSizeAndContent.Values[1]) { } }
            public class TextBoldEt : Icon { public TextBoldEt() : base("TextBoldEt", IconVariant.Regular, TextBoldEtSizeAndContent.Values[1]) { } }
            public class TextBoldFr : Icon { public TextBoldFr() : base("TextBoldFr", IconVariant.Regular, TextBoldFrSizeAndContent.Values[1]) { } }
            public class TextBoldGl : Icon { public TextBoldGl() : base("TextBoldGl", IconVariant.Regular, TextBoldGlSizeAndContent.Values[1]) { } }
            public class TextBoldHu : Icon { public TextBoldHu() : base("TextBoldHu", IconVariant.Regular, TextBoldHuSizeAndContent.Values[1]) { } }
            public class TextBoldIt : Icon { public TextBoldIt() : base("TextBoldIt", IconVariant.Regular, TextBoldItSizeAndContent.Values[1]) { } }
            public class TextBoldKk : Icon { public TextBoldKk() : base("TextBoldKk", IconVariant.Regular, TextBoldKkSizeAndContent.Values[1]) { } }
            public class TextBoldKo : Icon { public TextBoldKo() : base("TextBoldKo", IconVariant.Regular, TextBoldKoSizeAndContent.Values[1]) { } }
            public class TextBoldLt : Icon { public TextBoldLt() : base("TextBoldLt", IconVariant.Regular, TextBoldLtSizeAndContent.Values[1]) { } }
            public class TextBoldLv : Icon { public TextBoldLv() : base("TextBoldLv", IconVariant.Regular, TextBoldLvSizeAndContent.Values[1]) { } }
            public class TextBoldMs : Icon { public TextBoldMs() : base("TextBoldMs", IconVariant.Regular, TextBoldMsSizeAndContent.Values[1]) { } }
            public class TextBoldNo : Icon { public TextBoldNo() : base("TextBoldNo", IconVariant.Regular, TextBoldNoSizeAndContent.Values[1]) { } }
            public class TextBoldPt : Icon { public TextBoldPt() : base("TextBoldPt", IconVariant.Regular, TextBoldPtSizeAndContent.Values[1]) { } }
            public class TextBoldRu : Icon { public TextBoldRu() : base("TextBoldRu", IconVariant.Regular, TextBoldRuSizeAndContent.Values[1]) { } }
            public class TextBoldSl : Icon { public TextBoldSl() : base("TextBoldSl", IconVariant.Regular, TextBoldSlSizeAndContent.Values[1]) { } }
            public class TextBoldSrCyrl : Icon { public TextBoldSrCyrl() : base("TextBoldSrCyrl", IconVariant.Regular, TextBoldSrCyrlSizeAndContent.Values[1]) { } }
            public class TextBoldSrLatn : Icon { public TextBoldSrLatn() : base("TextBoldSrLatn", IconVariant.Regular, TextBoldSrLatnSizeAndContent.Values[1]) { } }
            public class TextBoldSv : Icon { public TextBoldSv() : base("TextBoldSv", IconVariant.Regular, TextBoldSvSizeAndContent.Values[1]) { } }
            public class Textbox : Icon { public Textbox() : base("Textbox", IconVariant.Regular, TextboxSizeAndContent.Values[1]) { } }
            public class TextboxAlignBottom : Icon { public TextboxAlignBottom() : base("TextboxAlignBottom", IconVariant.Regular, TextboxAlignBottomSizeAndContent.Values[0]) { } }
            public class TextboxAlignBottomCenter : Icon { public TextboxAlignBottomCenter() : base("TextboxAlignBottomCenter", IconVariant.Regular, TextboxAlignBottomCenterSizeAndContent.Values[1]) { } }
            public class TextboxAlignBottomLeft : Icon { public TextboxAlignBottomLeft() : base("TextboxAlignBottomLeft", IconVariant.Regular, TextboxAlignBottomLeftSizeAndContent.Values[1]) { } }
            public class TextboxAlignBottomRight : Icon { public TextboxAlignBottomRight() : base("TextboxAlignBottomRight", IconVariant.Regular, TextboxAlignBottomRightSizeAndContent.Values[1]) { } }
            public class TextboxAlignBottomRotate90 : Icon { public TextboxAlignBottomRotate90() : base("TextboxAlignBottomRotate90", IconVariant.Regular, TextboxAlignBottomRotate90SizeAndContent.Values[0]) { } }
            public class TextboxAlignCenter : Icon { public TextboxAlignCenter() : base("TextboxAlignCenter", IconVariant.Regular, TextboxAlignCenterSizeAndContent.Values[1]) { } }
            public class TextboxAlignMiddle : Icon { public TextboxAlignMiddle() : base("TextboxAlignMiddle", IconVariant.Regular, TextboxAlignMiddleSizeAndContent.Values[1]) { } }
            public class TextboxAlignMiddleLeft : Icon { public TextboxAlignMiddleLeft() : base("TextboxAlignMiddleLeft", IconVariant.Regular, TextboxAlignMiddleLeftSizeAndContent.Values[1]) { } }
            public class TextboxAlignMiddleRight : Icon { public TextboxAlignMiddleRight() : base("TextboxAlignMiddleRight", IconVariant.Regular, TextboxAlignMiddleRightSizeAndContent.Values[1]) { } }
            public class TextboxAlignMiddleRotate90 : Icon { public TextboxAlignMiddleRotate90() : base("TextboxAlignMiddleRotate90", IconVariant.Regular, TextboxAlignMiddleRotate90SizeAndContent.Values[0]) { } }
            public class TextboxAlignTop : Icon { public TextboxAlignTop() : base("TextboxAlignTop", IconVariant.Regular, TextboxAlignTopSizeAndContent.Values[0]) { } }
            public class TextboxAlignTopCenter : Icon { public TextboxAlignTopCenter() : base("TextboxAlignTopCenter", IconVariant.Regular, TextboxAlignTopCenterSizeAndContent.Values[1]) { } }
            public class TextboxAlignTopLeft : Icon { public TextboxAlignTopLeft() : base("TextboxAlignTopLeft", IconVariant.Regular, TextboxAlignTopLeftSizeAndContent.Values[1]) { } }
            public class TextboxAlignTopRight : Icon { public TextboxAlignTopRight() : base("TextboxAlignTopRight", IconVariant.Regular, TextboxAlignTopRightSizeAndContent.Values[1]) { } }
            public class TextboxAlignTopRotate90 : Icon { public TextboxAlignTopRotate90() : base("TextboxAlignTopRotate90", IconVariant.Regular, TextboxAlignTopRotate90SizeAndContent.Values[0]) { } }
            public class TextboxMore : Icon { public TextboxMore() : base("TextboxMore", IconVariant.Regular, TextboxMoreSizeAndContent.Values[0]) { } }
            public class TextboxRotate90 : Icon { public TextboxRotate90() : base("TextboxRotate90", IconVariant.Regular, TextboxRotate90SizeAndContent.Values[0]) { } }
            public class TextboxSettings : Icon { public TextboxSettings() : base("TextboxSettings", IconVariant.Regular, TextboxSettingsSizeAndContent.Values[0]) { } }
            public class TextBulletList : Icon { public TextBulletList() : base("TextBulletList", IconVariant.Regular, TextBulletListSizeAndContent.Values[1]) { } }
            public class TextBulletList90 : Icon { public TextBulletList90() : base("TextBulletList90", IconVariant.Regular, TextBulletList90SizeAndContent.Values[0]) { } }
            public class TextBulletListAdd : Icon { public TextBulletListAdd() : base("TextBulletListAdd", IconVariant.Regular, TextBulletListAddSizeAndContent.Values[0]) { } }
            public class TextBulletListCheckmark : Icon { public TextBulletListCheckmark() : base("TextBulletListCheckmark", IconVariant.Regular, TextBulletListCheckmarkSizeAndContent.Values[0]) { } }
            public class TextBulletListDismiss : Icon { public TextBulletListDismiss() : base("TextBulletListDismiss", IconVariant.Regular, TextBulletListDismissSizeAndContent.Values[0]) { } }
            public class TextBulletListLtr : Icon { public TextBulletListLtr() : base("TextBulletListLtr", IconVariant.Regular, TextBulletListLtrSizeAndContent.Values[1]) { } }
            public class TextBulletListLtr90 : Icon { public TextBulletListLtr90() : base("TextBulletListLtr90", IconVariant.Regular, TextBulletListLtr90SizeAndContent.Values[0]) { } }
            public class TextBulletListRtl : Icon { public TextBulletListRtl() : base("TextBulletListRtl", IconVariant.Regular, TextBulletListRtlSizeAndContent.Values[1]) { } }
            public class TextBulletListRtl90 : Icon { public TextBulletListRtl90() : base("TextBulletListRtl90", IconVariant.Regular, TextBulletListRtl90SizeAndContent.Values[0]) { } }
            public class TextBulletListSquare : Icon { public TextBulletListSquare() : base("TextBulletListSquare", IconVariant.Regular, TextBulletListSquareSizeAndContent.Values[1]) { } }
            public class TextBulletListSquareClock : Icon { public TextBulletListSquareClock() : base("TextBulletListSquareClock", IconVariant.Regular, TextBulletListSquareClockSizeAndContent.Values[0]) { } }
            public class TextBulletListSquareEdit : Icon { public TextBulletListSquareEdit() : base("TextBulletListSquareEdit", IconVariant.Regular, TextBulletListSquareEditSizeAndContent.Values[0]) { } }
            public class TextBulletListSquarePerson : Icon { public TextBulletListSquarePerson() : base("TextBulletListSquarePerson", IconVariant.Regular, TextBulletListSquarePersonSizeAndContent.Values[0]) { } }
            public class TextBulletListSquareSearch : Icon { public TextBulletListSquareSearch() : base("TextBulletListSquareSearch", IconVariant.Regular, TextBulletListSquareSearchSizeAndContent.Values[0]) { } }
            public class TextBulletListSquareSettings : Icon { public TextBulletListSquareSettings() : base("TextBulletListSquareSettings", IconVariant.Regular, TextBulletListSquareSettingsSizeAndContent.Values[0]) { } }
            public class TextBulletListSquareShield : Icon { public TextBulletListSquareShield() : base("TextBulletListSquareShield", IconVariant.Regular, TextBulletListSquareShieldSizeAndContent.Values[0]) { } }
            public class TextBulletListSquareSparkle : Icon { public TextBulletListSquareSparkle() : base("TextBulletListSquareSparkle", IconVariant.Regular, TextBulletListSquareSparkleSizeAndContent.Values[1]) { } }
            public class TextBulletListSquareToolbox : Icon { public TextBulletListSquareToolbox() : base("TextBulletListSquareToolbox", IconVariant.Regular, TextBulletListSquareToolboxSizeAndContent.Values[0]) { } }
            public class TextBulletListSquareWarning : Icon { public TextBulletListSquareWarning() : base("TextBulletListSquareWarning", IconVariant.Regular, TextBulletListSquareWarningSizeAndContent.Values[1]) { } }
            public class TextBulletListTree : Icon { public TextBulletListTree() : base("TextBulletListTree", IconVariant.Regular, TextBulletListTreeSizeAndContent.Values[1]) { } }
            public class TextCaseLowercase : Icon { public TextCaseLowercase() : base("TextCaseLowercase", IconVariant.Regular, TextCaseLowercaseSizeAndContent.Values[1]) { } }
            public class TextCaseTitle : Icon { public TextCaseTitle() : base("TextCaseTitle", IconVariant.Regular, TextCaseTitleSizeAndContent.Values[1]) { } }
            public class TextCaseUppercase : Icon { public TextCaseUppercase() : base("TextCaseUppercase", IconVariant.Regular, TextCaseUppercaseSizeAndContent.Values[1]) { } }
            public class TextChangeCase : Icon { public TextChangeCase() : base("TextChangeCase", IconVariant.Regular, TextChangeCaseSizeAndContent.Values[1]) { } }
            public class TextClearFormatting : Icon { public TextClearFormatting() : base("TextClearFormatting", IconVariant.Regular, TextClearFormattingSizeAndContent.Values[1]) { } }
            public class TextClearFormattingEn : Icon { public TextClearFormattingEn() : base("TextClearFormattingEn", IconVariant.Regular, TextClearFormattingEnSizeAndContent.Values[1]) { } }
            public class TextCollapse : Icon { public TextCollapse() : base("TextCollapse", IconVariant.Regular, TextCollapseSizeAndContent.Values[0]) { } }
            public class TextColor : Icon { public TextColor() : base("TextColor", IconVariant.Regular, TextColorSizeAndContent.Values[1]) { } }
            public class TextColorEn : Icon { public TextColorEn() : base("TextColorEn", IconVariant.Regular, TextColorEnSizeAndContent.Values[1]) { } }
            public class TextColorKo : Icon { public TextColorKo() : base("TextColorKo", IconVariant.Regular, TextColorKoSizeAndContent.Values[0]) { } }
            public class TextColumnOne : Icon { public TextColumnOne() : base("TextColumnOne", IconVariant.Regular, TextColumnOneSizeAndContent.Values[0]) { } }
            public class TextColumnOneNarrow : Icon { public TextColumnOneNarrow() : base("TextColumnOneNarrow", IconVariant.Regular, TextColumnOneNarrowSizeAndContent.Values[0]) { } }
            public class TextColumnOneSemiNarrow : Icon { public TextColumnOneSemiNarrow() : base("TextColumnOneSemiNarrow", IconVariant.Regular, TextColumnOneSemiNarrowSizeAndContent.Values[0]) { } }
            public class TextColumnOneWide : Icon { public TextColumnOneWide() : base("TextColumnOneWide", IconVariant.Regular, TextColumnOneWideSizeAndContent.Values[0]) { } }
            public class TextColumnOneWideLightning : Icon { public TextColumnOneWideLightning() : base("TextColumnOneWideLightning", IconVariant.Regular, TextColumnOneWideLightningSizeAndContent.Values[0]) { } }
            public class TextColumnThree : Icon { public TextColumnThree() : base("TextColumnThree", IconVariant.Regular, TextColumnThreeSizeAndContent.Values[0]) { } }
            public class TextColumnTwo : Icon { public TextColumnTwo() : base("TextColumnTwo", IconVariant.Regular, TextColumnTwoSizeAndContent.Values[0]) { } }
            public class TextColumnTwoLeft : Icon { public TextColumnTwoLeft() : base("TextColumnTwoLeft", IconVariant.Regular, TextColumnTwoLeftSizeAndContent.Values[0]) { } }
            public class TextColumnTwoRight : Icon { public TextColumnTwoRight() : base("TextColumnTwoRight", IconVariant.Regular, TextColumnTwoRightSizeAndContent.Values[0]) { } }
            public class TextColumnWide : Icon { public TextColumnWide() : base("TextColumnWide", IconVariant.Regular, TextColumnWideSizeAndContent.Values[0]) { } }
            public class TextContinuous : Icon { public TextContinuous() : base("TextContinuous", IconVariant.Regular, TextContinuousSizeAndContent.Values[0]) { } }
            public class TextDensity : Icon { public TextDensity() : base("TextDensity", IconVariant.Regular, TextDensitySizeAndContent.Values[1]) { } }
            public class TextDescription : Icon { public TextDescription() : base("TextDescription", IconVariant.Regular, TextDescriptionSizeAndContent.Values[1]) { } }
            public class TextDescriptionLtr : Icon { public TextDescriptionLtr() : base("TextDescriptionLtr", IconVariant.Regular, TextDescriptionLtrSizeAndContent.Values[0]) { } }
            public class TextDescriptionRtl : Icon { public TextDescriptionRtl() : base("TextDescriptionRtl", IconVariant.Regular, TextDescriptionRtlSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalLeft : Icon { public TextDirectionHorizontalLeft() : base("TextDirectionHorizontalLeft", IconVariant.Regular, TextDirectionHorizontalLeftSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalLeftEn : Icon { public TextDirectionHorizontalLeftEn() : base("TextDirectionHorizontalLeftEn", IconVariant.Regular, TextDirectionHorizontalLeftEnSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalLeftKo : Icon { public TextDirectionHorizontalLeftKo() : base("TextDirectionHorizontalLeftKo", IconVariant.Regular, TextDirectionHorizontalLeftKoSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalLtr : Icon { public TextDirectionHorizontalLtr() : base("TextDirectionHorizontalLtr", IconVariant.Regular, TextDirectionHorizontalLtrSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalLtrEn : Icon { public TextDirectionHorizontalLtrEn() : base("TextDirectionHorizontalLtrEn", IconVariant.Regular, TextDirectionHorizontalLtrEnSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalLtrKo : Icon { public TextDirectionHorizontalLtrKo() : base("TextDirectionHorizontalLtrKo", IconVariant.Regular, TextDirectionHorizontalLtrKoSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalRight : Icon { public TextDirectionHorizontalRight() : base("TextDirectionHorizontalRight", IconVariant.Regular, TextDirectionHorizontalRightSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalRightEn : Icon { public TextDirectionHorizontalRightEn() : base("TextDirectionHorizontalRightEn", IconVariant.Regular, TextDirectionHorizontalRightEnSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalRightKo : Icon { public TextDirectionHorizontalRightKo() : base("TextDirectionHorizontalRightKo", IconVariant.Regular, TextDirectionHorizontalRightKoSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalRtl : Icon { public TextDirectionHorizontalRtl() : base("TextDirectionHorizontalRtl", IconVariant.Regular, TextDirectionHorizontalRtlSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalRtlEn : Icon { public TextDirectionHorizontalRtlEn() : base("TextDirectionHorizontalRtlEn", IconVariant.Regular, TextDirectionHorizontalRtlEnSizeAndContent.Values[0]) { } }
            public class TextDirectionHorizontalRtlKo : Icon { public TextDirectionHorizontalRtlKo() : base("TextDirectionHorizontalRtlKo", IconVariant.Regular, TextDirectionHorizontalRtlKoSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate270Right : Icon { public TextDirectionRotate270Right() : base("TextDirectionRotate270Right", IconVariant.Regular, TextDirectionRotate270RightSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate270RightEn : Icon { public TextDirectionRotate270RightEn() : base("TextDirectionRotate270RightEn", IconVariant.Regular, TextDirectionRotate270RightEnSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate270RightKo : Icon { public TextDirectionRotate270RightKo() : base("TextDirectionRotate270RightKo", IconVariant.Regular, TextDirectionRotate270RightKoSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate315Right : Icon { public TextDirectionRotate315Right() : base("TextDirectionRotate315Right", IconVariant.Regular, TextDirectionRotate315RightSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate45Right : Icon { public TextDirectionRotate45Right() : base("TextDirectionRotate45Right", IconVariant.Regular, TextDirectionRotate45RightSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90Left : Icon { public TextDirectionRotate90Left() : base("TextDirectionRotate90Left", IconVariant.Regular, TextDirectionRotate90LeftSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90LeftEn : Icon { public TextDirectionRotate90LeftEn() : base("TextDirectionRotate90LeftEn", IconVariant.Regular, TextDirectionRotate90LeftEnSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90Ltr : Icon { public TextDirectionRotate90Ltr() : base("TextDirectionRotate90Ltr", IconVariant.Regular, TextDirectionRotate90LtrSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90LtrEn : Icon { public TextDirectionRotate90LtrEn() : base("TextDirectionRotate90LtrEn", IconVariant.Regular, TextDirectionRotate90LtrEnSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90LtrKo : Icon { public TextDirectionRotate90LtrKo() : base("TextDirectionRotate90LtrKo", IconVariant.Regular, TextDirectionRotate90LtrKoSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90Right : Icon { public TextDirectionRotate90Right() : base("TextDirectionRotate90Right", IconVariant.Regular, TextDirectionRotate90RightSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90RightEn : Icon { public TextDirectionRotate90RightEn() : base("TextDirectionRotate90RightEn", IconVariant.Regular, TextDirectionRotate90RightEnSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90RightKo : Icon { public TextDirectionRotate90RightKo() : base("TextDirectionRotate90RightKo", IconVariant.Regular, TextDirectionRotate90RightKoSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90Rtl : Icon { public TextDirectionRotate90Rtl() : base("TextDirectionRotate90Rtl", IconVariant.Regular, TextDirectionRotate90RtlSizeAndContent.Values[0]) { } }
            public class TextDirectionRotate90RtlEn : Icon { public TextDirectionRotate90RtlEn() : base("TextDirectionRotate90RtlEn", IconVariant.Regular, TextDirectionRotate90RtlEnSizeAndContent.Values[0]) { } }
            public class TextDirectionVertical : Icon { public TextDirectionVertical() : base("TextDirectionVertical", IconVariant.Regular, TextDirectionVerticalSizeAndContent.Values[0]) { } }
            public class TextDirectionVerticalEn : Icon { public TextDirectionVerticalEn() : base("TextDirectionVerticalEn", IconVariant.Regular, TextDirectionVerticalEnSizeAndContent.Values[0]) { } }
            public class TextDirectionVerticalKo : Icon { public TextDirectionVerticalKo() : base("TextDirectionVerticalKo", IconVariant.Regular, TextDirectionVerticalKoSizeAndContent.Values[0]) { } }
            public class TextEditStyle : Icon { public TextEditStyle() : base("TextEditStyle", IconVariant.Regular, TextEditStyleSizeAndContent.Values[1]) { } }
            public class TextEditStyleEn : Icon { public TextEditStyleEn() : base("TextEditStyleEn", IconVariant.Regular, TextEditStyleEnSizeAndContent.Values[1]) { } }
            public class TextEditStyleKo : Icon { public TextEditStyleKo() : base("TextEditStyleKo", IconVariant.Regular, TextEditStyleKoSizeAndContent.Values[1]) { } }
            public class TextEffects : Icon { public TextEffects() : base("TextEffects", IconVariant.Regular, TextEffectsSizeAndContent.Values[0]) { } }
            public class TextEffectsEn : Icon { public TextEffectsEn() : base("TextEffectsEn", IconVariant.Regular, TextEffectsEnSizeAndContent.Values[0]) { } }
            public class TextEffectsKo : Icon { public TextEffectsKo() : base("TextEffectsKo", IconVariant.Regular, TextEffectsKoSizeAndContent.Values[0]) { } }
            public class TextEffectsSparkle : Icon { public TextEffectsSparkle() : base("TextEffectsSparkle", IconVariant.Regular, TextEffectsSparkleSizeAndContent.Values[0]) { } }
            public class TextExpand : Icon { public TextExpand() : base("TextExpand", IconVariant.Regular, TextExpandSizeAndContent.Values[1]) { } }
            public class TextField : Icon { public TextField() : base("TextField", IconVariant.Regular, TextFieldSizeAndContent.Values[1]) { } }
            public class TextFirstLine : Icon { public TextFirstLine() : base("TextFirstLine", IconVariant.Regular, TextFirstLineSizeAndContent.Values[0]) { } }
            public class TextFont : Icon { public TextFont() : base("TextFont", IconVariant.Regular, TextFontSizeAndContent.Values[1]) { } }
            public class TextFontInfo : Icon { public TextFontInfo() : base("TextFontInfo", IconVariant.Regular, TextFontInfoSizeAndContent.Values[1]) { } }
            public class TextFontSize : Icon { public TextFontSize() : base("TextFontSize", IconVariant.Regular, TextFontSizeSizeAndContent.Values[1]) { } }
            public class TextFootnote : Icon { public TextFootnote() : base("TextFootnote", IconVariant.Regular, TextFootnoteSizeAndContent.Values[0]) { } }
            public class TextFootnoteEn : Icon { public TextFootnoteEn() : base("TextFootnoteEn", IconVariant.Regular, TextFootnoteEnSizeAndContent.Values[0]) { } }
            public class TextFootnoteKo : Icon { public TextFootnoteKo() : base("TextFootnoteKo", IconVariant.Regular, TextFootnoteKoSizeAndContent.Values[0]) { } }
            public class TextGrammarArrowLeft : Icon { public TextGrammarArrowLeft() : base("TextGrammarArrowLeft", IconVariant.Regular, TextGrammarArrowLeftSizeAndContent.Values[0]) { } }
            public class TextGrammarArrowRight : Icon { public TextGrammarArrowRight() : base("TextGrammarArrowRight", IconVariant.Regular, TextGrammarArrowRightSizeAndContent.Values[0]) { } }
            public class TextGrammarCheckmark : Icon { public TextGrammarCheckmark() : base("TextGrammarCheckmark", IconVariant.Regular, TextGrammarCheckmarkSizeAndContent.Values[0]) { } }
            public class TextGrammarDismiss : Icon { public TextGrammarDismiss() : base("TextGrammarDismiss", IconVariant.Regular, TextGrammarDismissSizeAndContent.Values[0]) { } }
            public class TextGrammarError : Icon { public TextGrammarError() : base("TextGrammarError", IconVariant.Regular, TextGrammarErrorSizeAndContent.Values[0]) { } }
            public class TextGrammarLightning : Icon { public TextGrammarLightning() : base("TextGrammarLightning", IconVariant.Regular, TextGrammarLightningSizeAndContent.Values[1]) { } }
            public class TextGrammarSettings : Icon { public TextGrammarSettings() : base("TextGrammarSettings", IconVariant.Regular, TextGrammarSettingsSizeAndContent.Values[0]) { } }
            public class TextGrammarWand : Icon { public TextGrammarWand() : base("TextGrammarWand", IconVariant.Regular, TextGrammarWandSizeAndContent.Values[1]) { } }
            public class TextHanging : Icon { public TextHanging() : base("TextHanging", IconVariant.Regular, TextHangingSizeAndContent.Values[0]) { } }
            public class TextHeader1 : Icon { public TextHeader1() : base("TextHeader1", IconVariant.Regular, TextHeader1SizeAndContent.Values[0]) { } }
            public class TextHeader1Lines : Icon { public TextHeader1Lines() : base("TextHeader1Lines", IconVariant.Regular, TextHeader1LinesSizeAndContent.Values[1]) { } }
            public class TextHeader1LinesCaret : Icon { public TextHeader1LinesCaret() : base("TextHeader1LinesCaret", IconVariant.Regular, TextHeader1LinesCaretSizeAndContent.Values[1]) { } }
            public class TextHeader2 : Icon { public TextHeader2() : base("TextHeader2", IconVariant.Regular, TextHeader2SizeAndContent.Values[0]) { } }
            public class TextHeader2Lines : Icon { public TextHeader2Lines() : base("TextHeader2Lines", IconVariant.Regular, TextHeader2LinesSizeAndContent.Values[1]) { } }
            public class TextHeader2LinesCaret : Icon { public TextHeader2LinesCaret() : base("TextHeader2LinesCaret", IconVariant.Regular, TextHeader2LinesCaretSizeAndContent.Values[1]) { } }
            public class TextHeader3 : Icon { public TextHeader3() : base("TextHeader3", IconVariant.Regular, TextHeader3SizeAndContent.Values[0]) { } }
            public class TextHeader3Lines : Icon { public TextHeader3Lines() : base("TextHeader3Lines", IconVariant.Regular, TextHeader3LinesSizeAndContent.Values[1]) { } }
            public class TextHeader3LinesCaret : Icon { public TextHeader3LinesCaret() : base("TextHeader3LinesCaret", IconVariant.Regular, TextHeader3LinesCaretSizeAndContent.Values[1]) { } }
            public class TextIndentDecrease : Icon { public TextIndentDecrease() : base("TextIndentDecrease", IconVariant.Regular, TextIndentDecreaseSizeAndContent.Values[1]) { } }
            public class TextIndentDecreaseLtr : Icon { public TextIndentDecreaseLtr() : base("TextIndentDecreaseLtr", IconVariant.Regular, TextIndentDecreaseLtrSizeAndContent.Values[1]) { } }
            public class TextIndentDecreaseLtr90 : Icon { public TextIndentDecreaseLtr90() : base("TextIndentDecreaseLtr90", IconVariant.Regular, TextIndentDecreaseLtr90SizeAndContent.Values[0]) { } }
            public class TextIndentDecreaseLtrRotate270 : Icon { public TextIndentDecreaseLtrRotate270() : base("TextIndentDecreaseLtrRotate270", IconVariant.Regular, TextIndentDecreaseLtrRotate270SizeAndContent.Values[0]) { } }
            public class TextIndentDecreaseRotate270 : Icon { public TextIndentDecreaseRotate270() : base("TextIndentDecreaseRotate270", IconVariant.Regular, TextIndentDecreaseRotate270SizeAndContent.Values[0]) { } }
            public class TextIndentDecreaseRotate90 : Icon { public TextIndentDecreaseRotate90() : base("TextIndentDecreaseRotate90", IconVariant.Regular, TextIndentDecreaseRotate90SizeAndContent.Values[0]) { } }
            public class TextIndentDecreaseRtl : Icon { public TextIndentDecreaseRtl() : base("TextIndentDecreaseRtl", IconVariant.Regular, TextIndentDecreaseRtlSizeAndContent.Values[1]) { } }
            public class TextIndentDecreaseRtl90 : Icon { public TextIndentDecreaseRtl90() : base("TextIndentDecreaseRtl90", IconVariant.Regular, TextIndentDecreaseRtl90SizeAndContent.Values[0]) { } }
            public class TextIndentDecreaseRtlRotate270 : Icon { public TextIndentDecreaseRtlRotate270() : base("TextIndentDecreaseRtlRotate270", IconVariant.Regular, TextIndentDecreaseRtlRotate270SizeAndContent.Values[0]) { } }
            public class TextIndentIncrease : Icon { public TextIndentIncrease() : base("TextIndentIncrease", IconVariant.Regular, TextIndentIncreaseSizeAndContent.Values[1]) { } }
            public class TextIndentIncreaseLtr : Icon { public TextIndentIncreaseLtr() : base("TextIndentIncreaseLtr", IconVariant.Regular, TextIndentIncreaseLtrSizeAndContent.Values[1]) { } }
            public class TextIndentIncreaseLtr90 : Icon { public TextIndentIncreaseLtr90() : base("TextIndentIncreaseLtr90", IconVariant.Regular, TextIndentIncreaseLtr90SizeAndContent.Values[0]) { } }
            public class TextIndentIncreaseLtrRotate270 : Icon { public TextIndentIncreaseLtrRotate270() : base("TextIndentIncreaseLtrRotate270", IconVariant.Regular, TextIndentIncreaseLtrRotate270SizeAndContent.Values[0]) { } }
            public class TextIndentIncreaseRotate270 : Icon { public TextIndentIncreaseRotate270() : base("TextIndentIncreaseRotate270", IconVariant.Regular, TextIndentIncreaseRotate270SizeAndContent.Values[0]) { } }
            public class TextIndentIncreaseRotate90 : Icon { public TextIndentIncreaseRotate90() : base("TextIndentIncreaseRotate90", IconVariant.Regular, TextIndentIncreaseRotate90SizeAndContent.Values[0]) { } }
            public class TextIndentIncreaseRtl : Icon { public TextIndentIncreaseRtl() : base("TextIndentIncreaseRtl", IconVariant.Regular, TextIndentIncreaseRtlSizeAndContent.Values[1]) { } }
            public class TextIndentIncreaseRtl90 : Icon { public TextIndentIncreaseRtl90() : base("TextIndentIncreaseRtl90", IconVariant.Regular, TextIndentIncreaseRtl90SizeAndContent.Values[0]) { } }
            public class TextIndentIncreaseRtlRotate270 : Icon { public TextIndentIncreaseRtlRotate270() : base("TextIndentIncreaseRtlRotate270", IconVariant.Regular, TextIndentIncreaseRtlRotate270SizeAndContent.Values[0]) { } }
            public class TextItalic : Icon { public TextItalic() : base("TextItalic", IconVariant.Regular, TextItalicSizeAndContent.Values[1]) { } }
            public class TextItalicBg : Icon { public TextItalicBg() : base("TextItalicBg", IconVariant.Regular, TextItalicBgSizeAndContent.Values[1]) { } }
            public class TextItalicCa : Icon { public TextItalicCa() : base("TextItalicCa", IconVariant.Regular, TextItalicCaSizeAndContent.Values[1]) { } }
            public class TextItalicDa : Icon { public TextItalicDa() : base("TextItalicDa", IconVariant.Regular, TextItalicDaSizeAndContent.Values[1]) { } }
            public class TextItalicDe : Icon { public TextItalicDe() : base("TextItalicDe", IconVariant.Regular, TextItalicDeSizeAndContent.Values[1]) { } }
            public class TextItalicEn : Icon { public TextItalicEn() : base("TextItalicEn", IconVariant.Regular, TextItalicEnSizeAndContent.Values[1]) { } }
            public class TextItalicEs : Icon { public TextItalicEs() : base("TextItalicEs", IconVariant.Regular, TextItalicEsSizeAndContent.Values[1]) { } }
            public class TextItalicEt : Icon { public TextItalicEt() : base("TextItalicEt", IconVariant.Regular, TextItalicEtSizeAndContent.Values[1]) { } }
            public class TextItalicGl : Icon { public TextItalicGl() : base("TextItalicGl", IconVariant.Regular, TextItalicGlSizeAndContent.Values[1]) { } }
            public class TextItalicHu : Icon { public TextItalicHu() : base("TextItalicHu", IconVariant.Regular, TextItalicHuSizeAndContent.Values[1]) { } }
            public class TextItalicIt : Icon { public TextItalicIt() : base("TextItalicIt", IconVariant.Regular, TextItalicItSizeAndContent.Values[1]) { } }
            public class TextItalicKk : Icon { public TextItalicKk() : base("TextItalicKk", IconVariant.Regular, TextItalicKkSizeAndContent.Values[1]) { } }
            public class TextItalicKo : Icon { public TextItalicKo() : base("TextItalicKo", IconVariant.Regular, TextItalicKoSizeAndContent.Values[1]) { } }
            public class TextItalicLt : Icon { public TextItalicLt() : base("TextItalicLt", IconVariant.Regular, TextItalicLtSizeAndContent.Values[1]) { } }
            public class TextItalicLv : Icon { public TextItalicLv() : base("TextItalicLv", IconVariant.Regular, TextItalicLvSizeAndContent.Values[1]) { } }
            public class TextItalicNo : Icon { public TextItalicNo() : base("TextItalicNo", IconVariant.Regular, TextItalicNoSizeAndContent.Values[1]) { } }
            public class TextItalicRu : Icon { public TextItalicRu() : base("TextItalicRu", IconVariant.Regular, TextItalicRuSizeAndContent.Values[1]) { } }
            public class TextItalicSl : Icon { public TextItalicSl() : base("TextItalicSl", IconVariant.Regular, TextItalicSlSizeAndContent.Values[1]) { } }
            public class TextItalicSv : Icon { public TextItalicSv() : base("TextItalicSv", IconVariant.Regular, TextItalicSvSizeAndContent.Values[1]) { } }
            public class TextLineSpacing : Icon { public TextLineSpacing() : base("TextLineSpacing", IconVariant.Regular, TextLineSpacingSizeAndContent.Values[0]) { } }
            public class TextMore : Icon { public TextMore() : base("TextMore", IconVariant.Regular, TextMoreSizeAndContent.Values[0]) { } }
            public class TextMoreEn : Icon { public TextMoreEn() : base("TextMoreEn", IconVariant.Regular, TextMoreEnSizeAndContent.Values[0]) { } }
            public class TextMoreKo : Icon { public TextMoreKo() : base("TextMoreKo", IconVariant.Regular, TextMoreKoSizeAndContent.Values[0]) { } }
            public class TextNumberFormat : Icon { public TextNumberFormat() : base("TextNumberFormat", IconVariant.Regular, TextNumberFormatSizeAndContent.Values[0]) { } }
            public class TextNumberFormatEn : Icon { public TextNumberFormatEn() : base("TextNumberFormatEn", IconVariant.Regular, TextNumberFormatEnSizeAndContent.Values[0]) { } }
            public class TextNumberFormatKo : Icon { public TextNumberFormatKo() : base("TextNumberFormatKo", IconVariant.Regular, TextNumberFormatKoSizeAndContent.Values[0]) { } }
            public class TextNumberListLtr : Icon { public TextNumberListLtr() : base("TextNumberListLtr", IconVariant.Regular, TextNumberListLtrSizeAndContent.Values[1]) { } }
            public class TextNumberListLtr90 : Icon { public TextNumberListLtr90() : base("TextNumberListLtr90", IconVariant.Regular, TextNumberListLtr90SizeAndContent.Values[0]) { } }
            public class TextNumberListLtrRotate270 : Icon { public TextNumberListLtrRotate270() : base("TextNumberListLtrRotate270", IconVariant.Regular, TextNumberListLtrRotate270SizeAndContent.Values[0]) { } }
            public class TextNumberListRotate270 : Icon { public TextNumberListRotate270() : base("TextNumberListRotate270", IconVariant.Regular, TextNumberListRotate270SizeAndContent.Values[0]) { } }
            public class TextNumberListRotate90 : Icon { public TextNumberListRotate90() : base("TextNumberListRotate90", IconVariant.Regular, TextNumberListRotate90SizeAndContent.Values[0]) { } }
            public class TextNumberListRtl : Icon { public TextNumberListRtl() : base("TextNumberListRtl", IconVariant.Regular, TextNumberListRtlSizeAndContent.Values[1]) { } }
            public class TextNumberListRtl90 : Icon { public TextNumberListRtl90() : base("TextNumberListRtl90", IconVariant.Regular, TextNumberListRtl90SizeAndContent.Values[0]) { } }
            public class TextNumberListRtlRotate270 : Icon { public TextNumberListRtlRotate270() : base("TextNumberListRtlRotate270", IconVariant.Regular, TextNumberListRtlRotate270SizeAndContent.Values[0]) { } }
            public class TextParagraph : Icon { public TextParagraph() : base("TextParagraph", IconVariant.Regular, TextParagraphSizeAndContent.Values[1]) { } }
            public class TextParagraphDirection : Icon { public TextParagraphDirection() : base("TextParagraphDirection", IconVariant.Regular, TextParagraphDirectionSizeAndContent.Values[0]) { } }
            public class TextParagraphDirectionLeft : Icon { public TextParagraphDirectionLeft() : base("TextParagraphDirectionLeft", IconVariant.Regular, TextParagraphDirectionLeftSizeAndContent.Values[1]) { } }
            public class TextParagraphDirectionRight : Icon { public TextParagraphDirectionRight() : base("TextParagraphDirectionRight", IconVariant.Regular, TextParagraphDirectionRightSizeAndContent.Values[1]) { } }
            public class TextParagraphEn : Icon { public TextParagraphEn() : base("TextParagraphEn", IconVariant.Regular, TextParagraphEnSizeAndContent.Values[1]) { } }
            public class TextParagraphKo : Icon { public TextParagraphKo() : base("TextParagraphKo", IconVariant.Regular, TextParagraphKoSizeAndContent.Values[1]) { } }
            public class TextPeriodAsterisk : Icon { public TextPeriodAsterisk() : base("TextPeriodAsterisk", IconVariant.Regular, TextPeriodAsteriskSizeAndContent.Values[0]) { } }
            public class TextPositionBehind : Icon { public TextPositionBehind() : base("TextPositionBehind", IconVariant.Regular, TextPositionBehindSizeAndContent.Values[0]) { } }
            public class TextPositionFront : Icon { public TextPositionFront() : base("TextPositionFront", IconVariant.Regular, TextPositionFrontSizeAndContent.Values[0]) { } }
            public class TextPositionLine : Icon { public TextPositionLine() : base("TextPositionLine", IconVariant.Regular, TextPositionLineSizeAndContent.Values[0]) { } }
            public class TextPositionSquare : Icon { public TextPositionSquare() : base("TextPositionSquare", IconVariant.Regular, TextPositionSquareSizeAndContent.Values[0]) { } }
            public class TextPositionSquareLeft : Icon { public TextPositionSquareLeft() : base("TextPositionSquareLeft", IconVariant.Regular, TextPositionSquareLeftSizeAndContent.Values[1]) { } }
            public class TextPositionSquareRight : Icon { public TextPositionSquareRight() : base("TextPositionSquareRight", IconVariant.Regular, TextPositionSquareRightSizeAndContent.Values[1]) { } }
            public class TextPositionThrough : Icon { public TextPositionThrough() : base("TextPositionThrough", IconVariant.Regular, TextPositionThroughSizeAndContent.Values[0]) { } }
            public class TextPositionTight : Icon { public TextPositionTight() : base("TextPositionTight", IconVariant.Regular, TextPositionTightSizeAndContent.Values[0]) { } }
            public class TextPositionTopBottom : Icon { public TextPositionTopBottom() : base("TextPositionTopBottom", IconVariant.Regular, TextPositionTopBottomSizeAndContent.Values[0]) { } }
            public class TextProofingTools : Icon { public TextProofingTools() : base("TextProofingTools", IconVariant.Regular, TextProofingToolsSizeAndContent.Values[0]) { } }
            public class TextProofingToolsEn : Icon { public TextProofingToolsEn() : base("TextProofingToolsEn", IconVariant.Regular, TextProofingToolsEnSizeAndContent.Values[0]) { } }
            public class TextProofingToolsKo : Icon { public TextProofingToolsKo() : base("TextProofingToolsKo", IconVariant.Regular, TextProofingToolsKoSizeAndContent.Values[0]) { } }
            public class TextQuote : Icon { public TextQuote() : base("TextQuote", IconVariant.Regular, TextQuoteSizeAndContent.Values[1]) { } }
            public class TextSortAscending : Icon { public TextSortAscending() : base("TextSortAscending", IconVariant.Regular, TextSortAscendingSizeAndContent.Values[1]) { } }
            public class TextSortAscendingBg : Icon { public TextSortAscendingBg() : base("TextSortAscendingBg", IconVariant.Regular, TextSortAscendingBgSizeAndContent.Values[1]) { } }
            public class TextSortAscendingDa : Icon { public TextSortAscendingDa() : base("TextSortAscendingDa", IconVariant.Regular, TextSortAscendingDaSizeAndContent.Values[1]) { } }
            public class TextSortAscendingEn : Icon { public TextSortAscendingEn() : base("TextSortAscendingEn", IconVariant.Regular, TextSortAscendingEnSizeAndContent.Values[1]) { } }
            public class TextSortAscendingKk : Icon { public TextSortAscendingKk() : base("TextSortAscendingKk", IconVariant.Regular, TextSortAscendingKkSizeAndContent.Values[1]) { } }
            public class TextSortAscendingKo : Icon { public TextSortAscendingKo() : base("TextSortAscendingKo", IconVariant.Regular, TextSortAscendingKoSizeAndContent.Values[1]) { } }
            public class TextSortAscendingRu : Icon { public TextSortAscendingRu() : base("TextSortAscendingRu", IconVariant.Regular, TextSortAscendingRuSizeAndContent.Values[1]) { } }
            public class TextSortAscendingSl : Icon { public TextSortAscendingSl() : base("TextSortAscendingSl", IconVariant.Regular, TextSortAscendingSlSizeAndContent.Values[1]) { } }
            public class TextSortDescending : Icon { public TextSortDescending() : base("TextSortDescending", IconVariant.Regular, TextSortDescendingSizeAndContent.Values[1]) { } }
            public class TextSortDescendingBg : Icon { public TextSortDescendingBg() : base("TextSortDescendingBg", IconVariant.Regular, TextSortDescendingBgSizeAndContent.Values[1]) { } }
            public class TextSortDescendingDa : Icon { public TextSortDescendingDa() : base("TextSortDescendingDa", IconVariant.Regular, TextSortDescendingDaSizeAndContent.Values[1]) { } }
            public class TextSortDescendingEn : Icon { public TextSortDescendingEn() : base("TextSortDescendingEn", IconVariant.Regular, TextSortDescendingEnSizeAndContent.Values[1]) { } }
            public class TextSortDescendingKk : Icon { public TextSortDescendingKk() : base("TextSortDescendingKk", IconVariant.Regular, TextSortDescendingKkSizeAndContent.Values[1]) { } }
            public class TextSortDescendingKo : Icon { public TextSortDescendingKo() : base("TextSortDescendingKo", IconVariant.Regular, TextSortDescendingKoSizeAndContent.Values[1]) { } }
            public class TextSortDescendingRu : Icon { public TextSortDescendingRu() : base("TextSortDescendingRu", IconVariant.Regular, TextSortDescendingRuSizeAndContent.Values[1]) { } }
            public class TextSortDescendingSl : Icon { public TextSortDescendingSl() : base("TextSortDescendingSl", IconVariant.Regular, TextSortDescendingSlSizeAndContent.Values[1]) { } }
            public class TextStrikethrough : Icon { public TextStrikethrough() : base("TextStrikethrough", IconVariant.Regular, TextStrikethroughSizeAndContent.Values[1]) { } }
            public class TextStrikethroughEn : Icon { public TextStrikethroughEn() : base("TextStrikethroughEn", IconVariant.Regular, TextStrikethroughEnSizeAndContent.Values[1]) { } }
            public class TextStrikethroughKo : Icon { public TextStrikethroughKo() : base("TextStrikethroughKo", IconVariant.Regular, TextStrikethroughKoSizeAndContent.Values[1]) { } }
            public class TextSubscript : Icon { public TextSubscript() : base("TextSubscript", IconVariant.Regular, TextSubscriptSizeAndContent.Values[1]) { } }
            public class TextSuperscript : Icon { public TextSuperscript() : base("TextSuperscript", IconVariant.Regular, TextSuperscriptSizeAndContent.Values[1]) { } }
            public class TextT : Icon { public TextT() : base("TextT", IconVariant.Regular, TextTSizeAndContent.Values[2]) { } }
            public class TextUnderline : Icon { public TextUnderline() : base("TextUnderline", IconVariant.Regular, TextUnderlineSizeAndContent.Values[1]) { } }
            public class TextUnderlineBg : Icon { public TextUnderlineBg() : base("TextUnderlineBg", IconVariant.Regular, TextUnderlineBgSizeAndContent.Values[1]) { } }
            public class TextUnderlineCa : Icon { public TextUnderlineCa() : base("TextUnderlineCa", IconVariant.Regular, TextUnderlineCaSizeAndContent.Values[1]) { } }
            public class TextUnderlineCharacterU : Icon { public TextUnderlineCharacterU() : base("TextUnderlineCharacterU", IconVariant.Regular, TextUnderlineCharacterUSizeAndContent.Values[1]) { } }
            public class TextUnderlineDouble : Icon { public TextUnderlineDouble() : base("TextUnderlineDouble", IconVariant.Regular, TextUnderlineDoubleSizeAndContent.Values[0]) { } }
            public class TextUnderlineEn : Icon { public TextUnderlineEn() : base("TextUnderlineEn", IconVariant.Regular, TextUnderlineEnSizeAndContent.Values[1]) { } }
            public class TextUnderlineEs : Icon { public TextUnderlineEs() : base("TextUnderlineEs", IconVariant.Regular, TextUnderlineEsSizeAndContent.Values[1]) { } }
            public class TextUnderlineEt : Icon { public TextUnderlineEt() : base("TextUnderlineEt", IconVariant.Regular, TextUnderlineEtSizeAndContent.Values[1]) { } }
            public class TextUnderlineFr : Icon { public TextUnderlineFr() : base("TextUnderlineFr", IconVariant.Regular, TextUnderlineFrSizeAndContent.Values[1]) { } }
            public class TextUnderlineGl : Icon { public TextUnderlineGl() : base("TextUnderlineGl", IconVariant.Regular, TextUnderlineGlSizeAndContent.Values[1]) { } }
            public class TextUnderlineHu : Icon { public TextUnderlineHu() : base("TextUnderlineHu", IconVariant.Regular, TextUnderlineHuSizeAndContent.Values[1]) { } }
            public class TextUnderlineIt : Icon { public TextUnderlineIt() : base("TextUnderlineIt", IconVariant.Regular, TextUnderlineItSizeAndContent.Values[1]) { } }
            public class TextUnderlineKk : Icon { public TextUnderlineKk() : base("TextUnderlineKk", IconVariant.Regular, TextUnderlineKkSizeAndContent.Values[1]) { } }
            public class TextUnderlineKo : Icon { public TextUnderlineKo() : base("TextUnderlineKo", IconVariant.Regular, TextUnderlineKoSizeAndContent.Values[1]) { } }
            public class TextUnderlineLt : Icon { public TextUnderlineLt() : base("TextUnderlineLt", IconVariant.Regular, TextUnderlineLtSizeAndContent.Values[1]) { } }
            public class TextUnderlineLv : Icon { public TextUnderlineLv() : base("TextUnderlineLv", IconVariant.Regular, TextUnderlineLvSizeAndContent.Values[1]) { } }
            public class TextUnderlinePt : Icon { public TextUnderlinePt() : base("TextUnderlinePt", IconVariant.Regular, TextUnderlinePtSizeAndContent.Values[1]) { } }
            public class TextUnderlineRu : Icon { public TextUnderlineRu() : base("TextUnderlineRu", IconVariant.Regular, TextUnderlineRuSizeAndContent.Values[1]) { } }
            public class TextUnderlineSl : Icon { public TextUnderlineSl() : base("TextUnderlineSl", IconVariant.Regular, TextUnderlineSlSizeAndContent.Values[1]) { } }
            public class TextWholeWord : Icon { public TextWholeWord() : base("TextWholeWord", IconVariant.Regular, TextWholeWordSizeAndContent.Values[1]) { } }
            public class TextWordCount : Icon { public TextWordCount() : base("TextWordCount", IconVariant.Regular, TextWordCountSizeAndContent.Values[0]) { } }
            public class TextWrap : Icon { public TextWrap() : base("TextWrap", IconVariant.Regular, TextWrapSizeAndContent.Values[1]) { } }
            public class TextWrapOff : Icon { public TextWrapOff() : base("TextWrapOff", IconVariant.Regular, TextWrapOffSizeAndContent.Values[1]) { } }
            public class Thinking : Icon { public Thinking() : base("Thinking", IconVariant.Regular, ThinkingSizeAndContent.Values[0]) { } }
            public class ThumbDislike : Icon { public ThumbDislike() : base("ThumbDislike", IconVariant.Regular, ThumbDislikeSizeAndContent.Values[1]) { } }
            public class ThumbLike : Icon { public ThumbLike() : base("ThumbLike", IconVariant.Regular, ThumbLikeSizeAndContent.Values[1]) { } }
            public class ThumbLikeDislike : Icon { public ThumbLikeDislike() : base("ThumbLikeDislike", IconVariant.Regular, ThumbLikeDislikeSizeAndContent.Values[1]) { } }
            public class TicketDiagonal : Icon { public TicketDiagonal() : base("TicketDiagonal", IconVariant.Regular, TicketDiagonalSizeAndContent.Values[1]) { } }
            public class TicketHorizontal : Icon { public TicketHorizontal() : base("TicketHorizontal", IconVariant.Regular, TicketHorizontalSizeAndContent.Values[0]) { } }
            public class TimeAndWeather : Icon { public TimeAndWeather() : base("TimeAndWeather", IconVariant.Regular, TimeAndWeatherSizeAndContent.Values[0]) { } }
            public class Timeline : Icon { public Timeline() : base("Timeline", IconVariant.Regular, TimelineSizeAndContent.Values[0]) { } }
            public class TimePicker : Icon { public TimePicker() : base("TimePicker", IconVariant.Regular, TimePickerSizeAndContent.Values[0]) { } }
            public class Timer : Icon { public Timer() : base("Timer", IconVariant.Regular, TimerSizeAndContent.Values[2]) { } }
            public class Timer10 : Icon { public Timer10() : base("Timer10", IconVariant.Regular, Timer10SizeAndContent.Values[0]) { } }
            public class Timer2 : Icon { public Timer2() : base("Timer2", IconVariant.Regular, Timer2SizeAndContent.Values[0]) { } }
            public class Timer3 : Icon { public Timer3() : base("Timer3", IconVariant.Regular, Timer3SizeAndContent.Values[0]) { } }
            public class TimerOff : Icon { public TimerOff() : base("TimerOff", IconVariant.Regular, TimerOffSizeAndContent.Values[0]) { } }
            public class ToggleLeft : Icon { public ToggleLeft() : base("ToggleLeft", IconVariant.Regular, ToggleLeftSizeAndContent.Values[1]) { } }
            public class ToggleMultiple : Icon { public ToggleMultiple() : base("ToggleMultiple", IconVariant.Regular, ToggleMultipleSizeAndContent.Values[1]) { } }
            public class ToggleRight : Icon { public ToggleRight() : base("ToggleRight", IconVariant.Regular, ToggleRightSizeAndContent.Values[1]) { } }
            public class Toolbox : Icon { public Toolbox() : base("Toolbox", IconVariant.Regular, ToolboxSizeAndContent.Values[2]) { } }
            public class TooltipQuote : Icon { public TooltipQuote() : base("TooltipQuote", IconVariant.Regular, TooltipQuoteSizeAndContent.Values[0]) { } }
            public class TopSpeed : Icon { public TopSpeed() : base("TopSpeed", IconVariant.Regular, TopSpeedSizeAndContent.Values[0]) { } }
            public class Translate : Icon { public Translate() : base("Translate", IconVariant.Regular, TranslateSizeAndContent.Values[1]) { } }
            public class TranslateAuto : Icon { public TranslateAuto() : base("TranslateAuto", IconVariant.Regular, TranslateAutoSizeAndContent.Values[1]) { } }
            public class TranslateOff : Icon { public TranslateOff() : base("TranslateOff", IconVariant.Regular, TranslateOffSizeAndContent.Values[1]) { } }
            public class Transmission : Icon { public Transmission() : base("Transmission", IconVariant.Regular, TransmissionSizeAndContent.Values[0]) { } }
            public class TrayItemAdd : Icon { public TrayItemAdd() : base("TrayItemAdd", IconVariant.Regular, TrayItemAddSizeAndContent.Values[0]) { } }
            public class TrayItemRemove : Icon { public TrayItemRemove() : base("TrayItemRemove", IconVariant.Regular, TrayItemRemoveSizeAndContent.Values[0]) { } }
            public class TreeDeciduous : Icon { public TreeDeciduous() : base("TreeDeciduous", IconVariant.Regular, TreeDeciduousSizeAndContent.Values[0]) { } }
            public class TreeEvergreen : Icon { public TreeEvergreen() : base("TreeEvergreen", IconVariant.Regular, TreeEvergreenSizeAndContent.Values[0]) { } }
            public class Triangle : Icon { public Triangle() : base("Triangle", IconVariant.Regular, TriangleSizeAndContent.Values[2]) { } }
            public class TriangleDown : Icon { public TriangleDown() : base("TriangleDown", IconVariant.Regular, TriangleDownSizeAndContent.Values[2]) { } }
            public class TriangleLeft : Icon { public TriangleLeft() : base("TriangleLeft", IconVariant.Regular, TriangleLeftSizeAndContent.Values[2]) { } }
            public class TriangleRight : Icon { public TriangleRight() : base("TriangleRight", IconVariant.Regular, TriangleRightSizeAndContent.Values[2]) { } }
            public class TriangleUp : Icon { public TriangleUp() : base("TriangleUp", IconVariant.Regular, TriangleUpSizeAndContent.Values[0]) { } }
            public class Trophy : Icon { public Trophy() : base("Trophy", IconVariant.Regular, TrophySizeAndContent.Values[1]) { } }
            public class TrophyLock : Icon { public TrophyLock() : base("TrophyLock", IconVariant.Regular, TrophyLockSizeAndContent.Values[1]) { } }
            public class TrophyOff : Icon { public TrophyOff() : base("TrophyOff", IconVariant.Regular, TrophyOffSizeAndContent.Values[1]) { } }
            public class Tv : Icon { public Tv() : base("Tv", IconVariant.Regular, TvSizeAndContent.Values[1]) { } }
            public class TvArrowRight : Icon { public TvArrowRight() : base("TvArrowRight", IconVariant.Regular, TvArrowRightSizeAndContent.Values[0]) { } }
            public class TvUsb : Icon { public TvUsb() : base("TvUsb", IconVariant.Regular, TvUsbSizeAndContent.Values[1]) { } }
            public class Umbrella : Icon { public Umbrella() : base("Umbrella", IconVariant.Regular, UmbrellaSizeAndContent.Values[0]) { } }
            public class UninstallApp : Icon { public UninstallApp() : base("UninstallApp", IconVariant.Regular, UninstallAppSizeAndContent.Values[0]) { } }
            public class UsbPlug : Icon { public UsbPlug() : base("UsbPlug", IconVariant.Regular, UsbPlugSizeAndContent.Values[0]) { } }
            public class UsbStick : Icon { public UsbStick() : base("UsbStick", IconVariant.Regular, UsbStickSizeAndContent.Values[0]) { } }
            public class Vault : Icon { public Vault() : base("Vault", IconVariant.Regular, VaultSizeAndContent.Values[1]) { } }
            public class VehicleBicycle : Icon { public VehicleBicycle() : base("VehicleBicycle", IconVariant.Regular, VehicleBicycleSizeAndContent.Values[1]) { } }
            public class VehicleBus : Icon { public VehicleBus() : base("VehicleBus", IconVariant.Regular, VehicleBusSizeAndContent.Values[1]) { } }
            public class VehicleCab : Icon { public VehicleCab() : base("VehicleCab", IconVariant.Regular, VehicleCabSizeAndContent.Values[1]) { } }
            public class VehicleCableCar : Icon { public VehicleCableCar() : base("VehicleCableCar", IconVariant.Regular, VehicleCableCarSizeAndContent.Values[0]) { } }
            public class VehicleCar : Icon { public VehicleCar() : base("VehicleCar", IconVariant.Regular, VehicleCarSizeAndContent.Values[1]) { } }
            public class VehicleCarCollision : Icon { public VehicleCarCollision() : base("VehicleCarCollision", IconVariant.Regular, VehicleCarCollisionSizeAndContent.Values[1]) { } }
            public class VehicleCarParking : Icon { public VehicleCarParking() : base("VehicleCarParking", IconVariant.Regular, VehicleCarParkingSizeAndContent.Values[1]) { } }
            public class VehicleCarProfile : Icon { public VehicleCarProfile() : base("VehicleCarProfile", IconVariant.Regular, VehicleCarProfileSizeAndContent.Values[1]) { } }
            public class VehicleCarProfileLtr : Icon { public VehicleCarProfileLtr() : base("VehicleCarProfileLtr", IconVariant.Regular, VehicleCarProfileLtrSizeAndContent.Values[1]) { } }
            public class VehicleCarProfileLtrClock : Icon { public VehicleCarProfileLtrClock() : base("VehicleCarProfileLtrClock", IconVariant.Regular, VehicleCarProfileLtrClockSizeAndContent.Values[1]) { } }
            public class VehicleCarProfileRtl : Icon { public VehicleCarProfileRtl() : base("VehicleCarProfileRtl", IconVariant.Regular, VehicleCarProfileRtlSizeAndContent.Values[1]) { } }
            public class VehicleShip : Icon { public VehicleShip() : base("VehicleShip", IconVariant.Regular, VehicleShipSizeAndContent.Values[1]) { } }
            public class VehicleSubway : Icon { public VehicleSubway() : base("VehicleSubway", IconVariant.Regular, VehicleSubwaySizeAndContent.Values[1]) { } }
            public class VehicleSubwayClock : Icon { public VehicleSubwayClock() : base("VehicleSubwayClock", IconVariant.Regular, VehicleSubwayClockSizeAndContent.Values[1]) { } }
            public class VehicleTruck : Icon { public VehicleTruck() : base("VehicleTruck", IconVariant.Regular, VehicleTruckSizeAndContent.Values[1]) { } }
            public class VehicleTruckBag : Icon { public VehicleTruckBag() : base("VehicleTruckBag", IconVariant.Regular, VehicleTruckBagSizeAndContent.Values[0]) { } }
            public class VehicleTruckCube : Icon { public VehicleTruckCube() : base("VehicleTruckCube", IconVariant.Regular, VehicleTruckCubeSizeAndContent.Values[0]) { } }
            public class VehicleTruckProfile : Icon { public VehicleTruckProfile() : base("VehicleTruckProfile", IconVariant.Regular, VehicleTruckProfileSizeAndContent.Values[1]) { } }
            public class Video : Icon { public Video() : base("Video", IconVariant.Regular, VideoSizeAndContent.Values[1]) { } }
            public class Video360 : Icon { public Video360() : base("Video360", IconVariant.Regular, Video360SizeAndContent.Values[0]) { } }
            public class Video360Off : Icon { public Video360Off() : base("Video360Off", IconVariant.Regular, Video360OffSizeAndContent.Values[0]) { } }
            public class VideoAdd : Icon { public VideoAdd() : base("VideoAdd", IconVariant.Regular, VideoAddSizeAndContent.Values[0]) { } }
            public class VideoBackgroundEffect : Icon { public VideoBackgroundEffect() : base("VideoBackgroundEffect", IconVariant.Regular, VideoBackgroundEffectSizeAndContent.Values[1]) { } }
            public class VideoBackgroundEffectHorizontal : Icon { public VideoBackgroundEffectHorizontal() : base("VideoBackgroundEffectHorizontal", IconVariant.Regular, VideoBackgroundEffectHorizontalSizeAndContent.Values[1]) { } }
            public class VideoChat : Icon { public VideoChat() : base("VideoChat", IconVariant.Regular, VideoChatSizeAndContent.Values[1]) { } }
            public class VideoClip : Icon { public VideoClip() : base("VideoClip", IconVariant.Regular, VideoClipSizeAndContent.Values[1]) { } }
            public class VideoClipMultiple : Icon { public VideoClipMultiple() : base("VideoClipMultiple", IconVariant.Regular, VideoClipMultipleSizeAndContent.Values[1]) { } }
            public class VideoClipOff : Icon { public VideoClipOff() : base("VideoClipOff", IconVariant.Regular, VideoClipOffSizeAndContent.Values[1]) { } }
            public class VideoClipOptimize : Icon { public VideoClipOptimize() : base("VideoClipOptimize", IconVariant.Regular, VideoClipOptimizeSizeAndContent.Values[1]) { } }
            public class VideoOff : Icon { public VideoOff() : base("VideoOff", IconVariant.Regular, VideoOffSizeAndContent.Values[0]) { } }
            public class VideoPerson : Icon { public VideoPerson() : base("VideoPerson", IconVariant.Regular, VideoPersonSizeAndContent.Values[2]) { } }
            public class VideoPersonCall : Icon { public VideoPersonCall() : base("VideoPersonCall", IconVariant.Regular, VideoPersonCallSizeAndContent.Values[1]) { } }
            public class VideoPersonClock : Icon { public VideoPersonClock() : base("VideoPersonClock", IconVariant.Regular, VideoPersonClockSizeAndContent.Values[1]) { } }
            public class VideoPersonOff : Icon { public VideoPersonOff() : base("VideoPersonOff", IconVariant.Regular, VideoPersonOffSizeAndContent.Values[0]) { } }
            public class VideoPersonPulse : Icon { public VideoPersonPulse() : base("VideoPersonPulse", IconVariant.Regular, VideoPersonPulseSizeAndContent.Values[1]) { } }
            public class VideoPersonSparkle : Icon { public VideoPersonSparkle() : base("VideoPersonSparkle", IconVariant.Regular, VideoPersonSparkleSizeAndContent.Values[1]) { } }
            public class VideoPersonSparkleOff : Icon { public VideoPersonSparkleOff() : base("VideoPersonSparkleOff", IconVariant.Regular, VideoPersonSparkleOffSizeAndContent.Values[0]) { } }
            public class VideoPersonStar : Icon { public VideoPersonStar() : base("VideoPersonStar", IconVariant.Regular, VideoPersonStarSizeAndContent.Values[0]) { } }
            public class VideoPersonStarOff : Icon { public VideoPersonStarOff() : base("VideoPersonStarOff", IconVariant.Regular, VideoPersonStarOffSizeAndContent.Values[0]) { } }
            public class VideoPlayPause : Icon { public VideoPlayPause() : base("VideoPlayPause", IconVariant.Regular, VideoPlayPauseSizeAndContent.Values[0]) { } }
            public class VideoProhibited : Icon { public VideoProhibited() : base("VideoProhibited", IconVariant.Regular, VideoProhibitedSizeAndContent.Values[1]) { } }
            public class VideoRecording : Icon { public VideoRecording() : base("VideoRecording", IconVariant.Regular, VideoRecordingSizeAndContent.Values[0]) { } }
            public class VideoSecurity : Icon { public VideoSecurity() : base("VideoSecurity", IconVariant.Regular, VideoSecuritySizeAndContent.Values[0]) { } }
            public class VideoSwitch : Icon { public VideoSwitch() : base("VideoSwitch", IconVariant.Regular, VideoSwitchSizeAndContent.Values[0]) { } }
            public class VideoSync : Icon { public VideoSync() : base("VideoSync", IconVariant.Regular, VideoSyncSizeAndContent.Values[0]) { } }
            public class ViewDesktop : Icon { public ViewDesktop() : base("ViewDesktop", IconVariant.Regular, ViewDesktopSizeAndContent.Values[0]) { } }
            public class ViewDesktopMobile : Icon { public ViewDesktopMobile() : base("ViewDesktopMobile", IconVariant.Regular, ViewDesktopMobileSizeAndContent.Values[0]) { } }
            public class VirtualNetwork : Icon { public VirtualNetwork() : base("VirtualNetwork", IconVariant.Regular, VirtualNetworkSizeAndContent.Values[0]) { } }
            public class VirtualNetworkToolbox : Icon { public VirtualNetworkToolbox() : base("VirtualNetworkToolbox", IconVariant.Regular, VirtualNetworkToolboxSizeAndContent.Values[0]) { } }
            public class Voicemail : Icon { public Voicemail() : base("Voicemail", IconVariant.Regular, VoicemailSizeAndContent.Values[1]) { } }
            public class VoicemailArrowBack : Icon { public VoicemailArrowBack() : base("VoicemailArrowBack", IconVariant.Regular, VoicemailArrowBackSizeAndContent.Values[1]) { } }
            public class VoicemailArrowForward : Icon { public VoicemailArrowForward() : base("VoicemailArrowForward", IconVariant.Regular, VoicemailArrowForwardSizeAndContent.Values[1]) { } }
            public class VoicemailArrowSubtract : Icon { public VoicemailArrowSubtract() : base("VoicemailArrowSubtract", IconVariant.Regular, VoicemailArrowSubtractSizeAndContent.Values[0]) { } }
            public class VoicemailShield : Icon { public VoicemailShield() : base("VoicemailShield", IconVariant.Regular, VoicemailShieldSizeAndContent.Values[1]) { } }
            public class VoicemailSubtract : Icon { public VoicemailSubtract() : base("VoicemailSubtract", IconVariant.Regular, VoicemailSubtractSizeAndContent.Values[1]) { } }
            public class Vote : Icon { public Vote() : base("Vote", IconVariant.Regular, VoteSizeAndContent.Values[0]) { } }
            public class WalkieTalkie : Icon { public WalkieTalkie() : base("WalkieTalkie", IconVariant.Regular, WalkieTalkieSizeAndContent.Values[0]) { } }
            public class Wallet : Icon { public Wallet() : base("Wallet", IconVariant.Regular, WalletSizeAndContent.Values[1]) { } }
            public class WalletCreditCard : Icon { public WalletCreditCard() : base("WalletCreditCard", IconVariant.Regular, WalletCreditCardSizeAndContent.Values[1]) { } }
            public class Wallpaper : Icon { public Wallpaper() : base("Wallpaper", IconVariant.Regular, WallpaperSizeAndContent.Values[0]) { } }
            public class Wand : Icon { public Wand() : base("Wand", IconVariant.Regular, WandSizeAndContent.Values[1]) { } }
            public class Warning : Icon { public Warning() : base("Warning", IconVariant.Regular, WarningSizeAndContent.Values[2]) { } }
            public class WarningShield : Icon { public WarningShield() : base("WarningShield", IconVariant.Regular, WarningShieldSizeAndContent.Values[0]) { } }
            public class Washer : Icon { public Washer() : base("Washer", IconVariant.Regular, WasherSizeAndContent.Values[0]) { } }
            public class Water : Icon { public Water() : base("Water", IconVariant.Regular, WaterSizeAndContent.Values[1]) { } }
            public class WeatherBlowingSnow : Icon { public WeatherBlowingSnow() : base("WeatherBlowingSnow", IconVariant.Regular, WeatherBlowingSnowSizeAndContent.Values[0]) { } }
            public class WeatherCloudy : Icon { public WeatherCloudy() : base("WeatherCloudy", IconVariant.Regular, WeatherCloudySizeAndContent.Values[0]) { } }
            public class WeatherDrizzle : Icon { public WeatherDrizzle() : base("WeatherDrizzle", IconVariant.Regular, WeatherDrizzleSizeAndContent.Values[0]) { } }
            public class WeatherDuststorm : Icon { public WeatherDuststorm() : base("WeatherDuststorm", IconVariant.Regular, WeatherDuststormSizeAndContent.Values[0]) { } }
            public class WeatherFog : Icon { public WeatherFog() : base("WeatherFog", IconVariant.Regular, WeatherFogSizeAndContent.Values[0]) { } }
            public class WeatherHailDay : Icon { public WeatherHailDay() : base("WeatherHailDay", IconVariant.Regular, WeatherHailDaySizeAndContent.Values[0]) { } }
            public class WeatherHailNight : Icon { public WeatherHailNight() : base("WeatherHailNight", IconVariant.Regular, WeatherHailNightSizeAndContent.Values[0]) { } }
            public class WeatherHaze : Icon { public WeatherHaze() : base("WeatherHaze", IconVariant.Regular, WeatherHazeSizeAndContent.Values[0]) { } }
            public class WeatherMoon : Icon { public WeatherMoon() : base("WeatherMoon", IconVariant.Regular, WeatherMoonSizeAndContent.Values[1]) { } }
            public class WeatherMoonOff : Icon { public WeatherMoonOff() : base("WeatherMoonOff", IconVariant.Regular, WeatherMoonOffSizeAndContent.Values[1]) { } }
            public class WeatherPartlyCloudyDay : Icon { public WeatherPartlyCloudyDay() : base("WeatherPartlyCloudyDay", IconVariant.Regular, WeatherPartlyCloudyDaySizeAndContent.Values[1]) { } }
            public class WeatherPartlyCloudyNight : Icon { public WeatherPartlyCloudyNight() : base("WeatherPartlyCloudyNight", IconVariant.Regular, WeatherPartlyCloudyNightSizeAndContent.Values[0]) { } }
            public class WeatherRain : Icon { public WeatherRain() : base("WeatherRain", IconVariant.Regular, WeatherRainSizeAndContent.Values[0]) { } }
            public class WeatherRainShowersDay : Icon { public WeatherRainShowersDay() : base("WeatherRainShowersDay", IconVariant.Regular, WeatherRainShowersDaySizeAndContent.Values[0]) { } }
            public class WeatherRainShowersNight : Icon { public WeatherRainShowersNight() : base("WeatherRainShowersNight", IconVariant.Regular, WeatherRainShowersNightSizeAndContent.Values[0]) { } }
            public class WeatherRainSnow : Icon { public WeatherRainSnow() : base("WeatherRainSnow", IconVariant.Regular, WeatherRainSnowSizeAndContent.Values[0]) { } }
            public class WeatherSnow : Icon { public WeatherSnow() : base("WeatherSnow", IconVariant.Regular, WeatherSnowSizeAndContent.Values[0]) { } }
            public class WeatherSnowflake : Icon { public WeatherSnowflake() : base("WeatherSnowflake", IconVariant.Regular, WeatherSnowflakeSizeAndContent.Values[0]) { } }
            public class WeatherSnowShowerDay : Icon { public WeatherSnowShowerDay() : base("WeatherSnowShowerDay", IconVariant.Regular, WeatherSnowShowerDaySizeAndContent.Values[0]) { } }
            public class WeatherSnowShowerNight : Icon { public WeatherSnowShowerNight() : base("WeatherSnowShowerNight", IconVariant.Regular, WeatherSnowShowerNightSizeAndContent.Values[0]) { } }
            public class WeatherSqualls : Icon { public WeatherSqualls() : base("WeatherSqualls", IconVariant.Regular, WeatherSquallsSizeAndContent.Values[0]) { } }
            public class WeatherSunny : Icon { public WeatherSunny() : base("WeatherSunny", IconVariant.Regular, WeatherSunnySizeAndContent.Values[1]) { } }
            public class WeatherSunnyHigh : Icon { public WeatherSunnyHigh() : base("WeatherSunnyHigh", IconVariant.Regular, WeatherSunnyHighSizeAndContent.Values[0]) { } }
            public class WeatherSunnyLow : Icon { public WeatherSunnyLow() : base("WeatherSunnyLow", IconVariant.Regular, WeatherSunnyLowSizeAndContent.Values[0]) { } }
            public class WeatherThunderstorm : Icon { public WeatherThunderstorm() : base("WeatherThunderstorm", IconVariant.Regular, WeatherThunderstormSizeAndContent.Values[0]) { } }
            public class WebAsset : Icon { public WebAsset() : base("WebAsset", IconVariant.Regular, WebAssetSizeAndContent.Values[1]) { } }
            public class Whiteboard : Icon { public Whiteboard() : base("Whiteboard", IconVariant.Regular, WhiteboardSizeAndContent.Values[1]) { } }
            public class WhiteboardOff : Icon { public WhiteboardOff() : base("WhiteboardOff", IconVariant.Regular, WhiteboardOffSizeAndContent.Values[1]) { } }
            public class Wifi1 : Icon { public Wifi1() : base("Wifi1", IconVariant.Regular, Wifi1SizeAndContent.Values[0]) { } }
            public class Wifi2 : Icon { public Wifi2() : base("Wifi2", IconVariant.Regular, Wifi2SizeAndContent.Values[0]) { } }
            public class Wifi3 : Icon { public Wifi3() : base("Wifi3", IconVariant.Regular, Wifi3SizeAndContent.Values[0]) { } }
            public class Wifi4 : Icon { public Wifi4() : base("Wifi4", IconVariant.Regular, Wifi4SizeAndContent.Values[0]) { } }
            public class WifiLock : Icon { public WifiLock() : base("WifiLock", IconVariant.Regular, WifiLockSizeAndContent.Values[0]) { } }
            public class WifiOff : Icon { public WifiOff() : base("WifiOff", IconVariant.Regular, WifiOffSizeAndContent.Values[0]) { } }
            public class WifiSettings : Icon { public WifiSettings() : base("WifiSettings", IconVariant.Regular, WifiSettingsSizeAndContent.Values[0]) { } }
            public class WifiWarning : Icon { public WifiWarning() : base("WifiWarning", IconVariant.Regular, WifiWarningSizeAndContent.Values[0]) { } }
            public class Window : Icon { public Window() : base("Window", IconVariant.Regular, WindowSizeAndContent.Values[1]) { } }
            public class WindowAd : Icon { public WindowAd() : base("WindowAd", IconVariant.Regular, WindowAdSizeAndContent.Values[0]) { } }
            public class WindowAdOff : Icon { public WindowAdOff() : base("WindowAdOff", IconVariant.Regular, WindowAdOffSizeAndContent.Values[0]) { } }
            public class WindowAdPerson : Icon { public WindowAdPerson() : base("WindowAdPerson", IconVariant.Regular, WindowAdPersonSizeAndContent.Values[0]) { } }
            public class WindowApps : Icon { public WindowApps() : base("WindowApps", IconVariant.Regular, WindowAppsSizeAndContent.Values[1]) { } }
            public class WindowArrowUp : Icon { public WindowArrowUp() : base("WindowArrowUp", IconVariant.Regular, WindowArrowUpSizeAndContent.Values[1]) { } }
            public class WindowBulletList : Icon { public WindowBulletList() : base("WindowBulletList", IconVariant.Regular, WindowBulletListSizeAndContent.Values[0]) { } }
            public class WindowBulletListAdd : Icon { public WindowBulletListAdd() : base("WindowBulletListAdd", IconVariant.Regular, WindowBulletListAddSizeAndContent.Values[0]) { } }
            public class WindowConsole : Icon { public WindowConsole() : base("WindowConsole", IconVariant.Regular, WindowConsoleSizeAndContent.Values[0]) { } }
            public class WindowDatabase : Icon { public WindowDatabase() : base("WindowDatabase", IconVariant.Regular, WindowDatabaseSizeAndContent.Values[0]) { } }
            public class WindowDevEdit : Icon { public WindowDevEdit() : base("WindowDevEdit", IconVariant.Regular, WindowDevEditSizeAndContent.Values[1]) { } }
            public class WindowDevTools : Icon { public WindowDevTools() : base("WindowDevTools", IconVariant.Regular, WindowDevToolsSizeAndContent.Values[1]) { } }
            public class WindowEdit : Icon { public WindowEdit() : base("WindowEdit", IconVariant.Regular, WindowEditSizeAndContent.Values[1]) { } }
            public class WindowHeaderHorizontal : Icon { public WindowHeaderHorizontal() : base("WindowHeaderHorizontal", IconVariant.Regular, WindowHeaderHorizontalSizeAndContent.Values[0]) { } }
            public class WindowHeaderHorizontalOff : Icon { public WindowHeaderHorizontalOff() : base("WindowHeaderHorizontalOff", IconVariant.Regular, WindowHeaderHorizontalOffSizeAndContent.Values[0]) { } }
            public class WindowHeaderVertical : Icon { public WindowHeaderVertical() : base("WindowHeaderVertical", IconVariant.Regular, WindowHeaderVerticalSizeAndContent.Values[0]) { } }
            public class WindowInprivate : Icon { public WindowInprivate() : base("WindowInprivate", IconVariant.Regular, WindowInprivateSizeAndContent.Values[0]) { } }
            public class WindowInprivateAccount : Icon { public WindowInprivateAccount() : base("WindowInprivateAccount", IconVariant.Regular, WindowInprivateAccountSizeAndContent.Values[0]) { } }
            public class WindowLocationTarget : Icon { public WindowLocationTarget() : base("WindowLocationTarget", IconVariant.Regular, WindowLocationTargetSizeAndContent.Values[0]) { } }
            public class WindowMultiple : Icon { public WindowMultiple() : base("WindowMultiple", IconVariant.Regular, WindowMultipleSizeAndContent.Values[1]) { } }
            public class WindowMultipleSwap : Icon { public WindowMultipleSwap() : base("WindowMultipleSwap", IconVariant.Regular, WindowMultipleSwapSizeAndContent.Values[0]) { } }
            public class WindowNew : Icon { public WindowNew() : base("WindowNew", IconVariant.Regular, WindowNewSizeAndContent.Values[1]) { } }
            public class WindowPlay : Icon { public WindowPlay() : base("WindowPlay", IconVariant.Regular, WindowPlaySizeAndContent.Values[0]) { } }
            public class WindowSettings : Icon { public WindowSettings() : base("WindowSettings", IconVariant.Regular, WindowSettingsSizeAndContent.Values[0]) { } }
            public class WindowShield : Icon { public WindowShield() : base("WindowShield", IconVariant.Regular, WindowShieldSizeAndContent.Values[1]) { } }
            public class WindowText : Icon { public WindowText() : base("WindowText", IconVariant.Regular, WindowTextSizeAndContent.Values[0]) { } }
            public class WindowWrench : Icon { public WindowWrench() : base("WindowWrench", IconVariant.Regular, WindowWrenchSizeAndContent.Values[1]) { } }
            public class Wrench : Icon { public Wrench() : base("Wrench", IconVariant.Regular, WrenchSizeAndContent.Values[1]) { } }
            public class WrenchScrewdriver : Icon { public WrenchScrewdriver() : base("WrenchScrewdriver", IconVariant.Regular, WrenchScrewdriverSizeAndContent.Values[0]) { } }
            public class XboxConsole : Icon { public XboxConsole() : base("XboxConsole", IconVariant.Regular, XboxConsoleSizeAndContent.Values[0]) { } }
            public class XboxController : Icon { public XboxController() : base("XboxController", IconVariant.Regular, XboxControllerSizeAndContent.Values[1]) { } }
            public class XboxControllerError : Icon { public XboxControllerError() : base("XboxControllerError", IconVariant.Regular, XboxControllerErrorSizeAndContent.Values[0]) { } }
            public class Xray : Icon { public Xray() : base("Xray", IconVariant.Regular, XraySizeAndContent.Values[0]) { } }
            public class ZoomFit : Icon { public ZoomFit() : base("ZoomFit", IconVariant.Regular, ZoomFitSizeAndContent.Values[1]) { } }
            public class ZoomIn : Icon { public ZoomIn() : base("ZoomIn", IconVariant.Regular, ZoomInSizeAndContent.Values[1]) { } }
            public class ZoomOut : Icon { public ZoomOut() : base("ZoomOut", IconVariant.Regular, ZoomOutSizeAndContent.Values[1]) { } }
        }
    }
}

#pragma warning restore 1591
