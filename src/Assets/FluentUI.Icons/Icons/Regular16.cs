// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

#pragma warning disable 1591

namespace Microsoft.FluentUI.AspNetCore.Components;

public static partial class Icons
{
    public static partial class Regular
    {
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public static partial class Size16
        {
            public class Accessibility : Icon { public Accessibility() : base("Accessibility", IconVariant.Regular, AccessibilitySizeAndContent.Values[0]) { } }
            public class Add : Icon { public Add() : base("Add", IconVariant.Regular, AddSizeAndContent.Values[1]) { } }
            public class AddCircle : Icon { public AddCircle() : base("AddCircle", IconVariant.Regular, AddCircleSizeAndContent.Values[1]) { } }
            public class AddSquare : Icon { public AddSquare() : base("AddSquare", IconVariant.Regular, AddSquareSizeAndContent.Values[0]) { } }
            public class AddSquareMultiple : Icon { public AddSquareMultiple() : base("AddSquareMultiple", IconVariant.Regular, AddSquareMultipleSizeAndContent.Values[0]) { } }
            public class AddSubtractCircle : Icon { public AddSubtractCircle() : base("AddSubtractCircle", IconVariant.Regular, AddSubtractCircleSizeAndContent.Values[0]) { } }
            public class AirplaneLanding : Icon { public AirplaneLanding() : base("AirplaneLanding", IconVariant.Regular, AirplaneLandingSizeAndContent.Values[0]) { } }
            public class AirplaneTakeOff : Icon { public AirplaneTakeOff() : base("AirplaneTakeOff", IconVariant.Regular, AirplaneTakeOffSizeAndContent.Values[0]) { } }
            public class Alert : Icon { public Alert() : base("Alert", IconVariant.Regular, AlertSizeAndContent.Values[1]) { } }
            public class AlertBadge : Icon { public AlertBadge() : base("AlertBadge", IconVariant.Regular, AlertBadgeSizeAndContent.Values[0]) { } }
            public class AlertOff : Icon { public AlertOff() : base("AlertOff", IconVariant.Regular, AlertOffSizeAndContent.Values[0]) { } }
            public class AlertOn : Icon { public AlertOn() : base("AlertOn", IconVariant.Regular, AlertOnSizeAndContent.Values[0]) { } }
            public class AlertSnooze : Icon { public AlertSnooze() : base("AlertSnooze", IconVariant.Regular, AlertSnoozeSizeAndContent.Values[1]) { } }
            public class AlertUrgent : Icon { public AlertUrgent() : base("AlertUrgent", IconVariant.Regular, AlertUrgentSizeAndContent.Values[0]) { } }
            public class AlignBottom : Icon { public AlignBottom() : base("AlignBottom", IconVariant.Regular, AlignBottomSizeAndContent.Values[0]) { } }
            public class AlignCenterHorizontal : Icon { public AlignCenterHorizontal() : base("AlignCenterHorizontal", IconVariant.Regular, AlignCenterHorizontalSizeAndContent.Values[0]) { } }
            public class AlignCenterVertical : Icon { public AlignCenterVertical() : base("AlignCenterVertical", IconVariant.Regular, AlignCenterVerticalSizeAndContent.Values[0]) { } }
            public class AlignDistributeBottom : Icon { public AlignDistributeBottom() : base("AlignDistributeBottom", IconVariant.Regular, AlignDistributeBottomSizeAndContent.Values[0]) { } }
            public class AlignDistributeLeft : Icon { public AlignDistributeLeft() : base("AlignDistributeLeft", IconVariant.Regular, AlignDistributeLeftSizeAndContent.Values[0]) { } }
            public class AlignDistributeRight : Icon { public AlignDistributeRight() : base("AlignDistributeRight", IconVariant.Regular, AlignDistributeRightSizeAndContent.Values[0]) { } }
            public class AlignDistributeTop : Icon { public AlignDistributeTop() : base("AlignDistributeTop", IconVariant.Regular, AlignDistributeTopSizeAndContent.Values[0]) { } }
            public class AlignLeft : Icon { public AlignLeft() : base("AlignLeft", IconVariant.Regular, AlignLeftSizeAndContent.Values[0]) { } }
            public class AlignRight : Icon { public AlignRight() : base("AlignRight", IconVariant.Regular, AlignRightSizeAndContent.Values[0]) { } }
            public class AlignStretchHorizontal : Icon { public AlignStretchHorizontal() : base("AlignStretchHorizontal", IconVariant.Regular, AlignStretchHorizontalSizeAndContent.Values[0]) { } }
            public class AlignStretchVertical : Icon { public AlignStretchVertical() : base("AlignStretchVertical", IconVariant.Regular, AlignStretchVerticalSizeAndContent.Values[0]) { } }
            public class AlignTop : Icon { public AlignTop() : base("AlignTop", IconVariant.Regular, AlignTopSizeAndContent.Values[0]) { } }
            public class AnimalCat : Icon { public AnimalCat() : base("AnimalCat", IconVariant.Regular, AnimalCatSizeAndContent.Values[0]) { } }
            public class AnimalDog : Icon { public AnimalDog() : base("AnimalDog", IconVariant.Regular, AnimalDogSizeAndContent.Values[0]) { } }
            public class AnimalRabbit : Icon { public AnimalRabbit() : base("AnimalRabbit", IconVariant.Regular, AnimalRabbitSizeAndContent.Values[0]) { } }
            public class AnimalTurtle : Icon { public AnimalTurtle() : base("AnimalTurtle", IconVariant.Regular, AnimalTurtleSizeAndContent.Values[0]) { } }
            public class AppFolder : Icon { public AppFolder() : base("AppFolder", IconVariant.Regular, AppFolderSizeAndContent.Values[0]) { } }
            public class ApprovalsApp : Icon { public ApprovalsApp() : base("ApprovalsApp", IconVariant.Regular, ApprovalsAppSizeAndContent.Values[0]) { } }
            public class Apps : Icon { public Apps() : base("Apps", IconVariant.Regular, AppsSizeAndContent.Values[0]) { } }
            public class AppsAddIn : Icon { public AppsAddIn() : base("AppsAddIn", IconVariant.Regular, AppsAddInSizeAndContent.Values[0]) { } }
            public class Archive : Icon { public Archive() : base("Archive", IconVariant.Regular, ArchiveSizeAndContent.Values[0]) { } }
            public class ArchiveArrowBack : Icon { public ArchiveArrowBack() : base("ArchiveArrowBack", IconVariant.Regular, ArchiveArrowBackSizeAndContent.Values[0]) { } }
            public class ArchiveMultiple : Icon { public ArchiveMultiple() : base("ArchiveMultiple", IconVariant.Regular, ArchiveMultipleSizeAndContent.Values[0]) { } }
            public class ArchiveSettings : Icon { public ArchiveSettings() : base("ArchiveSettings", IconVariant.Regular, ArchiveSettingsSizeAndContent.Values[0]) { } }
            public class ArrowBidirectionalLeftRight : Icon { public ArrowBidirectionalLeftRight() : base("ArrowBidirectionalLeftRight", IconVariant.Regular, ArrowBidirectionalLeftRightSizeAndContent.Values[0]) { } }
            public class ArrowBidirectionalUpDown : Icon { public ArrowBidirectionalUpDown() : base("ArrowBidirectionalUpDown", IconVariant.Regular, ArrowBidirectionalUpDownSizeAndContent.Values[1]) { } }
            public class ArrowBounce : Icon { public ArrowBounce() : base("ArrowBounce", IconVariant.Regular, ArrowBounceSizeAndContent.Values[0]) { } }
            public class ArrowCircleDown : Icon { public ArrowCircleDown() : base("ArrowCircleDown", IconVariant.Regular, ArrowCircleDownSizeAndContent.Values[1]) { } }
            public class ArrowCircleDownRight : Icon { public ArrowCircleDownRight() : base("ArrowCircleDownRight", IconVariant.Regular, ArrowCircleDownRightSizeAndContent.Values[0]) { } }
            public class ArrowCircleLeft : Icon { public ArrowCircleLeft() : base("ArrowCircleLeft", IconVariant.Regular, ArrowCircleLeftSizeAndContent.Values[1]) { } }
            public class ArrowCircleRight : Icon { public ArrowCircleRight() : base("ArrowCircleRight", IconVariant.Regular, ArrowCircleRightSizeAndContent.Values[1]) { } }
            public class ArrowCircleUp : Icon { public ArrowCircleUp() : base("ArrowCircleUp", IconVariant.Regular, ArrowCircleUpSizeAndContent.Values[1]) { } }
            public class ArrowClockwise : Icon { public ArrowClockwise() : base("ArrowClockwise", IconVariant.Regular, ArrowClockwiseSizeAndContent.Values[1]) { } }
            public class ArrowClockwiseDashes : Icon { public ArrowClockwiseDashes() : base("ArrowClockwiseDashes", IconVariant.Regular, ArrowClockwiseDashesSizeAndContent.Values[0]) { } }
            public class ArrowCounterclockwise : Icon { public ArrowCounterclockwise() : base("ArrowCounterclockwise", IconVariant.Regular, ArrowCounterclockwiseSizeAndContent.Values[1]) { } }
            public class ArrowCurveDownLeft : Icon { public ArrowCurveDownLeft() : base("ArrowCurveDownLeft", IconVariant.Regular, ArrowCurveDownLeftSizeAndContent.Values[0]) { } }
            public class ArrowDown : Icon { public ArrowDown() : base("ArrowDown", IconVariant.Regular, ArrowDownSizeAndContent.Values[1]) { } }
            public class ArrowDownExclamation : Icon { public ArrowDownExclamation() : base("ArrowDownExclamation", IconVariant.Regular, ArrowDownExclamationSizeAndContent.Values[0]) { } }
            public class ArrowDownLeft : Icon { public ArrowDownLeft() : base("ArrowDownLeft", IconVariant.Regular, ArrowDownLeftSizeAndContent.Values[0]) { } }
            public class ArrowDownload : Icon { public ArrowDownload() : base("ArrowDownload", IconVariant.Regular, ArrowDownloadSizeAndContent.Values[0]) { } }
            public class ArrowDownloadOff : Icon { public ArrowDownloadOff() : base("ArrowDownloadOff", IconVariant.Regular, ArrowDownloadOffSizeAndContent.Values[0]) { } }
            public class ArrowEnter : Icon { public ArrowEnter() : base("ArrowEnter", IconVariant.Regular, ArrowEnterSizeAndContent.Values[0]) { } }
            public class ArrowExpand : Icon { public ArrowExpand() : base("ArrowExpand", IconVariant.Regular, ArrowExpandSizeAndContent.Values[0]) { } }
            public class ArrowExport : Icon { public ArrowExport() : base("ArrowExport", IconVariant.Regular, ArrowExportSizeAndContent.Values[0]) { } }
            public class ArrowExportLtr : Icon { public ArrowExportLtr() : base("ArrowExportLtr", IconVariant.Regular, ArrowExportLtrSizeAndContent.Values[0]) { } }
            public class ArrowExportRtl : Icon { public ArrowExportRtl() : base("ArrowExportRtl", IconVariant.Regular, ArrowExportRtlSizeAndContent.Values[0]) { } }
            public class ArrowExportUp : Icon { public ArrowExportUp() : base("ArrowExportUp", IconVariant.Regular, ArrowExportUpSizeAndContent.Values[0]) { } }
            public class ArrowFit : Icon { public ArrowFit() : base("ArrowFit", IconVariant.Regular, ArrowFitSizeAndContent.Values[0]) { } }
            public class ArrowFitIn : Icon { public ArrowFitIn() : base("ArrowFitIn", IconVariant.Regular, ArrowFitInSizeAndContent.Values[0]) { } }
            public class ArrowFlowDiagonalUpRight : Icon { public ArrowFlowDiagonalUpRight() : base("ArrowFlowDiagonalUpRight", IconVariant.Regular, ArrowFlowDiagonalUpRightSizeAndContent.Values[0]) { } }
            public class ArrowFlowUpRight : Icon { public ArrowFlowUpRight() : base("ArrowFlowUpRight", IconVariant.Regular, ArrowFlowUpRightSizeAndContent.Values[0]) { } }
            public class ArrowForward : Icon { public ArrowForward() : base("ArrowForward", IconVariant.Regular, ArrowForwardSizeAndContent.Values[0]) { } }
            public class ArrowHookDownLeft : Icon { public ArrowHookDownLeft() : base("ArrowHookDownLeft", IconVariant.Regular, ArrowHookDownLeftSizeAndContent.Values[0]) { } }
            public class ArrowHookDownRight : Icon { public ArrowHookDownRight() : base("ArrowHookDownRight", IconVariant.Regular, ArrowHookDownRightSizeAndContent.Values[0]) { } }
            public class ArrowHookUpLeft : Icon { public ArrowHookUpLeft() : base("ArrowHookUpLeft", IconVariant.Regular, ArrowHookUpLeftSizeAndContent.Values[0]) { } }
            public class ArrowHookUpRight : Icon { public ArrowHookUpRight() : base("ArrowHookUpRight", IconVariant.Regular, ArrowHookUpRightSizeAndContent.Values[0]) { } }
            public class ArrowImport : Icon { public ArrowImport() : base("ArrowImport", IconVariant.Regular, ArrowImportSizeAndContent.Values[0]) { } }
            public class ArrowLeft : Icon { public ArrowLeft() : base("ArrowLeft", IconVariant.Regular, ArrowLeftSizeAndContent.Values[1]) { } }
            public class ArrowMaximize : Icon { public ArrowMaximize() : base("ArrowMaximize", IconVariant.Regular, ArrowMaximizeSizeAndContent.Values[0]) { } }
            public class ArrowMinimize : Icon { public ArrowMinimize() : base("ArrowMinimize", IconVariant.Regular, ArrowMinimizeSizeAndContent.Values[0]) { } }
            public class ArrowNext : Icon { public ArrowNext() : base("ArrowNext", IconVariant.Regular, ArrowNextSizeAndContent.Values[1]) { } }
            public class ArrowOutlineDownLeft : Icon { public ArrowOutlineDownLeft() : base("ArrowOutlineDownLeft", IconVariant.Regular, ArrowOutlineDownLeftSizeAndContent.Values[0]) { } }
            public class ArrowParagraph : Icon { public ArrowParagraph() : base("ArrowParagraph", IconVariant.Regular, ArrowParagraphSizeAndContent.Values[0]) { } }
            public class ArrowPrevious : Icon { public ArrowPrevious() : base("ArrowPrevious", IconVariant.Regular, ArrowPreviousSizeAndContent.Values[1]) { } }
            public class ArrowRedo : Icon { public ArrowRedo() : base("ArrowRedo", IconVariant.Regular, ArrowRedoSizeAndContent.Values[0]) { } }
            public class ArrowRepeat1 : Icon { public ArrowRepeat1() : base("ArrowRepeat1", IconVariant.Regular, ArrowRepeat1SizeAndContent.Values[0]) { } }
            public class ArrowRepeatAll : Icon { public ArrowRepeatAll() : base("ArrowRepeatAll", IconVariant.Regular, ArrowRepeatAllSizeAndContent.Values[0]) { } }
            public class ArrowRepeatAllOff : Icon { public ArrowRepeatAllOff() : base("ArrowRepeatAllOff", IconVariant.Regular, ArrowRepeatAllOffSizeAndContent.Values[0]) { } }
            public class ArrowReply : Icon { public ArrowReply() : base("ArrowReply", IconVariant.Regular, ArrowReplySizeAndContent.Values[0]) { } }
            public class ArrowReplyAll : Icon { public ArrowReplyAll() : base("ArrowReplyAll", IconVariant.Regular, ArrowReplyAllSizeAndContent.Values[0]) { } }
            public class ArrowReplyDown : Icon { public ArrowReplyDown() : base("ArrowReplyDown", IconVariant.Regular, ArrowReplyDownSizeAndContent.Values[0]) { } }
            public class ArrowRight : Icon { public ArrowRight() : base("ArrowRight", IconVariant.Regular, ArrowRightSizeAndContent.Values[1]) { } }
            public class ArrowRotateClockwise : Icon { public ArrowRotateClockwise() : base("ArrowRotateClockwise", IconVariant.Regular, ArrowRotateClockwiseSizeAndContent.Values[0]) { } }
            public class ArrowShuffle : Icon { public ArrowShuffle() : base("ArrowShuffle", IconVariant.Regular, ArrowShuffleSizeAndContent.Values[0]) { } }
            public class ArrowShuffleOff : Icon { public ArrowShuffleOff() : base("ArrowShuffleOff", IconVariant.Regular, ArrowShuffleOffSizeAndContent.Values[0]) { } }
            public class ArrowSort : Icon { public ArrowSort() : base("ArrowSort", IconVariant.Regular, ArrowSortSizeAndContent.Values[0]) { } }
            public class ArrowSortDown : Icon { public ArrowSortDown() : base("ArrowSortDown", IconVariant.Regular, ArrowSortDownSizeAndContent.Values[0]) { } }
            public class ArrowSortDownLines : Icon { public ArrowSortDownLines() : base("ArrowSortDownLines", IconVariant.Regular, ArrowSortDownLinesSizeAndContent.Values[0]) { } }
            public class ArrowSortUp : Icon { public ArrowSortUp() : base("ArrowSortUp", IconVariant.Regular, ArrowSortUpSizeAndContent.Values[0]) { } }
            public class ArrowSplit : Icon { public ArrowSplit() : base("ArrowSplit", IconVariant.Regular, ArrowSplitSizeAndContent.Values[0]) { } }
            public class ArrowSprint : Icon { public ArrowSprint() : base("ArrowSprint", IconVariant.Regular, ArrowSprintSizeAndContent.Values[0]) { } }
            public class ArrowStepBack : Icon { public ArrowStepBack() : base("ArrowStepBack", IconVariant.Regular, ArrowStepBackSizeAndContent.Values[0]) { } }
            public class ArrowStepIn : Icon { public ArrowStepIn() : base("ArrowStepIn", IconVariant.Regular, ArrowStepInSizeAndContent.Values[1]) { } }
            public class ArrowStepInDiagonalDownLeft : Icon { public ArrowStepInDiagonalDownLeft() : base("ArrowStepInDiagonalDownLeft", IconVariant.Regular, ArrowStepInDiagonalDownLeftSizeAndContent.Values[0]) { } }
            public class ArrowStepInLeft : Icon { public ArrowStepInLeft() : base("ArrowStepInLeft", IconVariant.Regular, ArrowStepInLeftSizeAndContent.Values[1]) { } }
            public class ArrowStepInRight : Icon { public ArrowStepInRight() : base("ArrowStepInRight", IconVariant.Regular, ArrowStepInRightSizeAndContent.Values[1]) { } }
            public class ArrowStepOut : Icon { public ArrowStepOut() : base("ArrowStepOut", IconVariant.Regular, ArrowStepOutSizeAndContent.Values[1]) { } }
            public class ArrowStepOver : Icon { public ArrowStepOver() : base("ArrowStepOver", IconVariant.Regular, ArrowStepOverSizeAndContent.Values[0]) { } }
            public class ArrowSwap : Icon { public ArrowSwap() : base("ArrowSwap", IconVariant.Regular, ArrowSwapSizeAndContent.Values[0]) { } }
            public class ArrowSync : Icon { public ArrowSync() : base("ArrowSync", IconVariant.Regular, ArrowSyncSizeAndContent.Values[1]) { } }
            public class ArrowSyncCircle : Icon { public ArrowSyncCircle() : base("ArrowSyncCircle", IconVariant.Regular, ArrowSyncCircleSizeAndContent.Values[0]) { } }
            public class ArrowSyncOff : Icon { public ArrowSyncOff() : base("ArrowSyncOff", IconVariant.Regular, ArrowSyncOffSizeAndContent.Values[1]) { } }
            public class ArrowTrending : Icon { public ArrowTrending() : base("ArrowTrending", IconVariant.Regular, ArrowTrendingSizeAndContent.Values[1]) { } }
            public class ArrowTrendingDown : Icon { public ArrowTrendingDown() : base("ArrowTrendingDown", IconVariant.Regular, ArrowTrendingDownSizeAndContent.Values[0]) { } }
            public class ArrowUndo : Icon { public ArrowUndo() : base("ArrowUndo", IconVariant.Regular, ArrowUndoSizeAndContent.Values[0]) { } }
            public class ArrowUp : Icon { public ArrowUp() : base("ArrowUp", IconVariant.Regular, ArrowUpSizeAndContent.Values[1]) { } }
            public class ArrowUpLeft : Icon { public ArrowUpLeft() : base("ArrowUpLeft", IconVariant.Regular, ArrowUpLeftSizeAndContent.Values[0]) { } }
            public class ArrowUpload : Icon { public ArrowUpload() : base("ArrowUpload", IconVariant.Regular, ArrowUploadSizeAndContent.Values[0]) { } }
            public class ArrowUpRight : Icon { public ArrowUpRight() : base("ArrowUpRight", IconVariant.Regular, ArrowUpRightSizeAndContent.Values[0]) { } }
            public class ArrowUpRightDashes : Icon { public ArrowUpRightDashes() : base("ArrowUpRightDashes", IconVariant.Regular, ArrowUpRightDashesSizeAndContent.Values[0]) { } }
            public class Attach : Icon { public Attach() : base("Attach", IconVariant.Regular, AttachSizeAndContent.Values[1]) { } }
            public class Autosum : Icon { public Autosum() : base("Autosum", IconVariant.Regular, AutosumSizeAndContent.Values[0]) { } }
            public class Backpack : Icon { public Backpack() : base("Backpack", IconVariant.Regular, BackpackSizeAndContent.Values[1]) { } }
            public class Backspace : Icon { public Backspace() : base("Backspace", IconVariant.Regular, BackspaceSizeAndContent.Values[0]) { } }
            public class Balloon : Icon { public Balloon() : base("Balloon", IconVariant.Regular, BalloonSizeAndContent.Values[1]) { } }
            public class Battery10 : Icon { public Battery10() : base("Battery10", IconVariant.Regular, Battery10SizeAndContent.Values[0]) { } }
            public class Beach : Icon { public Beach() : base("Beach", IconVariant.Regular, BeachSizeAndContent.Values[0]) { } }
            public class Beaker : Icon { public Beaker() : base("Beaker", IconVariant.Regular, BeakerSizeAndContent.Values[0]) { } }
            public class BeakerEmpty : Icon { public BeakerEmpty() : base("BeakerEmpty", IconVariant.Regular, BeakerEmptySizeAndContent.Values[0]) { } }
            public class BeakerSettings : Icon { public BeakerSettings() : base("BeakerSettings", IconVariant.Regular, BeakerSettingsSizeAndContent.Values[0]) { } }
            public class Bed : Icon { public Bed() : base("Bed", IconVariant.Regular, BedSizeAndContent.Values[0]) { } }
            public class BinderTriangle : Icon { public BinderTriangle() : base("BinderTriangle", IconVariant.Regular, BinderTriangleSizeAndContent.Values[0]) { } }
            public class Bluetooth : Icon { public Bluetooth() : base("Bluetooth", IconVariant.Regular, BluetoothSizeAndContent.Values[0]) { } }
            public class Blur : Icon { public Blur() : base("Blur", IconVariant.Regular, BlurSizeAndContent.Values[0]) { } }
            public class Board : Icon { public Board() : base("Board", IconVariant.Regular, BoardSizeAndContent.Values[0]) { } }
            public class BoardHeart : Icon { public BoardHeart() : base("BoardHeart", IconVariant.Regular, BoardHeartSizeAndContent.Values[0]) { } }
            public class BoardSplit : Icon { public BoardSplit() : base("BoardSplit", IconVariant.Regular, BoardSplitSizeAndContent.Values[0]) { } }
            public class Book : Icon { public Book() : base("Book", IconVariant.Regular, BookSizeAndContent.Values[0]) { } }
            public class BookDatabase : Icon { public BookDatabase() : base("BookDatabase", IconVariant.Regular, BookDatabaseSizeAndContent.Values[0]) { } }
            public class BookDismiss : Icon { public BookDismiss() : base("BookDismiss", IconVariant.Regular, BookDismissSizeAndContent.Values[0]) { } }
            public class Bookmark : Icon { public Bookmark() : base("Bookmark", IconVariant.Regular, BookmarkSizeAndContent.Values[0]) { } }
            public class BookmarkMultiple : Icon { public BookmarkMultiple() : base("BookmarkMultiple", IconVariant.Regular, BookmarkMultipleSizeAndContent.Values[0]) { } }
            public class BookNumber : Icon { public BookNumber() : base("BookNumber", IconVariant.Regular, BookNumberSizeAndContent.Values[0]) { } }
            public class BookOpen : Icon { public BookOpen() : base("BookOpen", IconVariant.Regular, BookOpenSizeAndContent.Values[0]) { } }
            public class BookToolbox : Icon { public BookToolbox() : base("BookToolbox", IconVariant.Regular, BookToolboxSizeAndContent.Values[0]) { } }
            public class BorderAll : Icon { public BorderAll() : base("BorderAll", IconVariant.Regular, BorderAllSizeAndContent.Values[0]) { } }
            public class BorderInside : Icon { public BorderInside() : base("BorderInside", IconVariant.Regular, BorderInsideSizeAndContent.Values[0]) { } }
            public class BorderNone : Icon { public BorderNone() : base("BorderNone", IconVariant.Regular, BorderNoneSizeAndContent.Values[0]) { } }
            public class BowlChopsticks : Icon { public BowlChopsticks() : base("BowlChopsticks", IconVariant.Regular, BowlChopsticksSizeAndContent.Values[0]) { } }
            public class Box : Icon { public Box() : base("Box", IconVariant.Regular, BoxSizeAndContent.Values[0]) { } }
            public class BoxSearch : Icon { public BoxSearch() : base("BoxSearch", IconVariant.Regular, BoxSearchSizeAndContent.Values[0]) { } }
            public class Braces : Icon { public Braces() : base("Braces", IconVariant.Regular, BracesSizeAndContent.Values[0]) { } }
            public class BracesCheckmark : Icon { public BracesCheckmark() : base("BracesCheckmark", IconVariant.Regular, BracesCheckmarkSizeAndContent.Values[0]) { } }
            public class BracesDismiss : Icon { public BracesDismiss() : base("BracesDismiss", IconVariant.Regular, BracesDismissSizeAndContent.Values[0]) { } }
            public class Branch : Icon { public Branch() : base("Branch", IconVariant.Regular, BranchSizeAndContent.Values[0]) { } }
            public class BranchCompare : Icon { public BranchCompare() : base("BranchCompare", IconVariant.Regular, BranchCompareSizeAndContent.Values[0]) { } }
            public class BranchFork : Icon { public BranchFork() : base("BranchFork", IconVariant.Regular, BranchForkSizeAndContent.Values[0]) { } }
            public class BranchRequest : Icon { public BranchRequest() : base("BranchRequest", IconVariant.Regular, BranchRequestSizeAndContent.Values[0]) { } }
            public class Briefcase : Icon { public Briefcase() : base("Briefcase", IconVariant.Regular, BriefcaseSizeAndContent.Values[1]) { } }
            public class BriefcaseMedical : Icon { public BriefcaseMedical() : base("BriefcaseMedical", IconVariant.Regular, BriefcaseMedicalSizeAndContent.Values[0]) { } }
            public class BriefcaseOff : Icon { public BriefcaseOff() : base("BriefcaseOff", IconVariant.Regular, BriefcaseOffSizeAndContent.Values[0]) { } }
            public class BrightnessHigh : Icon { public BrightnessHigh() : base("BrightnessHigh", IconVariant.Regular, BrightnessHighSizeAndContent.Values[0]) { } }
            public class BrightnessLow : Icon { public BrightnessLow() : base("BrightnessLow", IconVariant.Regular, BrightnessLowSizeAndContent.Values[0]) { } }
            public class BroadActivityFeed : Icon { public BroadActivityFeed() : base("BroadActivityFeed", IconVariant.Regular, BroadActivityFeedSizeAndContent.Values[0]) { } }
            public class Broom : Icon { public Broom() : base("Broom", IconVariant.Regular, BroomSizeAndContent.Values[0]) { } }
            public class Bug : Icon { public Bug() : base("Bug", IconVariant.Regular, BugSizeAndContent.Values[0]) { } }
            public class Building : Icon { public Building() : base("Building", IconVariant.Regular, BuildingSizeAndContent.Values[0]) { } }
            public class BuildingBank : Icon { public BuildingBank() : base("BuildingBank", IconVariant.Regular, BuildingBankSizeAndContent.Values[0]) { } }
            public class BuildingBankLink : Icon { public BuildingBankLink() : base("BuildingBankLink", IconVariant.Regular, BuildingBankLinkSizeAndContent.Values[0]) { } }
            public class BuildingDesktop : Icon { public BuildingDesktop() : base("BuildingDesktop", IconVariant.Regular, BuildingDesktopSizeAndContent.Values[0]) { } }
            public class BuildingFactory : Icon { public BuildingFactory() : base("BuildingFactory", IconVariant.Regular, BuildingFactorySizeAndContent.Values[0]) { } }
            public class BuildingGovernment : Icon { public BuildingGovernment() : base("BuildingGovernment", IconVariant.Regular, BuildingGovernmentSizeAndContent.Values[0]) { } }
            public class BuildingGovernmentSearch : Icon { public BuildingGovernmentSearch() : base("BuildingGovernmentSearch", IconVariant.Regular, BuildingGovernmentSearchSizeAndContent.Values[0]) { } }
            public class BuildingHome : Icon { public BuildingHome() : base("BuildingHome", IconVariant.Regular, BuildingHomeSizeAndContent.Values[0]) { } }
            public class BuildingMosque : Icon { public BuildingMosque() : base("BuildingMosque", IconVariant.Regular, BuildingMosqueSizeAndContent.Values[1]) { } }
            public class BuildingPeople : Icon { public BuildingPeople() : base("BuildingPeople", IconVariant.Regular, BuildingPeopleSizeAndContent.Values[0]) { } }
            public class BuildingShop : Icon { public BuildingShop() : base("BuildingShop", IconVariant.Regular, BuildingShopSizeAndContent.Values[0]) { } }
            public class BuildingSkyscraper : Icon { public BuildingSkyscraper() : base("BuildingSkyscraper", IconVariant.Regular, BuildingSkyscraperSizeAndContent.Values[0]) { } }
            public class BuildingSwap : Icon { public BuildingSwap() : base("BuildingSwap", IconVariant.Regular, BuildingSwapSizeAndContent.Values[0]) { } }
            public class Button : Icon { public Button() : base("Button", IconVariant.Regular, ButtonSizeAndContent.Values[0]) { } }
            public class Calculator : Icon { public Calculator() : base("Calculator", IconVariant.Regular, CalculatorSizeAndContent.Values[0]) { } }
            public class CalculatorMultiple : Icon { public CalculatorMultiple() : base("CalculatorMultiple", IconVariant.Regular, CalculatorMultipleSizeAndContent.Values[0]) { } }
            public class Calendar : Icon { public Calendar() : base("Calendar", IconVariant.Regular, CalendarSizeAndContent.Values[1]) { } }
            public class Calendar3Day : Icon { public Calendar3Day() : base("Calendar3Day", IconVariant.Regular, Calendar3DaySizeAndContent.Values[0]) { } }
            public class CalendarAdd : Icon { public CalendarAdd() : base("CalendarAdd", IconVariant.Regular, CalendarAddSizeAndContent.Values[0]) { } }
            public class CalendarArrowCounterclockwise : Icon { public CalendarArrowCounterclockwise() : base("CalendarArrowCounterclockwise", IconVariant.Regular, CalendarArrowCounterclockwiseSizeAndContent.Values[0]) { } }
            public class CalendarArrowRight : Icon { public CalendarArrowRight() : base("CalendarArrowRight", IconVariant.Regular, CalendarArrowRightSizeAndContent.Values[0]) { } }
            public class CalendarAssistant : Icon { public CalendarAssistant() : base("CalendarAssistant", IconVariant.Regular, CalendarAssistantSizeAndContent.Values[0]) { } }
            public class CalendarCancel : Icon { public CalendarCancel() : base("CalendarCancel", IconVariant.Regular, CalendarCancelSizeAndContent.Values[0]) { } }
            public class CalendarCheckmark : Icon { public CalendarCheckmark() : base("CalendarCheckmark", IconVariant.Regular, CalendarCheckmarkSizeAndContent.Values[0]) { } }
            public class CalendarClock : Icon { public CalendarClock() : base("CalendarClock", IconVariant.Regular, CalendarClockSizeAndContent.Values[0]) { } }
            public class CalendarDataBar : Icon { public CalendarDataBar() : base("CalendarDataBar", IconVariant.Regular, CalendarDataBarSizeAndContent.Values[0]) { } }
            public class CalendarDay : Icon { public CalendarDay() : base("CalendarDay", IconVariant.Regular, CalendarDaySizeAndContent.Values[0]) { } }
            public class CalendarEdit : Icon { public CalendarEdit() : base("CalendarEdit", IconVariant.Regular, CalendarEditSizeAndContent.Values[0]) { } }
            public class CalendarEmpty : Icon { public CalendarEmpty() : base("CalendarEmpty", IconVariant.Regular, CalendarEmptySizeAndContent.Values[0]) { } }
            public class CalendarError : Icon { public CalendarError() : base("CalendarError", IconVariant.Regular, CalendarErrorSizeAndContent.Values[0]) { } }
            public class CalendarInfo : Icon { public CalendarInfo() : base("CalendarInfo", IconVariant.Regular, CalendarInfoSizeAndContent.Values[0]) { } }
            public class CalendarLock : Icon { public CalendarLock() : base("CalendarLock", IconVariant.Regular, CalendarLockSizeAndContent.Values[0]) { } }
            public class CalendarLtr : Icon { public CalendarLtr() : base("CalendarLtr", IconVariant.Regular, CalendarLtrSizeAndContent.Values[1]) { } }
            public class CalendarMail : Icon { public CalendarMail() : base("CalendarMail", IconVariant.Regular, CalendarMailSizeAndContent.Values[0]) { } }
            public class CalendarMultiple : Icon { public CalendarMultiple() : base("CalendarMultiple", IconVariant.Regular, CalendarMultipleSizeAndContent.Values[0]) { } }
            public class CalendarNote : Icon { public CalendarNote() : base("CalendarNote", IconVariant.Regular, CalendarNoteSizeAndContent.Values[0]) { } }
            public class CalendarPattern : Icon { public CalendarPattern() : base("CalendarPattern", IconVariant.Regular, CalendarPatternSizeAndContent.Values[0]) { } }
            public class CalendarPerson : Icon { public CalendarPerson() : base("CalendarPerson", IconVariant.Regular, CalendarPersonSizeAndContent.Values[0]) { } }
            public class CalendarPhone : Icon { public CalendarPhone() : base("CalendarPhone", IconVariant.Regular, CalendarPhoneSizeAndContent.Values[0]) { } }
            public class CalendarPlay : Icon { public CalendarPlay() : base("CalendarPlay", IconVariant.Regular, CalendarPlaySizeAndContent.Values[0]) { } }
            public class CalendarQuestionMark : Icon { public CalendarQuestionMark() : base("CalendarQuestionMark", IconVariant.Regular, CalendarQuestionMarkSizeAndContent.Values[0]) { } }
            public class CalendarRecord : Icon { public CalendarRecord() : base("CalendarRecord", IconVariant.Regular, CalendarRecordSizeAndContent.Values[0]) { } }
            public class CalendarReply : Icon { public CalendarReply() : base("CalendarReply", IconVariant.Regular, CalendarReplySizeAndContent.Values[0]) { } }
            public class CalendarRtl : Icon { public CalendarRtl() : base("CalendarRtl", IconVariant.Regular, CalendarRtlSizeAndContent.Values[1]) { } }
            public class CalendarSearch : Icon { public CalendarSearch() : base("CalendarSearch", IconVariant.Regular, CalendarSearchSizeAndContent.Values[0]) { } }
            public class CalendarSettings : Icon { public CalendarSettings() : base("CalendarSettings", IconVariant.Regular, CalendarSettingsSizeAndContent.Values[0]) { } }
            public class CalendarShield : Icon { public CalendarShield() : base("CalendarShield", IconVariant.Regular, CalendarShieldSizeAndContent.Values[0]) { } }
            public class CalendarStar : Icon { public CalendarStar() : base("CalendarStar", IconVariant.Regular, CalendarStarSizeAndContent.Values[0]) { } }
            public class CalendarSync : Icon { public CalendarSync() : base("CalendarSync", IconVariant.Regular, CalendarSyncSizeAndContent.Values[0]) { } }
            public class CalendarToday : Icon { public CalendarToday() : base("CalendarToday", IconVariant.Regular, CalendarTodaySizeAndContent.Values[0]) { } }
            public class CalendarWorkWeek : Icon { public CalendarWorkWeek() : base("CalendarWorkWeek", IconVariant.Regular, CalendarWorkWeekSizeAndContent.Values[0]) { } }
            public class Call : Icon { public Call() : base("Call", IconVariant.Regular, CallSizeAndContent.Values[1]) { } }
            public class CallAdd : Icon { public CallAdd() : base("CallAdd", IconVariant.Regular, CallAddSizeAndContent.Values[0]) { } }
            public class CallDismiss : Icon { public CallDismiss() : base("CallDismiss", IconVariant.Regular, CallDismissSizeAndContent.Values[0]) { } }
            public class CallEnd : Icon { public CallEnd() : base("CallEnd", IconVariant.Regular, CallEndSizeAndContent.Values[1]) { } }
            public class CallForward : Icon { public CallForward() : base("CallForward", IconVariant.Regular, CallForwardSizeAndContent.Values[0]) { } }
            public class CallInbound : Icon { public CallInbound() : base("CallInbound", IconVariant.Regular, CallInboundSizeAndContent.Values[0]) { } }
            public class CallMissed : Icon { public CallMissed() : base("CallMissed", IconVariant.Regular, CallMissedSizeAndContent.Values[1]) { } }
            public class CallOutbound : Icon { public CallOutbound() : base("CallOutbound", IconVariant.Regular, CallOutboundSizeAndContent.Values[0]) { } }
            public class CallPark : Icon { public CallPark() : base("CallPark", IconVariant.Regular, CallParkSizeAndContent.Values[0]) { } }
            public class CallProhibited : Icon { public CallProhibited() : base("CallProhibited", IconVariant.Regular, CallProhibitedSizeAndContent.Values[0]) { } }
            public class CallTransfer : Icon { public CallTransfer() : base("CallTransfer", IconVariant.Regular, CallTransferSizeAndContent.Values[0]) { } }
            public class CallWarning : Icon { public CallWarning() : base("CallWarning", IconVariant.Regular, CallWarningSizeAndContent.Values[0]) { } }
            public class Camera : Icon { public Camera() : base("Camera", IconVariant.Regular, CameraSizeAndContent.Values[0]) { } }
            public class CameraDome : Icon { public CameraDome() : base("CameraDome", IconVariant.Regular, CameraDomeSizeAndContent.Values[0]) { } }
            public class CameraOff : Icon { public CameraOff() : base("CameraOff", IconVariant.Regular, CameraOffSizeAndContent.Values[0]) { } }
            public class CameraSparkles : Icon { public CameraSparkles() : base("CameraSparkles", IconVariant.Regular, CameraSparklesSizeAndContent.Values[0]) { } }
            public class CaretDown : Icon { public CaretDown() : base("CaretDown", IconVariant.Regular, CaretDownSizeAndContent.Values[1]) { } }
            public class CaretDownRight : Icon { public CaretDownRight() : base("CaretDownRight", IconVariant.Regular, CaretDownRightSizeAndContent.Values[1]) { } }
            public class CaretLeft : Icon { public CaretLeft() : base("CaretLeft", IconVariant.Regular, CaretLeftSizeAndContent.Values[1]) { } }
            public class CaretRight : Icon { public CaretRight() : base("CaretRight", IconVariant.Regular, CaretRightSizeAndContent.Values[1]) { } }
            public class CaretUp : Icon { public CaretUp() : base("CaretUp", IconVariant.Regular, CaretUpSizeAndContent.Values[1]) { } }
            public class Cart : Icon { public Cart() : base("Cart", IconVariant.Regular, CartSizeAndContent.Values[0]) { } }
            public class CatchUp : Icon { public CatchUp() : base("CatchUp", IconVariant.Regular, CatchUpSizeAndContent.Values[0]) { } }
            public class Cd : Icon { public Cd() : base("Cd", IconVariant.Regular, CdSizeAndContent.Values[0]) { } }
            public class Certificate : Icon { public Certificate() : base("Certificate", IconVariant.Regular, CertificateSizeAndContent.Values[0]) { } }
            public class Channel : Icon { public Channel() : base("Channel", IconVariant.Regular, ChannelSizeAndContent.Values[0]) { } }
            public class ChannelAdd : Icon { public ChannelAdd() : base("ChannelAdd", IconVariant.Regular, ChannelAddSizeAndContent.Values[0]) { } }
            public class ChannelAlert : Icon { public ChannelAlert() : base("ChannelAlert", IconVariant.Regular, ChannelAlertSizeAndContent.Values[0]) { } }
            public class ChannelArrowLeft : Icon { public ChannelArrowLeft() : base("ChannelArrowLeft", IconVariant.Regular, ChannelArrowLeftSizeAndContent.Values[0]) { } }
            public class ChannelDismiss : Icon { public ChannelDismiss() : base("ChannelDismiss", IconVariant.Regular, ChannelDismissSizeAndContent.Values[0]) { } }
            public class ChannelShare : Icon { public ChannelShare() : base("ChannelShare", IconVariant.Regular, ChannelShareSizeAndContent.Values[1]) { } }
            public class ChannelSubtract : Icon { public ChannelSubtract() : base("ChannelSubtract", IconVariant.Regular, ChannelSubtractSizeAndContent.Values[0]) { } }
            public class Chat : Icon { public Chat() : base("Chat", IconVariant.Regular, ChatSizeAndContent.Values[1]) { } }
            public class ChatAdd : Icon { public ChatAdd() : base("ChatAdd", IconVariant.Regular, ChatAddSizeAndContent.Values[0]) { } }
            public class ChatArrowBack : Icon { public ChatArrowBack() : base("ChatArrowBack", IconVariant.Regular, ChatArrowBackSizeAndContent.Values[0]) { } }
            public class ChatArrowDoubleBack : Icon { public ChatArrowDoubleBack() : base("ChatArrowDoubleBack", IconVariant.Regular, ChatArrowDoubleBackSizeAndContent.Values[0]) { } }
            public class ChatBubblesQuestion : Icon { public ChatBubblesQuestion() : base("ChatBubblesQuestion", IconVariant.Regular, ChatBubblesQuestionSizeAndContent.Values[0]) { } }
            public class ChatCursor : Icon { public ChatCursor() : base("ChatCursor", IconVariant.Regular, ChatCursorSizeAndContent.Values[0]) { } }
            public class ChatDismiss : Icon { public ChatDismiss() : base("ChatDismiss", IconVariant.Regular, ChatDismissSizeAndContent.Values[0]) { } }
            public class ChatEmpty : Icon { public ChatEmpty() : base("ChatEmpty", IconVariant.Regular, ChatEmptySizeAndContent.Values[1]) { } }
            public class ChatLock : Icon { public ChatLock() : base("ChatLock", IconVariant.Regular, ChatLockSizeAndContent.Values[0]) { } }
            public class ChatMultiple : Icon { public ChatMultiple() : base("ChatMultiple", IconVariant.Regular, ChatMultipleSizeAndContent.Values[0]) { } }
            public class ChatMultipleHeart : Icon { public ChatMultipleHeart() : base("ChatMultipleHeart", IconVariant.Regular, ChatMultipleHeartSizeAndContent.Values[0]) { } }
            public class ChatSparkle : Icon { public ChatSparkle() : base("ChatSparkle", IconVariant.Regular, ChatSparkleSizeAndContent.Values[0]) { } }
            public class ChatWarning : Icon { public ChatWarning() : base("ChatWarning", IconVariant.Regular, ChatWarningSizeAndContent.Values[0]) { } }
            public class CheckboxChecked : Icon { public CheckboxChecked() : base("CheckboxChecked", IconVariant.Regular, CheckboxCheckedSizeAndContent.Values[0]) { } }
            public class CheckboxCheckedSync : Icon { public CheckboxCheckedSync() : base("CheckboxCheckedSync", IconVariant.Regular, CheckboxCheckedSyncSizeAndContent.Values[0]) { } }
            public class CheckboxIndeterminate : Icon { public CheckboxIndeterminate() : base("CheckboxIndeterminate", IconVariant.Regular, CheckboxIndeterminateSizeAndContent.Values[0]) { } }
            public class CheckboxPerson : Icon { public CheckboxPerson() : base("CheckboxPerson", IconVariant.Regular, CheckboxPersonSizeAndContent.Values[0]) { } }
            public class CheckboxUnchecked : Icon { public CheckboxUnchecked() : base("CheckboxUnchecked", IconVariant.Regular, CheckboxUncheckedSizeAndContent.Values[1]) { } }
            public class Checkmark : Icon { public Checkmark() : base("Checkmark", IconVariant.Regular, CheckmarkSizeAndContent.Values[1]) { } }
            public class CheckmarkCircle : Icon { public CheckmarkCircle() : base("CheckmarkCircle", IconVariant.Regular, CheckmarkCircleSizeAndContent.Values[1]) { } }
            public class CheckmarkCircleSquare : Icon { public CheckmarkCircleSquare() : base("CheckmarkCircleSquare", IconVariant.Regular, CheckmarkCircleSquareSizeAndContent.Values[0]) { } }
            public class CheckmarkLock : Icon { public CheckmarkLock() : base("CheckmarkLock", IconVariant.Regular, CheckmarkLockSizeAndContent.Values[0]) { } }
            public class CheckmarkStarburst : Icon { public CheckmarkStarburst() : base("CheckmarkStarburst", IconVariant.Regular, CheckmarkStarburstSizeAndContent.Values[0]) { } }
            public class CheckmarkUnderlineCircle : Icon { public CheckmarkUnderlineCircle() : base("CheckmarkUnderlineCircle", IconVariant.Regular, CheckmarkUnderlineCircleSizeAndContent.Values[0]) { } }
            public class ChevronCircleDown : Icon { public ChevronCircleDown() : base("ChevronCircleDown", IconVariant.Regular, ChevronCircleDownSizeAndContent.Values[1]) { } }
            public class ChevronCircleLeft : Icon { public ChevronCircleLeft() : base("ChevronCircleLeft", IconVariant.Regular, ChevronCircleLeftSizeAndContent.Values[1]) { } }
            public class ChevronCircleRight : Icon { public ChevronCircleRight() : base("ChevronCircleRight", IconVariant.Regular, ChevronCircleRightSizeAndContent.Values[1]) { } }
            public class ChevronCircleUp : Icon { public ChevronCircleUp() : base("ChevronCircleUp", IconVariant.Regular, ChevronCircleUpSizeAndContent.Values[1]) { } }
            public class ChevronDoubleDown : Icon { public ChevronDoubleDown() : base("ChevronDoubleDown", IconVariant.Regular, ChevronDoubleDownSizeAndContent.Values[0]) { } }
            public class ChevronDoubleLeft : Icon { public ChevronDoubleLeft() : base("ChevronDoubleLeft", IconVariant.Regular, ChevronDoubleLeftSizeAndContent.Values[0]) { } }
            public class ChevronDoubleRight : Icon { public ChevronDoubleRight() : base("ChevronDoubleRight", IconVariant.Regular, ChevronDoubleRightSizeAndContent.Values[0]) { } }
            public class ChevronDoubleUp : Icon { public ChevronDoubleUp() : base("ChevronDoubleUp", IconVariant.Regular, ChevronDoubleUpSizeAndContent.Values[0]) { } }
            public class ChevronDown : Icon { public ChevronDown() : base("ChevronDown", IconVariant.Regular, ChevronDownSizeAndContent.Values[1]) { } }
            public class ChevronDownUp : Icon { public ChevronDownUp() : base("ChevronDownUp", IconVariant.Regular, ChevronDownUpSizeAndContent.Values[0]) { } }
            public class ChevronLeft : Icon { public ChevronLeft() : base("ChevronLeft", IconVariant.Regular, ChevronLeftSizeAndContent.Values[1]) { } }
            public class ChevronRight : Icon { public ChevronRight() : base("ChevronRight", IconVariant.Regular, ChevronRightSizeAndContent.Values[1]) { } }
            public class ChevronUp : Icon { public ChevronUp() : base("ChevronUp", IconVariant.Regular, ChevronUpSizeAndContent.Values[1]) { } }
            public class ChevronUpDown : Icon { public ChevronUpDown() : base("ChevronUpDown", IconVariant.Regular, ChevronUpDownSizeAndContent.Values[0]) { } }
            public class Circle : Icon { public Circle() : base("Circle", IconVariant.Regular, CircleSizeAndContent.Values[1]) { } }
            public class CircleHalfFill : Icon { public CircleHalfFill() : base("CircleHalfFill", IconVariant.Regular, CircleHalfFillSizeAndContent.Values[1]) { } }
            public class CircleHint : Icon { public CircleHint() : base("CircleHint", IconVariant.Regular, CircleHintSizeAndContent.Values[0]) { } }
            public class CircleHintHalfVertical : Icon { public CircleHintHalfVertical() : base("CircleHintHalfVertical", IconVariant.Regular, CircleHintHalfVerticalSizeAndContent.Values[0]) { } }
            public class CircleImage : Icon { public CircleImage() : base("CircleImage", IconVariant.Regular, CircleImageSizeAndContent.Values[0]) { } }
            public class CircleLine : Icon { public CircleLine() : base("CircleLine", IconVariant.Regular, CircleLineSizeAndContent.Values[1]) { } }
            public class CircleOff : Icon { public CircleOff() : base("CircleOff", IconVariant.Regular, CircleOffSizeAndContent.Values[0]) { } }
            public class City : Icon { public City() : base("City", IconVariant.Regular, CitySizeAndContent.Values[0]) { } }
            public class Classification : Icon { public Classification() : base("Classification", IconVariant.Regular, ClassificationSizeAndContent.Values[0]) { } }
            public class ClearFormatting : Icon { public ClearFormatting() : base("ClearFormatting", IconVariant.Regular, ClearFormattingSizeAndContent.Values[0]) { } }
            public class Clipboard : Icon { public Clipboard() : base("Clipboard", IconVariant.Regular, ClipboardSizeAndContent.Values[0]) { } }
            public class Clipboard3Day : Icon { public Clipboard3Day() : base("Clipboard3Day", IconVariant.Regular, Clipboard3DaySizeAndContent.Values[0]) { } }
            public class ClipboardArrowRight : Icon { public ClipboardArrowRight() : base("ClipboardArrowRight", IconVariant.Regular, ClipboardArrowRightSizeAndContent.Values[0]) { } }
            public class ClipboardBrush : Icon { public ClipboardBrush() : base("ClipboardBrush", IconVariant.Regular, ClipboardBrushSizeAndContent.Values[0]) { } }
            public class ClipboardBulletList : Icon { public ClipboardBulletList() : base("ClipboardBulletList", IconVariant.Regular, ClipboardBulletListSizeAndContent.Values[0]) { } }
            public class ClipboardBulletListLtr : Icon { public ClipboardBulletListLtr() : base("ClipboardBulletListLtr", IconVariant.Regular, ClipboardBulletListLtrSizeAndContent.Values[0]) { } }
            public class ClipboardBulletListRtl : Icon { public ClipboardBulletListRtl() : base("ClipboardBulletListRtl", IconVariant.Regular, ClipboardBulletListRtlSizeAndContent.Values[0]) { } }
            public class ClipboardCheckmark : Icon { public ClipboardCheckmark() : base("ClipboardCheckmark", IconVariant.Regular, ClipboardCheckmarkSizeAndContent.Values[0]) { } }
            public class ClipboardCode : Icon { public ClipboardCode() : base("ClipboardCode", IconVariant.Regular, ClipboardCodeSizeAndContent.Values[0]) { } }
            public class ClipboardDay : Icon { public ClipboardDay() : base("ClipboardDay", IconVariant.Regular, ClipboardDaySizeAndContent.Values[0]) { } }
            public class ClipboardError : Icon { public ClipboardError() : base("ClipboardError", IconVariant.Regular, ClipboardErrorSizeAndContent.Values[0]) { } }
            public class ClipboardLetter : Icon { public ClipboardLetter() : base("ClipboardLetter", IconVariant.Regular, ClipboardLetterSizeAndContent.Values[0]) { } }
            public class ClipboardLink : Icon { public ClipboardLink() : base("ClipboardLink", IconVariant.Regular, ClipboardLinkSizeAndContent.Values[0]) { } }
            public class ClipboardMathFormula : Icon { public ClipboardMathFormula() : base("ClipboardMathFormula", IconVariant.Regular, ClipboardMathFormulaSizeAndContent.Values[0]) { } }
            public class ClipboardMonth : Icon { public ClipboardMonth() : base("ClipboardMonth", IconVariant.Regular, ClipboardMonthSizeAndContent.Values[0]) { } }
            public class ClipboardMultiple : Icon { public ClipboardMultiple() : base("ClipboardMultiple", IconVariant.Regular, ClipboardMultipleSizeAndContent.Values[0]) { } }
            public class ClipboardNote : Icon { public ClipboardNote() : base("ClipboardNote", IconVariant.Regular, ClipboardNoteSizeAndContent.Values[0]) { } }
            public class ClipboardNumber123 : Icon { public ClipboardNumber123() : base("ClipboardNumber123", IconVariant.Regular, ClipboardNumber123SizeAndContent.Values[0]) { } }
            public class ClipboardPaste : Icon { public ClipboardPaste() : base("ClipboardPaste", IconVariant.Regular, ClipboardPasteSizeAndContent.Values[0]) { } }
            public class ClipboardTask : Icon { public ClipboardTask() : base("ClipboardTask", IconVariant.Regular, ClipboardTaskSizeAndContent.Values[0]) { } }
            public class ClipboardTaskList : Icon { public ClipboardTaskList() : base("ClipboardTaskList", IconVariant.Regular, ClipboardTaskListSizeAndContent.Values[0]) { } }
            public class ClipboardTextLtr : Icon { public ClipboardTextLtr() : base("ClipboardTextLtr", IconVariant.Regular, ClipboardTextLtrSizeAndContent.Values[0]) { } }
            public class ClipboardTextRtl : Icon { public ClipboardTextRtl() : base("ClipboardTextRtl", IconVariant.Regular, ClipboardTextRtlSizeAndContent.Values[0]) { } }
            public class Clock : Icon { public Clock() : base("Clock", IconVariant.Regular, ClockSizeAndContent.Values[1]) { } }
            public class ClockAlarm : Icon { public ClockAlarm() : base("ClockAlarm", IconVariant.Regular, ClockAlarmSizeAndContent.Values[0]) { } }
            public class ClockLock : Icon { public ClockLock() : base("ClockLock", IconVariant.Regular, ClockLockSizeAndContent.Values[0]) { } }
            public class ClosedCaption : Icon { public ClosedCaption() : base("ClosedCaption", IconVariant.Regular, ClosedCaptionSizeAndContent.Values[0]) { } }
            public class ClosedCaptionOff : Icon { public ClosedCaptionOff() : base("ClosedCaptionOff", IconVariant.Regular, ClosedCaptionOffSizeAndContent.Values[0]) { } }
            public class Cloud : Icon { public Cloud() : base("Cloud", IconVariant.Regular, CloudSizeAndContent.Values[0]) { } }
            public class CloudAdd : Icon { public CloudAdd() : base("CloudAdd", IconVariant.Regular, CloudAddSizeAndContent.Values[0]) { } }
            public class CloudArchive : Icon { public CloudArchive() : base("CloudArchive", IconVariant.Regular, CloudArchiveSizeAndContent.Values[0]) { } }
            public class CloudArrowDown : Icon { public CloudArrowDown() : base("CloudArrowDown", IconVariant.Regular, CloudArrowDownSizeAndContent.Values[0]) { } }
            public class CloudArrowUp : Icon { public CloudArrowUp() : base("CloudArrowUp", IconVariant.Regular, CloudArrowUpSizeAndContent.Values[0]) { } }
            public class CloudBeaker : Icon { public CloudBeaker() : base("CloudBeaker", IconVariant.Regular, CloudBeakerSizeAndContent.Values[0]) { } }
            public class CloudCheckmark : Icon { public CloudCheckmark() : base("CloudCheckmark", IconVariant.Regular, CloudCheckmarkSizeAndContent.Values[0]) { } }
            public class CloudCube : Icon { public CloudCube() : base("CloudCube", IconVariant.Regular, CloudCubeSizeAndContent.Values[0]) { } }
            public class CloudDismiss : Icon { public CloudDismiss() : base("CloudDismiss", IconVariant.Regular, CloudDismissSizeAndContent.Values[0]) { } }
            public class CloudEdit : Icon { public CloudEdit() : base("CloudEdit", IconVariant.Regular, CloudEditSizeAndContent.Values[0]) { } }
            public class CloudError : Icon { public CloudError() : base("CloudError", IconVariant.Regular, CloudErrorSizeAndContent.Values[0]) { } }
            public class CloudLink : Icon { public CloudLink() : base("CloudLink", IconVariant.Regular, CloudLinkSizeAndContent.Values[0]) { } }
            public class CloudOff : Icon { public CloudOff() : base("CloudOff", IconVariant.Regular, CloudOffSizeAndContent.Values[0]) { } }
            public class CloudSync : Icon { public CloudSync() : base("CloudSync", IconVariant.Regular, CloudSyncSizeAndContent.Values[0]) { } }
            public class CloudWords : Icon { public CloudWords() : base("CloudWords", IconVariant.Regular, CloudWordsSizeAndContent.Values[0]) { } }
            public class Clover : Icon { public Clover() : base("Clover", IconVariant.Regular, CloverSizeAndContent.Values[0]) { } }
            public class Code : Icon { public Code() : base("Code", IconVariant.Regular, CodeSizeAndContent.Values[0]) { } }
            public class CodeBlock : Icon { public CodeBlock() : base("CodeBlock", IconVariant.Regular, CodeBlockSizeAndContent.Values[0]) { } }
            public class CodeCs : Icon { public CodeCs() : base("CodeCs", IconVariant.Regular, CodeCsSizeAndContent.Values[0]) { } }
            public class CodeCsRectangle : Icon { public CodeCsRectangle() : base("CodeCsRectangle", IconVariant.Regular, CodeCsRectangleSizeAndContent.Values[0]) { } }
            public class CodeFs : Icon { public CodeFs() : base("CodeFs", IconVariant.Regular, CodeFsSizeAndContent.Values[0]) { } }
            public class CodeFsRectangle : Icon { public CodeFsRectangle() : base("CodeFsRectangle", IconVariant.Regular, CodeFsRectangleSizeAndContent.Values[0]) { } }
            public class CodeJs : Icon { public CodeJs() : base("CodeJs", IconVariant.Regular, CodeJsSizeAndContent.Values[0]) { } }
            public class CodeJsRectangle : Icon { public CodeJsRectangle() : base("CodeJsRectangle", IconVariant.Regular, CodeJsRectangleSizeAndContent.Values[0]) { } }
            public class CodePy : Icon { public CodePy() : base("CodePy", IconVariant.Regular, CodePySizeAndContent.Values[0]) { } }
            public class CodePyRectangle : Icon { public CodePyRectangle() : base("CodePyRectangle", IconVariant.Regular, CodePyRectangleSizeAndContent.Values[0]) { } }
            public class CodeRb : Icon { public CodeRb() : base("CodeRb", IconVariant.Regular, CodeRbSizeAndContent.Values[0]) { } }
            public class CodeRbRectangle : Icon { public CodeRbRectangle() : base("CodeRbRectangle", IconVariant.Regular, CodeRbRectangleSizeAndContent.Values[0]) { } }
            public class CodeText : Icon { public CodeText() : base("CodeText", IconVariant.Regular, CodeTextSizeAndContent.Values[0]) { } }
            public class CodeTextOff : Icon { public CodeTextOff() : base("CodeTextOff", IconVariant.Regular, CodeTextOffSizeAndContent.Values[0]) { } }
            public class CodeTs : Icon { public CodeTs() : base("CodeTs", IconVariant.Regular, CodeTsSizeAndContent.Values[0]) { } }
            public class CodeTsRectangle : Icon { public CodeTsRectangle() : base("CodeTsRectangle", IconVariant.Regular, CodeTsRectangleSizeAndContent.Values[0]) { } }
            public class CodeVb : Icon { public CodeVb() : base("CodeVb", IconVariant.Regular, CodeVbSizeAndContent.Values[0]) { } }
            public class CodeVbRectangle : Icon { public CodeVbRectangle() : base("CodeVbRectangle", IconVariant.Regular, CodeVbRectangleSizeAndContent.Values[0]) { } }
            public class Collections : Icon { public Collections() : base("Collections", IconVariant.Regular, CollectionsSizeAndContent.Values[0]) { } }
            public class Color : Icon { public Color() : base("Color", IconVariant.Regular, ColorSizeAndContent.Values[0]) { } }
            public class ColorFill : Icon { public ColorFill() : base("ColorFill", IconVariant.Regular, ColorFillSizeAndContent.Values[0]) { } }
            public class ColorFillAccent : Icon { public ColorFillAccent() : base("ColorFillAccent", IconVariant.Regular, ColorFillAccentSizeAndContent.Values[0]) { } }
            public class ColorLine : Icon { public ColorLine() : base("ColorLine", IconVariant.Regular, ColorLineSizeAndContent.Values[0]) { } }
            public class ColorLineAccent : Icon { public ColorLineAccent() : base("ColorLineAccent", IconVariant.Regular, ColorLineAccentSizeAndContent.Values[0]) { } }
            public class ColumnSingle : Icon { public ColumnSingle() : base("ColumnSingle", IconVariant.Regular, ColumnSingleSizeAndContent.Values[0]) { } }
            public class ColumnSingleCompare : Icon { public ColumnSingleCompare() : base("ColumnSingleCompare", IconVariant.Regular, ColumnSingleCompareSizeAndContent.Values[0]) { } }
            public class Comment : Icon { public Comment() : base("Comment", IconVariant.Regular, CommentSizeAndContent.Values[1]) { } }
            public class CommentAdd : Icon { public CommentAdd() : base("CommentAdd", IconVariant.Regular, CommentAddSizeAndContent.Values[1]) { } }
            public class CommentArrowLeft : Icon { public CommentArrowLeft() : base("CommentArrowLeft", IconVariant.Regular, CommentArrowLeftSizeAndContent.Values[1]) { } }
            public class CommentArrowRight : Icon { public CommentArrowRight() : base("CommentArrowRight", IconVariant.Regular, CommentArrowRightSizeAndContent.Values[1]) { } }
            public class CommentCheckmark : Icon { public CommentCheckmark() : base("CommentCheckmark", IconVariant.Regular, CommentCheckmarkSizeAndContent.Values[1]) { } }
            public class CommentEdit : Icon { public CommentEdit() : base("CommentEdit", IconVariant.Regular, CommentEditSizeAndContent.Values[0]) { } }
            public class CommentError : Icon { public CommentError() : base("CommentError", IconVariant.Regular, CommentErrorSizeAndContent.Values[0]) { } }
            public class CommentLink : Icon { public CommentLink() : base("CommentLink", IconVariant.Regular, CommentLinkSizeAndContent.Values[0]) { } }
            public class CommentMention : Icon { public CommentMention() : base("CommentMention", IconVariant.Regular, CommentMentionSizeAndContent.Values[0]) { } }
            public class CommentMultiple : Icon { public CommentMultiple() : base("CommentMultiple", IconVariant.Regular, CommentMultipleSizeAndContent.Values[0]) { } }
            public class CommentMultipleCheckmark : Icon { public CommentMultipleCheckmark() : base("CommentMultipleCheckmark", IconVariant.Regular, CommentMultipleCheckmarkSizeAndContent.Values[0]) { } }
            public class CommentMultipleLink : Icon { public CommentMultipleLink() : base("CommentMultipleLink", IconVariant.Regular, CommentMultipleLinkSizeAndContent.Values[0]) { } }
            public class CommentOff : Icon { public CommentOff() : base("CommentOff", IconVariant.Regular, CommentOffSizeAndContent.Values[0]) { } }
            public class Communication : Icon { public Communication() : base("Communication", IconVariant.Regular, CommunicationSizeAndContent.Values[0]) { } }
            public class CommunicationShield : Icon { public CommunicationShield() : base("CommunicationShield", IconVariant.Regular, CommunicationShieldSizeAndContent.Values[0]) { } }
            public class CompassNorthwest : Icon { public CompassNorthwest() : base("CompassNorthwest", IconVariant.Regular, CompassNorthwestSizeAndContent.Values[0]) { } }
            public class Compose : Icon { public Compose() : base("Compose", IconVariant.Regular, ComposeSizeAndContent.Values[0]) { } }
            public class Cone : Icon { public Cone() : base("Cone", IconVariant.Regular, ConeSizeAndContent.Values[0]) { } }
            public class ConferenceRoom : Icon { public ConferenceRoom() : base("ConferenceRoom", IconVariant.Regular, ConferenceRoomSizeAndContent.Values[0]) { } }
            public class Connected : Icon { public Connected() : base("Connected", IconVariant.Regular, ConnectedSizeAndContent.Values[0]) { } }
            public class Connector : Icon { public Connector() : base("Connector", IconVariant.Regular, ConnectorSizeAndContent.Values[0]) { } }
            public class ContactCard : Icon { public ContactCard() : base("ContactCard", IconVariant.Regular, ContactCardSizeAndContent.Values[0]) { } }
            public class ContactCardGroup : Icon { public ContactCardGroup() : base("ContactCardGroup", IconVariant.Regular, ContactCardGroupSizeAndContent.Values[0]) { } }
            public class ContactCardLink : Icon { public ContactCardLink() : base("ContactCardLink", IconVariant.Regular, ContactCardLinkSizeAndContent.Values[0]) { } }
            public class ContactCardRibbon : Icon { public ContactCardRibbon() : base("ContactCardRibbon", IconVariant.Regular, ContactCardRibbonSizeAndContent.Values[0]) { } }
            public class ContentSettings : Icon { public ContentSettings() : base("ContentSettings", IconVariant.Regular, ContentSettingsSizeAndContent.Values[0]) { } }
            public class ContentViewGallery : Icon { public ContentViewGallery() : base("ContentViewGallery", IconVariant.Regular, ContentViewGallerySizeAndContent.Values[0]) { } }
            public class ContentViewGalleryLightning : Icon { public ContentViewGalleryLightning() : base("ContentViewGalleryLightning", IconVariant.Regular, ContentViewGalleryLightningSizeAndContent.Values[0]) { } }
            public class ContractDownLeft : Icon { public ContractDownLeft() : base("ContractDownLeft", IconVariant.Regular, ContractDownLeftSizeAndContent.Values[0]) { } }
            public class ContractUpRight : Icon { public ContractUpRight() : base("ContractUpRight", IconVariant.Regular, ContractUpRightSizeAndContent.Values[0]) { } }
            public class Copy : Icon { public Copy() : base("Copy", IconVariant.Regular, CopySizeAndContent.Values[0]) { } }
            public class CopyArrowRight : Icon { public CopyArrowRight() : base("CopyArrowRight", IconVariant.Regular, CopyArrowRightSizeAndContent.Values[0]) { } }
            public class Crop : Icon { public Crop() : base("Crop", IconVariant.Regular, CropSizeAndContent.Values[0]) { } }
            public class Crown : Icon { public Crown() : base("Crown", IconVariant.Regular, CrownSizeAndContent.Values[0]) { } }
            public class Cube : Icon { public Cube() : base("Cube", IconVariant.Regular, CubeSizeAndContent.Values[1]) { } }
            public class CubeQuick : Icon { public CubeQuick() : base("CubeQuick", IconVariant.Regular, CubeQuickSizeAndContent.Values[0]) { } }
            public class CurrencyDollarEuro : Icon { public CurrencyDollarEuro() : base("CurrencyDollarEuro", IconVariant.Regular, CurrencyDollarEuroSizeAndContent.Values[0]) { } }
            public class CurrencyDollarRupee : Icon { public CurrencyDollarRupee() : base("CurrencyDollarRupee", IconVariant.Regular, CurrencyDollarRupeeSizeAndContent.Values[0]) { } }
            public class Cursor : Icon { public Cursor() : base("Cursor", IconVariant.Regular, CursorSizeAndContent.Values[0]) { } }
            public class CursorHover : Icon { public CursorHover() : base("CursorHover", IconVariant.Regular, CursorHoverSizeAndContent.Values[0]) { } }
            public class CursorHoverOff : Icon { public CursorHoverOff() : base("CursorHoverOff", IconVariant.Regular, CursorHoverOffSizeAndContent.Values[0]) { } }
            public class CursorProhibited : Icon { public CursorProhibited() : base("CursorProhibited", IconVariant.Regular, CursorProhibitedSizeAndContent.Values[0]) { } }
            public class Cut : Icon { public Cut() : base("Cut", IconVariant.Regular, CutSizeAndContent.Values[0]) { } }
            public class DataBarHorizontalDescending : Icon { public DataBarHorizontalDescending() : base("DataBarHorizontalDescending", IconVariant.Regular, DataBarHorizontalDescendingSizeAndContent.Values[0]) { } }
            public class DataBarVertical : Icon { public DataBarVertical() : base("DataBarVertical", IconVariant.Regular, DataBarVerticalSizeAndContent.Values[0]) { } }
            public class DataBarVerticalAscending : Icon { public DataBarVerticalAscending() : base("DataBarVerticalAscending", IconVariant.Regular, DataBarVerticalAscendingSizeAndContent.Values[0]) { } }
            public class DataBarVerticalStar : Icon { public DataBarVerticalStar() : base("DataBarVerticalStar", IconVariant.Regular, DataBarVerticalStarSizeAndContent.Values[0]) { } }
            public class Database : Icon { public Database() : base("Database", IconVariant.Regular, DatabaseSizeAndContent.Values[0]) { } }
            public class DatabaseStack : Icon { public DatabaseStack() : base("DatabaseStack", IconVariant.Regular, DatabaseStackSizeAndContent.Values[0]) { } }
            public class DataHistogram : Icon { public DataHistogram() : base("DataHistogram", IconVariant.Regular, DataHistogramSizeAndContent.Values[0]) { } }
            public class DataTrending : Icon { public DataTrending() : base("DataTrending", IconVariant.Regular, DataTrendingSizeAndContent.Values[0]) { } }
            public class Delete : Icon { public Delete() : base("Delete", IconVariant.Regular, DeleteSizeAndContent.Values[1]) { } }
            public class DeleteArrowBack : Icon { public DeleteArrowBack() : base("DeleteArrowBack", IconVariant.Regular, DeleteArrowBackSizeAndContent.Values[0]) { } }
            public class Dentist : Icon { public Dentist() : base("Dentist", IconVariant.Regular, DentistSizeAndContent.Values[1]) { } }
            public class DesignIdeas : Icon { public DesignIdeas() : base("DesignIdeas", IconVariant.Regular, DesignIdeasSizeAndContent.Values[0]) { } }
            public class Desk : Icon { public Desk() : base("Desk", IconVariant.Regular, DeskSizeAndContent.Values[0]) { } }
            public class Desktop : Icon { public Desktop() : base("Desktop", IconVariant.Regular, DesktopSizeAndContent.Values[0]) { } }
            public class DesktopArrowDown : Icon { public DesktopArrowDown() : base("DesktopArrowDown", IconVariant.Regular, DesktopArrowDownSizeAndContent.Values[0]) { } }
            public class DesktopArrowRight : Icon { public DesktopArrowRight() : base("DesktopArrowRight", IconVariant.Regular, DesktopArrowRightSizeAndContent.Values[0]) { } }
            public class DesktopCheckmark : Icon { public DesktopCheckmark() : base("DesktopCheckmark", IconVariant.Regular, DesktopCheckmarkSizeAndContent.Values[0]) { } }
            public class DesktopCursor : Icon { public DesktopCursor() : base("DesktopCursor", IconVariant.Regular, DesktopCursorSizeAndContent.Values[0]) { } }
            public class DesktopEdit : Icon { public DesktopEdit() : base("DesktopEdit", IconVariant.Regular, DesktopEditSizeAndContent.Values[0]) { } }
            public class DesktopKeyboard : Icon { public DesktopKeyboard() : base("DesktopKeyboard", IconVariant.Regular, DesktopKeyboardSizeAndContent.Values[0]) { } }
            public class DesktopMac : Icon { public DesktopMac() : base("DesktopMac", IconVariant.Regular, DesktopMacSizeAndContent.Values[0]) { } }
            public class DesktopPulse : Icon { public DesktopPulse() : base("DesktopPulse", IconVariant.Regular, DesktopPulseSizeAndContent.Values[0]) { } }
            public class DesktopSync : Icon { public DesktopSync() : base("DesktopSync", IconVariant.Regular, DesktopSyncSizeAndContent.Values[0]) { } }
            public class DeveloperBoard : Icon { public DeveloperBoard() : base("DeveloperBoard", IconVariant.Regular, DeveloperBoardSizeAndContent.Values[0]) { } }
            public class DeviceEq : Icon { public DeviceEq() : base("DeviceEq", IconVariant.Regular, DeviceEqSizeAndContent.Values[0]) { } }
            public class DeviceMeetingRoom : Icon { public DeviceMeetingRoom() : base("DeviceMeetingRoom", IconVariant.Regular, DeviceMeetingRoomSizeAndContent.Values[0]) { } }
            public class DeviceMeetingRoomRemote : Icon { public DeviceMeetingRoomRemote() : base("DeviceMeetingRoomRemote", IconVariant.Regular, DeviceMeetingRoomRemoteSizeAndContent.Values[0]) { } }
            public class Diamond : Icon { public Diamond() : base("Diamond", IconVariant.Regular, DiamondSizeAndContent.Values[0]) { } }
            public class Directions : Icon { public Directions() : base("Directions", IconVariant.Regular, DirectionsSizeAndContent.Values[0]) { } }
            public class Dismiss : Icon { public Dismiss() : base("Dismiss", IconVariant.Regular, DismissSizeAndContent.Values[1]) { } }
            public class DismissCircle : Icon { public DismissCircle() : base("DismissCircle", IconVariant.Regular, DismissCircleSizeAndContent.Values[1]) { } }
            public class DismissSquareMultiple : Icon { public DismissSquareMultiple() : base("DismissSquareMultiple", IconVariant.Regular, DismissSquareMultipleSizeAndContent.Values[0]) { } }
            public class Diversity : Icon { public Diversity() : base("Diversity", IconVariant.Regular, DiversitySizeAndContent.Values[0]) { } }
            public class DividerShort : Icon { public DividerShort() : base("DividerShort", IconVariant.Regular, DividerShortSizeAndContent.Values[0]) { } }
            public class DividerTall : Icon { public DividerTall() : base("DividerTall", IconVariant.Regular, DividerTallSizeAndContent.Values[0]) { } }
            public class Doctor : Icon { public Doctor() : base("Doctor", IconVariant.Regular, DoctorSizeAndContent.Values[1]) { } }
            public class Document : Icon { public Document() : base("Document", IconVariant.Regular, DocumentSizeAndContent.Values[0]) { } }
            public class Document100 : Icon { public Document100() : base("Document100", IconVariant.Regular, Document100SizeAndContent.Values[0]) { } }
            public class DocumentAdd : Icon { public DocumentAdd() : base("DocumentAdd", IconVariant.Regular, DocumentAddSizeAndContent.Values[0]) { } }
            public class DocumentArrowDown : Icon { public DocumentArrowDown() : base("DocumentArrowDown", IconVariant.Regular, DocumentArrowDownSizeAndContent.Values[0]) { } }
            public class DocumentArrowLeft : Icon { public DocumentArrowLeft() : base("DocumentArrowLeft", IconVariant.Regular, DocumentArrowLeftSizeAndContent.Values[0]) { } }
            public class DocumentArrowUp : Icon { public DocumentArrowUp() : base("DocumentArrowUp", IconVariant.Regular, DocumentArrowUpSizeAndContent.Values[0]) { } }
            public class DocumentBriefcase : Icon { public DocumentBriefcase() : base("DocumentBriefcase", IconVariant.Regular, DocumentBriefcaseSizeAndContent.Values[0]) { } }
            public class DocumentBulletList : Icon { public DocumentBulletList() : base("DocumentBulletList", IconVariant.Regular, DocumentBulletListSizeAndContent.Values[0]) { } }
            public class DocumentBulletListArrowLeft : Icon { public DocumentBulletListArrowLeft() : base("DocumentBulletListArrowLeft", IconVariant.Regular, DocumentBulletListArrowLeftSizeAndContent.Values[0]) { } }
            public class DocumentBulletListCube : Icon { public DocumentBulletListCube() : base("DocumentBulletListCube", IconVariant.Regular, DocumentBulletListCubeSizeAndContent.Values[0]) { } }
            public class DocumentCatchUp : Icon { public DocumentCatchUp() : base("DocumentCatchUp", IconVariant.Regular, DocumentCatchUpSizeAndContent.Values[0]) { } }
            public class DocumentCheckmark : Icon { public DocumentCheckmark() : base("DocumentCheckmark", IconVariant.Regular, DocumentCheckmarkSizeAndContent.Values[0]) { } }
            public class DocumentContract : Icon { public DocumentContract() : base("DocumentContract", IconVariant.Regular, DocumentContractSizeAndContent.Values[0]) { } }
            public class DocumentCopy : Icon { public DocumentCopy() : base("DocumentCopy", IconVariant.Regular, DocumentCopySizeAndContent.Values[0]) { } }
            public class DocumentCs : Icon { public DocumentCs() : base("DocumentCs", IconVariant.Regular, DocumentCsSizeAndContent.Values[0]) { } }
            public class DocumentCss : Icon { public DocumentCss() : base("DocumentCss", IconVariant.Regular, DocumentCssSizeAndContent.Values[0]) { } }
            public class DocumentData : Icon { public DocumentData() : base("DocumentData", IconVariant.Regular, DocumentDataSizeAndContent.Values[0]) { } }
            public class DocumentDataLink : Icon { public DocumentDataLink() : base("DocumentDataLink", IconVariant.Regular, DocumentDataLinkSizeAndContent.Values[0]) { } }
            public class DocumentDataLock : Icon { public DocumentDataLock() : base("DocumentDataLock", IconVariant.Regular, DocumentDataLockSizeAndContent.Values[0]) { } }
            public class DocumentDismiss : Icon { public DocumentDismiss() : base("DocumentDismiss", IconVariant.Regular, DocumentDismissSizeAndContent.Values[0]) { } }
            public class DocumentEdit : Icon { public DocumentEdit() : base("DocumentEdit", IconVariant.Regular, DocumentEditSizeAndContent.Values[0]) { } }
            public class DocumentError : Icon { public DocumentError() : base("DocumentError", IconVariant.Regular, DocumentErrorSizeAndContent.Values[0]) { } }
            public class DocumentFit : Icon { public DocumentFit() : base("DocumentFit", IconVariant.Regular, DocumentFitSizeAndContent.Values[0]) { } }
            public class DocumentFolder : Icon { public DocumentFolder() : base("DocumentFolder", IconVariant.Regular, DocumentFolderSizeAndContent.Values[0]) { } }
            public class DocumentFooter : Icon { public DocumentFooter() : base("DocumentFooter", IconVariant.Regular, DocumentFooterSizeAndContent.Values[0]) { } }
            public class DocumentFs : Icon { public DocumentFs() : base("DocumentFs", IconVariant.Regular, DocumentFsSizeAndContent.Values[0]) { } }
            public class DocumentHeader : Icon { public DocumentHeader() : base("DocumentHeader", IconVariant.Regular, DocumentHeaderSizeAndContent.Values[0]) { } }
            public class DocumentHeaderArrowDown : Icon { public DocumentHeaderArrowDown() : base("DocumentHeaderArrowDown", IconVariant.Regular, DocumentHeaderArrowDownSizeAndContent.Values[0]) { } }
            public class DocumentHeaderFooter : Icon { public DocumentHeaderFooter() : base("DocumentHeaderFooter", IconVariant.Regular, DocumentHeaderFooterSizeAndContent.Values[0]) { } }
            public class DocumentImage : Icon { public DocumentImage() : base("DocumentImage", IconVariant.Regular, DocumentImageSizeAndContent.Values[0]) { } }
            public class DocumentJava : Icon { public DocumentJava() : base("DocumentJava", IconVariant.Regular, DocumentJavaSizeAndContent.Values[0]) { } }
            public class DocumentJs : Icon { public DocumentJs() : base("DocumentJs", IconVariant.Regular, DocumentJsSizeAndContent.Values[0]) { } }
            public class DocumentLightning : Icon { public DocumentLightning() : base("DocumentLightning", IconVariant.Regular, DocumentLightningSizeAndContent.Values[0]) { } }
            public class DocumentLink : Icon { public DocumentLink() : base("DocumentLink", IconVariant.Regular, DocumentLinkSizeAndContent.Values[0]) { } }
            public class DocumentLock : Icon { public DocumentLock() : base("DocumentLock", IconVariant.Regular, DocumentLockSizeAndContent.Values[0]) { } }
            public class DocumentMention : Icon { public DocumentMention() : base("DocumentMention", IconVariant.Regular, DocumentMentionSizeAndContent.Values[0]) { } }
            public class DocumentMultiple : Icon { public DocumentMultiple() : base("DocumentMultiple", IconVariant.Regular, DocumentMultipleSizeAndContent.Values[0]) { } }
            public class DocumentNumber1 : Icon { public DocumentNumber1() : base("DocumentNumber1", IconVariant.Regular, DocumentNumber1SizeAndContent.Values[0]) { } }
            public class DocumentOnePage : Icon { public DocumentOnePage() : base("DocumentOnePage", IconVariant.Regular, DocumentOnePageSizeAndContent.Values[0]) { } }
            public class DocumentOnePageAdd : Icon { public DocumentOnePageAdd() : base("DocumentOnePageAdd", IconVariant.Regular, DocumentOnePageAddSizeAndContent.Values[0]) { } }
            public class DocumentOnePageBeaker : Icon { public DocumentOnePageBeaker() : base("DocumentOnePageBeaker", IconVariant.Regular, DocumentOnePageBeakerSizeAndContent.Values[0]) { } }
            public class DocumentOnePageLink : Icon { public DocumentOnePageLink() : base("DocumentOnePageLink", IconVariant.Regular, DocumentOnePageLinkSizeAndContent.Values[0]) { } }
            public class DocumentOnePageMultiple : Icon { public DocumentOnePageMultiple() : base("DocumentOnePageMultiple", IconVariant.Regular, DocumentOnePageMultipleSizeAndContent.Values[0]) { } }
            public class DocumentOnePageSparkle : Icon { public DocumentOnePageSparkle() : base("DocumentOnePageSparkle", IconVariant.Regular, DocumentOnePageSparkleSizeAndContent.Values[0]) { } }
            public class DocumentPdf : Icon { public DocumentPdf() : base("DocumentPdf", IconVariant.Regular, DocumentPdfSizeAndContent.Values[0]) { } }
            public class DocumentPerson : Icon { public DocumentPerson() : base("DocumentPerson", IconVariant.Regular, DocumentPersonSizeAndContent.Values[0]) { } }
            public class DocumentPy : Icon { public DocumentPy() : base("DocumentPy", IconVariant.Regular, DocumentPySizeAndContent.Values[0]) { } }
            public class DocumentQuestionMark : Icon { public DocumentQuestionMark() : base("DocumentQuestionMark", IconVariant.Regular, DocumentQuestionMarkSizeAndContent.Values[0]) { } }
            public class DocumentRb : Icon { public DocumentRb() : base("DocumentRb", IconVariant.Regular, DocumentRbSizeAndContent.Values[0]) { } }
            public class DocumentRibbon : Icon { public DocumentRibbon() : base("DocumentRibbon", IconVariant.Regular, DocumentRibbonSizeAndContent.Values[0]) { } }
            public class DocumentSass : Icon { public DocumentSass() : base("DocumentSass", IconVariant.Regular, DocumentSassSizeAndContent.Values[0]) { } }
            public class DocumentSearch : Icon { public DocumentSearch() : base("DocumentSearch", IconVariant.Regular, DocumentSearchSizeAndContent.Values[0]) { } }
            public class DocumentSettings : Icon { public DocumentSettings() : base("DocumentSettings", IconVariant.Regular, DocumentSettingsSizeAndContent.Values[0]) { } }
            public class DocumentSplitHint : Icon { public DocumentSplitHint() : base("DocumentSplitHint", IconVariant.Regular, DocumentSplitHintSizeAndContent.Values[0]) { } }
            public class DocumentSplitHintOff : Icon { public DocumentSplitHintOff() : base("DocumentSplitHintOff", IconVariant.Regular, DocumentSplitHintOffSizeAndContent.Values[0]) { } }
            public class DocumentSync : Icon { public DocumentSync() : base("DocumentSync", IconVariant.Regular, DocumentSyncSizeAndContent.Values[0]) { } }
            public class DocumentTable : Icon { public DocumentTable() : base("DocumentTable", IconVariant.Regular, DocumentTableSizeAndContent.Values[0]) { } }
            public class DocumentTarget : Icon { public DocumentTarget() : base("DocumentTarget", IconVariant.Regular, DocumentTargetSizeAndContent.Values[0]) { } }
            public class DocumentText : Icon { public DocumentText() : base("DocumentText", IconVariant.Regular, DocumentTextSizeAndContent.Values[0]) { } }
            public class DocumentTs : Icon { public DocumentTs() : base("DocumentTs", IconVariant.Regular, DocumentTsSizeAndContent.Values[0]) { } }
            public class DocumentVb : Icon { public DocumentVb() : base("DocumentVb", IconVariant.Regular, DocumentVbSizeAndContent.Values[0]) { } }
            public class DocumentYml : Icon { public DocumentYml() : base("DocumentYml", IconVariant.Regular, DocumentYmlSizeAndContent.Values[0]) { } }
            public class Door : Icon { public Door() : base("Door", IconVariant.Regular, DoorSizeAndContent.Values[0]) { } }
            public class DoorArrowLeft : Icon { public DoorArrowLeft() : base("DoorArrowLeft", IconVariant.Regular, DoorArrowLeftSizeAndContent.Values[0]) { } }
            public class DoorArrowRight : Icon { public DoorArrowRight() : base("DoorArrowRight", IconVariant.Regular, DoorArrowRightSizeAndContent.Values[0]) { } }
            public class Drafts : Icon { public Drafts() : base("Drafts", IconVariant.Regular, DraftsSizeAndContent.Values[0]) { } }
            public class DrinkBeer : Icon { public DrinkBeer() : base("DrinkBeer", IconVariant.Regular, DrinkBeerSizeAndContent.Values[0]) { } }
            public class DrinkCoffee : Icon { public DrinkCoffee() : base("DrinkCoffee", IconVariant.Regular, DrinkCoffeeSizeAndContent.Values[0]) { } }
            public class DrinkMargarita : Icon { public DrinkMargarita() : base("DrinkMargarita", IconVariant.Regular, DrinkMargaritaSizeAndContent.Values[0]) { } }
            public class DrinkWine : Icon { public DrinkWine() : base("DrinkWine", IconVariant.Regular, DrinkWineSizeAndContent.Values[0]) { } }
            public class Drop : Icon { public Drop() : base("Drop", IconVariant.Regular, DropSizeAndContent.Values[1]) { } }
            public class Dumbbell : Icon { public Dumbbell() : base("Dumbbell", IconVariant.Regular, DumbbellSizeAndContent.Values[0]) { } }
            public class Earth : Icon { public Earth() : base("Earth", IconVariant.Regular, EarthSizeAndContent.Values[0]) { } }
            public class EarthLeaf : Icon { public EarthLeaf() : base("EarthLeaf", IconVariant.Regular, EarthLeafSizeAndContent.Values[0]) { } }
            public class Edit : Icon { public Edit() : base("Edit", IconVariant.Regular, EditSizeAndContent.Values[1]) { } }
            public class EditArrowBack : Icon { public EditArrowBack() : base("EditArrowBack", IconVariant.Regular, EditArrowBackSizeAndContent.Values[0]) { } }
            public class EditOff : Icon { public EditOff() : base("EditOff", IconVariant.Regular, EditOffSizeAndContent.Values[0]) { } }
            public class EditProhibited : Icon { public EditProhibited() : base("EditProhibited", IconVariant.Regular, EditProhibitedSizeAndContent.Values[0]) { } }
            public class Emoji : Icon { public Emoji() : base("Emoji", IconVariant.Regular, EmojiSizeAndContent.Values[0]) { } }
            public class EmojiAdd : Icon { public EmojiAdd() : base("EmojiAdd", IconVariant.Regular, EmojiAddSizeAndContent.Values[0]) { } }
            public class EmojiAngry : Icon { public EmojiAngry() : base("EmojiAngry", IconVariant.Regular, EmojiAngrySizeAndContent.Values[0]) { } }
            public class EmojiEdit : Icon { public EmojiEdit() : base("EmojiEdit", IconVariant.Regular, EmojiEditSizeAndContent.Values[0]) { } }
            public class EmojiHand : Icon { public EmojiHand() : base("EmojiHand", IconVariant.Regular, EmojiHandSizeAndContent.Values[0]) { } }
            public class EmojiHint : Icon { public EmojiHint() : base("EmojiHint", IconVariant.Regular, EmojiHintSizeAndContent.Values[0]) { } }
            public class EmojiLaugh : Icon { public EmojiLaugh() : base("EmojiLaugh", IconVariant.Regular, EmojiLaughSizeAndContent.Values[0]) { } }
            public class EmojiMeh : Icon { public EmojiMeh() : base("EmojiMeh", IconVariant.Regular, EmojiMehSizeAndContent.Values[0]) { } }
            public class EmojiSad : Icon { public EmojiSad() : base("EmojiSad", IconVariant.Regular, EmojiSadSizeAndContent.Values[0]) { } }
            public class EmojiSparkle : Icon { public EmojiSparkle() : base("EmojiSparkle", IconVariant.Regular, EmojiSparkleSizeAndContent.Values[0]) { } }
            public class EqualOff : Icon { public EqualOff() : base("EqualOff", IconVariant.Regular, EqualOffSizeAndContent.Values[1]) { } }
            public class ErrorCircle : Icon { public ErrorCircle() : base("ErrorCircle", IconVariant.Regular, ErrorCircleSizeAndContent.Values[1]) { } }
            public class ErrorCircleSettings : Icon { public ErrorCircleSettings() : base("ErrorCircleSettings", IconVariant.Regular, ErrorCircleSettingsSizeAndContent.Values[0]) { } }
            public class ExpandUpLeft : Icon { public ExpandUpLeft() : base("ExpandUpLeft", IconVariant.Regular, ExpandUpLeftSizeAndContent.Values[0]) { } }
            public class ExpandUpRight : Icon { public ExpandUpRight() : base("ExpandUpRight", IconVariant.Regular, ExpandUpRightSizeAndContent.Values[0]) { } }
            public class Eye : Icon { public Eye() : base("Eye", IconVariant.Regular, EyeSizeAndContent.Values[1]) { } }
            public class Eyedropper : Icon { public Eyedropper() : base("Eyedropper", IconVariant.Regular, EyedropperSizeAndContent.Values[0]) { } }
            public class EyeOff : Icon { public EyeOff() : base("EyeOff", IconVariant.Regular, EyeOffSizeAndContent.Values[0]) { } }
            public class EyeTracking : Icon { public EyeTracking() : base("EyeTracking", IconVariant.Regular, EyeTrackingSizeAndContent.Values[0]) { } }
            public class EyeTrackingOff : Icon { public EyeTrackingOff() : base("EyeTrackingOff", IconVariant.Regular, EyeTrackingOffSizeAndContent.Values[0]) { } }
            public class FastForward : Icon { public FastForward() : base("FastForward", IconVariant.Regular, FastForwardSizeAndContent.Values[0]) { } }
            public class Fax : Icon { public Fax() : base("Fax", IconVariant.Regular, FaxSizeAndContent.Values[0]) { } }
            public class Feed : Icon { public Feed() : base("Feed", IconVariant.Regular, FeedSizeAndContent.Values[0]) { } }
            public class Filmstrip : Icon { public Filmstrip() : base("Filmstrip", IconVariant.Regular, FilmstripSizeAndContent.Values[0]) { } }
            public class FilmstripPlay : Icon { public FilmstripPlay() : base("FilmstripPlay", IconVariant.Regular, FilmstripPlaySizeAndContent.Values[0]) { } }
            public class FilmstripSplit : Icon { public FilmstripSplit() : base("FilmstripSplit", IconVariant.Regular, FilmstripSplitSizeAndContent.Values[0]) { } }
            public class Filter : Icon { public Filter() : base("Filter", IconVariant.Regular, FilterSizeAndContent.Values[1]) { } }
            public class FilterDismiss : Icon { public FilterDismiss() : base("FilterDismiss", IconVariant.Regular, FilterDismissSizeAndContent.Values[0]) { } }
            public class Fingerprint : Icon { public Fingerprint() : base("Fingerprint", IconVariant.Regular, FingerprintSizeAndContent.Values[0]) { } }
            public class Fire : Icon { public Fire() : base("Fire", IconVariant.Regular, FireSizeAndContent.Values[0]) { } }
            public class Flag : Icon { public Flag() : base("Flag", IconVariant.Regular, FlagSizeAndContent.Values[0]) { } }
            public class FlagClock : Icon { public FlagClock() : base("FlagClock", IconVariant.Regular, FlagClockSizeAndContent.Values[0]) { } }
            public class FlagOff : Icon { public FlagOff() : base("FlagOff", IconVariant.Regular, FlagOffSizeAndContent.Values[0]) { } }
            public class Flash : Icon { public Flash() : base("Flash", IconVariant.Regular, FlashSizeAndContent.Values[0]) { } }
            public class FlashCheckmark : Icon { public FlashCheckmark() : base("FlashCheckmark", IconVariant.Regular, FlashCheckmarkSizeAndContent.Values[0]) { } }
            public class FlashFlow : Icon { public FlashFlow() : base("FlashFlow", IconVariant.Regular, FlashFlowSizeAndContent.Values[0]) { } }
            public class Flashlight : Icon { public Flashlight() : base("Flashlight", IconVariant.Regular, FlashlightSizeAndContent.Values[0]) { } }
            public class FlipHorizontal : Icon { public FlipHorizontal() : base("FlipHorizontal", IconVariant.Regular, FlipHorizontalSizeAndContent.Values[0]) { } }
            public class FlipVertical : Icon { public FlipVertical() : base("FlipVertical", IconVariant.Regular, FlipVerticalSizeAndContent.Values[0]) { } }
            public class Flow : Icon { public Flow() : base("Flow", IconVariant.Regular, FlowSizeAndContent.Values[0]) { } }
            public class Fluid : Icon { public Fluid() : base("Fluid", IconVariant.Regular, FluidSizeAndContent.Values[0]) { } }
            public class Folder : Icon { public Folder() : base("Folder", IconVariant.Regular, FolderSizeAndContent.Values[0]) { } }
            public class FolderAdd : Icon { public FolderAdd() : base("FolderAdd", IconVariant.Regular, FolderAddSizeAndContent.Values[0]) { } }
            public class FolderArrowLeft : Icon { public FolderArrowLeft() : base("FolderArrowLeft", IconVariant.Regular, FolderArrowLeftSizeAndContent.Values[0]) { } }
            public class FolderArrowRight : Icon { public FolderArrowRight() : base("FolderArrowRight", IconVariant.Regular, FolderArrowRightSizeAndContent.Values[0]) { } }
            public class FolderArrowUp : Icon { public FolderArrowUp() : base("FolderArrowUp", IconVariant.Regular, FolderArrowUpSizeAndContent.Values[0]) { } }
            public class FolderGlobe : Icon { public FolderGlobe() : base("FolderGlobe", IconVariant.Regular, FolderGlobeSizeAndContent.Values[0]) { } }
            public class FolderLightning : Icon { public FolderLightning() : base("FolderLightning", IconVariant.Regular, FolderLightningSizeAndContent.Values[0]) { } }
            public class FolderLink : Icon { public FolderLink() : base("FolderLink", IconVariant.Regular, FolderLinkSizeAndContent.Values[0]) { } }
            public class FolderList : Icon { public FolderList() : base("FolderList", IconVariant.Regular, FolderListSizeAndContent.Values[0]) { } }
            public class FolderMail : Icon { public FolderMail() : base("FolderMail", IconVariant.Regular, FolderMailSizeAndContent.Values[0]) { } }
            public class FolderMultiple : Icon { public FolderMultiple() : base("FolderMultiple", IconVariant.Regular, FolderMultipleSizeAndContent.Values[0]) { } }
            public class FolderOpen : Icon { public FolderOpen() : base("FolderOpen", IconVariant.Regular, FolderOpenSizeAndContent.Values[0]) { } }
            public class FolderOpenVertical : Icon { public FolderOpenVertical() : base("FolderOpenVertical", IconVariant.Regular, FolderOpenVerticalSizeAndContent.Values[0]) { } }
            public class FolderPerson : Icon { public FolderPerson() : base("FolderPerson", IconVariant.Regular, FolderPersonSizeAndContent.Values[0]) { } }
            public class FolderProhibited : Icon { public FolderProhibited() : base("FolderProhibited", IconVariant.Regular, FolderProhibitedSizeAndContent.Values[0]) { } }
            public class FolderSearch : Icon { public FolderSearch() : base("FolderSearch", IconVariant.Regular, FolderSearchSizeAndContent.Values[0]) { } }
            public class FolderSwap : Icon { public FolderSwap() : base("FolderSwap", IconVariant.Regular, FolderSwapSizeAndContent.Values[0]) { } }
            public class FolderSync : Icon { public FolderSync() : base("FolderSync", IconVariant.Regular, FolderSyncSizeAndContent.Values[0]) { } }
            public class FolderZip : Icon { public FolderZip() : base("FolderZip", IconVariant.Regular, FolderZipSizeAndContent.Values[0]) { } }
            public class FontSpaceTrackingIn : Icon { public FontSpaceTrackingIn() : base("FontSpaceTrackingIn", IconVariant.Regular, FontSpaceTrackingInSizeAndContent.Values[0]) { } }
            public class FontSpaceTrackingOut : Icon { public FontSpaceTrackingOut() : base("FontSpaceTrackingOut", IconVariant.Regular, FontSpaceTrackingOutSizeAndContent.Values[0]) { } }
            public class Food : Icon { public Food() : base("Food", IconVariant.Regular, FoodSizeAndContent.Values[0]) { } }
            public class FoodCake : Icon { public FoodCake() : base("FoodCake", IconVariant.Regular, FoodCakeSizeAndContent.Values[1]) { } }
            public class FoodChickenLeg : Icon { public FoodChickenLeg() : base("FoodChickenLeg", IconVariant.Regular, FoodChickenLegSizeAndContent.Values[0]) { } }
            public class FoodEgg : Icon { public FoodEgg() : base("FoodEgg", IconVariant.Regular, FoodEggSizeAndContent.Values[0]) { } }
            public class FoodToast : Icon { public FoodToast() : base("FoodToast", IconVariant.Regular, FoodToastSizeAndContent.Values[0]) { } }
            public class Fps30 : Icon { public Fps30() : base("Fps30", IconVariant.Regular, Fps30SizeAndContent.Values[0]) { } }
            public class Fps60 : Icon { public Fps60() : base("Fps60", IconVariant.Regular, Fps60SizeAndContent.Values[0]) { } }
            public class Frame : Icon { public Frame() : base("Frame", IconVariant.Regular, FrameSizeAndContent.Values[0]) { } }
            public class FStop : Icon { public FStop() : base("FStop", IconVariant.Regular, FStopSizeAndContent.Values[0]) { } }
            public class FullScreenMaximize : Icon { public FullScreenMaximize() : base("FullScreenMaximize", IconVariant.Regular, FullScreenMaximizeSizeAndContent.Values[0]) { } }
            public class FullScreenMinimize : Icon { public FullScreenMinimize() : base("FullScreenMinimize", IconVariant.Regular, FullScreenMinimizeSizeAndContent.Values[0]) { } }
            public class Games : Icon { public Games() : base("Games", IconVariant.Regular, GamesSizeAndContent.Values[0]) { } }
            public class GanttChart : Icon { public GanttChart() : base("GanttChart", IconVariant.Regular, GanttChartSizeAndContent.Values[0]) { } }
            public class Gavel : Icon { public Gavel() : base("Gavel", IconVariant.Regular, GavelSizeAndContent.Values[0]) { } }
            public class GavelProhibited : Icon { public GavelProhibited() : base("GavelProhibited", IconVariant.Regular, GavelProhibitedSizeAndContent.Values[0]) { } }
            public class Gif : Icon { public Gif() : base("Gif", IconVariant.Regular, GifSizeAndContent.Values[0]) { } }
            public class Gift : Icon { public Gift() : base("Gift", IconVariant.Regular, GiftSizeAndContent.Values[0]) { } }
            public class GiftCard : Icon { public GiftCard() : base("GiftCard", IconVariant.Regular, GiftCardSizeAndContent.Values[0]) { } }
            public class GiftOpen : Icon { public GiftOpen() : base("GiftOpen", IconVariant.Regular, GiftOpenSizeAndContent.Values[0]) { } }
            public class GlanceHorizontal : Icon { public GlanceHorizontal() : base("GlanceHorizontal", IconVariant.Regular, GlanceHorizontalSizeAndContent.Values[1]) { } }
            public class GlanceHorizontalSparkles : Icon { public GlanceHorizontalSparkles() : base("GlanceHorizontalSparkles", IconVariant.Regular, GlanceHorizontalSparklesSizeAndContent.Values[0]) { } }
            public class Glasses : Icon { public Glasses() : base("Glasses", IconVariant.Regular, GlassesSizeAndContent.Values[0]) { } }
            public class GlassesOff : Icon { public GlassesOff() : base("GlassesOff", IconVariant.Regular, GlassesOffSizeAndContent.Values[0]) { } }
            public class Globe : Icon { public Globe() : base("Globe", IconVariant.Regular, GlobeSizeAndContent.Values[1]) { } }
            public class GlobeArrowForward : Icon { public GlobeArrowForward() : base("GlobeArrowForward", IconVariant.Regular, GlobeArrowForwardSizeAndContent.Values[0]) { } }
            public class GlobeArrowUp : Icon { public GlobeArrowUp() : base("GlobeArrowUp", IconVariant.Regular, GlobeArrowUpSizeAndContent.Values[0]) { } }
            public class GlobeClock : Icon { public GlobeClock() : base("GlobeClock", IconVariant.Regular, GlobeClockSizeAndContent.Values[0]) { } }
            public class GlobeError : Icon { public GlobeError() : base("GlobeError", IconVariant.Regular, GlobeErrorSizeAndContent.Values[0]) { } }
            public class GlobeProhibited : Icon { public GlobeProhibited() : base("GlobeProhibited", IconVariant.Regular, GlobeProhibitedSizeAndContent.Values[0]) { } }
            public class GlobeStar : Icon { public GlobeStar() : base("GlobeStar", IconVariant.Regular, GlobeStarSizeAndContent.Values[0]) { } }
            public class GlobeSync : Icon { public GlobeSync() : base("GlobeSync", IconVariant.Regular, GlobeSyncSizeAndContent.Values[0]) { } }
            public class GlobeWarning : Icon { public GlobeWarning() : base("GlobeWarning", IconVariant.Regular, GlobeWarningSizeAndContent.Values[0]) { } }
            public class Grid : Icon { public Grid() : base("Grid", IconVariant.Regular, GridSizeAndContent.Values[0]) { } }
            public class GridKanban : Icon { public GridKanban() : base("GridKanban", IconVariant.Regular, GridKanbanSizeAndContent.Values[0]) { } }
            public class Guest : Icon { public Guest() : base("Guest", IconVariant.Regular, GuestSizeAndContent.Values[0]) { } }
            public class Guitar : Icon { public Guitar() : base("Guitar", IconVariant.Regular, GuitarSizeAndContent.Values[0]) { } }
            public class HandDraw : Icon { public HandDraw() : base("HandDraw", IconVariant.Regular, HandDrawSizeAndContent.Values[0]) { } }
            public class HandLeft : Icon { public HandLeft() : base("HandLeft", IconVariant.Regular, HandLeftSizeAndContent.Values[0]) { } }
            public class HandLeftChat : Icon { public HandLeftChat() : base("HandLeftChat", IconVariant.Regular, HandLeftChatSizeAndContent.Values[0]) { } }
            public class HandRight : Icon { public HandRight() : base("HandRight", IconVariant.Regular, HandRightSizeAndContent.Values[0]) { } }
            public class HandRightOff : Icon { public HandRightOff() : base("HandRightOff", IconVariant.Regular, HandRightOffSizeAndContent.Values[0]) { } }
            public class Handshake : Icon { public Handshake() : base("Handshake", IconVariant.Regular, HandshakeSizeAndContent.Values[0]) { } }
            public class HandWave : Icon { public HandWave() : base("HandWave", IconVariant.Regular, HandWaveSizeAndContent.Values[0]) { } }
            public class HardDrive : Icon { public HardDrive() : base("HardDrive", IconVariant.Regular, HardDriveSizeAndContent.Values[0]) { } }
            public class HatGraduation : Icon { public HatGraduation() : base("HatGraduation", IconVariant.Regular, HatGraduationSizeAndContent.Values[1]) { } }
            public class HatGraduationAdd : Icon { public HatGraduationAdd() : base("HatGraduationAdd", IconVariant.Regular, HatGraduationAddSizeAndContent.Values[0]) { } }
            public class HatGraduationSparkle : Icon { public HatGraduationSparkle() : base("HatGraduationSparkle", IconVariant.Regular, HatGraduationSparkleSizeAndContent.Values[0]) { } }
            public class Hd : Icon { public Hd() : base("Hd", IconVariant.Regular, HdSizeAndContent.Values[0]) { } }
            public class Headset : Icon { public Headset() : base("Headset", IconVariant.Regular, HeadsetSizeAndContent.Values[0]) { } }
            public class Heart : Icon { public Heart() : base("Heart", IconVariant.Regular, HeartSizeAndContent.Values[1]) { } }
            public class HeartBroken : Icon { public HeartBroken() : base("HeartBroken", IconVariant.Regular, HeartBrokenSizeAndContent.Values[0]) { } }
            public class HeartCircle : Icon { public HeartCircle() : base("HeartCircle", IconVariant.Regular, HeartCircleSizeAndContent.Values[0]) { } }
            public class HeartCircleHint : Icon { public HeartCircleHint() : base("HeartCircleHint", IconVariant.Regular, HeartCircleHintSizeAndContent.Values[0]) { } }
            public class HeartOff : Icon { public HeartOff() : base("HeartOff", IconVariant.Regular, HeartOffSizeAndContent.Values[0]) { } }
            public class Hexagon : Icon { public Hexagon() : base("Hexagon", IconVariant.Regular, HexagonSizeAndContent.Values[1]) { } }
            public class HexagonThree : Icon { public HexagonThree() : base("HexagonThree", IconVariant.Regular, HexagonThreeSizeAndContent.Values[1]) { } }
            public class Highlight : Icon { public Highlight() : base("Highlight", IconVariant.Regular, HighlightSizeAndContent.Values[0]) { } }
            public class History : Icon { public History() : base("History", IconVariant.Regular, HistorySizeAndContent.Values[0]) { } }
            public class Home : Icon { public Home() : base("Home", IconVariant.Regular, HomeSizeAndContent.Values[1]) { } }
            public class HomeCheckmark : Icon { public HomeCheckmark() : base("HomeCheckmark", IconVariant.Regular, HomeCheckmarkSizeAndContent.Values[0]) { } }
            public class HomeHeart : Icon { public HomeHeart() : base("HomeHeart", IconVariant.Regular, HomeHeartSizeAndContent.Values[0]) { } }
            public class Hourglass : Icon { public Hourglass() : base("Hourglass", IconVariant.Regular, HourglassSizeAndContent.Values[0]) { } }
            public class HourglassHalf : Icon { public HourglassHalf() : base("HourglassHalf", IconVariant.Regular, HourglassHalfSizeAndContent.Values[0]) { } }
            public class HourglassOneQuarter : Icon { public HourglassOneQuarter() : base("HourglassOneQuarter", IconVariant.Regular, HourglassOneQuarterSizeAndContent.Values[0]) { } }
            public class HourglassThreeQuarter : Icon { public HourglassThreeQuarter() : base("HourglassThreeQuarter", IconVariant.Regular, HourglassThreeQuarterSizeAndContent.Values[0]) { } }
            public class Image : Icon { public Image() : base("Image", IconVariant.Regular, ImageSizeAndContent.Values[0]) { } }
            public class ImageAltText : Icon { public ImageAltText() : base("ImageAltText", IconVariant.Regular, ImageAltTextSizeAndContent.Values[0]) { } }
            public class ImageBorder : Icon { public ImageBorder() : base("ImageBorder", IconVariant.Regular, ImageBorderSizeAndContent.Values[0]) { } }
            public class ImageCircle : Icon { public ImageCircle() : base("ImageCircle", IconVariant.Regular, ImageCircleSizeAndContent.Values[0]) { } }
            public class ImageEdit : Icon { public ImageEdit() : base("ImageEdit", IconVariant.Regular, ImageEditSizeAndContent.Values[0]) { } }
            public class ImageMultiple : Icon { public ImageMultiple() : base("ImageMultiple", IconVariant.Regular, ImageMultipleSizeAndContent.Values[0]) { } }
            public class ImageMultipleOff : Icon { public ImageMultipleOff() : base("ImageMultipleOff", IconVariant.Regular, ImageMultipleOffSizeAndContent.Values[0]) { } }
            public class ImageSparkle : Icon { public ImageSparkle() : base("ImageSparkle", IconVariant.Regular, ImageSparkleSizeAndContent.Values[0]) { } }
            public class ImageStack : Icon { public ImageStack() : base("ImageStack", IconVariant.Regular, ImageStackSizeAndContent.Values[0]) { } }
            public class ImageTable : Icon { public ImageTable() : base("ImageTable", IconVariant.Regular, ImageTableSizeAndContent.Values[0]) { } }
            public class ImmersiveReader : Icon { public ImmersiveReader() : base("ImmersiveReader", IconVariant.Regular, ImmersiveReaderSizeAndContent.Values[0]) { } }
            public class Important : Icon { public Important() : base("Important", IconVariant.Regular, ImportantSizeAndContent.Values[1]) { } }
            public class Info : Icon { public Info() : base("Info", IconVariant.Regular, InfoSizeAndContent.Values[1]) { } }
            public class InkingTool : Icon { public InkingTool() : base("InkingTool", IconVariant.Regular, InkingToolSizeAndContent.Values[0]) { } }
            public class InprivateAccount : Icon { public InprivateAccount() : base("InprivateAccount", IconVariant.Regular, InprivateAccountSizeAndContent.Values[0]) { } }
            public class Iot : Icon { public Iot() : base("Iot", IconVariant.Regular, IotSizeAndContent.Values[0]) { } }
            public class IotAlert : Icon { public IotAlert() : base("IotAlert", IconVariant.Regular, IotAlertSizeAndContent.Values[0]) { } }
            public class Javascript : Icon { public Javascript() : base("Javascript", IconVariant.Regular, JavascriptSizeAndContent.Values[0]) { } }
            public class Key : Icon { public Key() : base("Key", IconVariant.Regular, KeySizeAndContent.Values[0]) { } }
            public class Keyboard : Icon { public Keyboard() : base("Keyboard", IconVariant.Regular, KeyboardSizeAndContent.Values[0]) { } }
            public class KeyboardMouse : Icon { public KeyboardMouse() : base("KeyboardMouse", IconVariant.Regular, KeyboardMouseSizeAndContent.Values[0]) { } }
            public class KeyboardShift : Icon { public KeyboardShift() : base("KeyboardShift", IconVariant.Regular, KeyboardShiftSizeAndContent.Values[0]) { } }
            public class KeyboardShiftUppercase : Icon { public KeyboardShiftUppercase() : base("KeyboardShiftUppercase", IconVariant.Regular, KeyboardShiftUppercaseSizeAndContent.Values[0]) { } }
            public class KeyCommand : Icon { public KeyCommand() : base("KeyCommand", IconVariant.Regular, KeyCommandSizeAndContent.Values[0]) { } }
            public class KeyMultiple : Icon { public KeyMultiple() : base("KeyMultiple", IconVariant.Regular, KeyMultipleSizeAndContent.Values[0]) { } }
            public class Laptop : Icon { public Laptop() : base("Laptop", IconVariant.Regular, LaptopSizeAndContent.Values[0]) { } }
            public class LaptopDismiss : Icon { public LaptopDismiss() : base("LaptopDismiss", IconVariant.Regular, LaptopDismissSizeAndContent.Values[0]) { } }
            public class LaptopShield : Icon { public LaptopShield() : base("LaptopShield", IconVariant.Regular, LaptopShieldSizeAndContent.Values[0]) { } }
            public class LayerDiagonal : Icon { public LayerDiagonal() : base("LayerDiagonal", IconVariant.Regular, LayerDiagonalSizeAndContent.Values[0]) { } }
            public class LayerDiagonalPerson : Icon { public LayerDiagonalPerson() : base("LayerDiagonalPerson", IconVariant.Regular, LayerDiagonalPersonSizeAndContent.Values[0]) { } }
            public class LayoutCellFour : Icon { public LayoutCellFour() : base("LayoutCellFour", IconVariant.Regular, LayoutCellFourSizeAndContent.Values[0]) { } }
            public class LayoutColumnFour : Icon { public LayoutColumnFour() : base("LayoutColumnFour", IconVariant.Regular, LayoutColumnFourSizeAndContent.Values[0]) { } }
            public class LayoutColumnOneThirdLeft : Icon { public LayoutColumnOneThirdLeft() : base("LayoutColumnOneThirdLeft", IconVariant.Regular, LayoutColumnOneThirdLeftSizeAndContent.Values[0]) { } }
            public class LayoutColumnOneThirdRight : Icon { public LayoutColumnOneThirdRight() : base("LayoutColumnOneThirdRight", IconVariant.Regular, LayoutColumnOneThirdRightSizeAndContent.Values[0]) { } }
            public class LayoutColumnOneThirdRightHint : Icon { public LayoutColumnOneThirdRightHint() : base("LayoutColumnOneThirdRightHint", IconVariant.Regular, LayoutColumnOneThirdRightHintSizeAndContent.Values[0]) { } }
            public class LayoutColumnThree : Icon { public LayoutColumnThree() : base("LayoutColumnThree", IconVariant.Regular, LayoutColumnThreeSizeAndContent.Values[0]) { } }
            public class LayoutColumnTwo : Icon { public LayoutColumnTwo() : base("LayoutColumnTwo", IconVariant.Regular, LayoutColumnTwoSizeAndContent.Values[0]) { } }
            public class LayoutColumnTwoSplitLeft : Icon { public LayoutColumnTwoSplitLeft() : base("LayoutColumnTwoSplitLeft", IconVariant.Regular, LayoutColumnTwoSplitLeftSizeAndContent.Values[0]) { } }
            public class LayoutColumnTwoSplitRight : Icon { public LayoutColumnTwoSplitRight() : base("LayoutColumnTwoSplitRight", IconVariant.Regular, LayoutColumnTwoSplitRightSizeAndContent.Values[0]) { } }
            public class LayoutRowFour : Icon { public LayoutRowFour() : base("LayoutRowFour", IconVariant.Regular, LayoutRowFourSizeAndContent.Values[0]) { } }
            public class LayoutRowThree : Icon { public LayoutRowThree() : base("LayoutRowThree", IconVariant.Regular, LayoutRowThreeSizeAndContent.Values[0]) { } }
            public class LayoutRowTwo : Icon { public LayoutRowTwo() : base("LayoutRowTwo", IconVariant.Regular, LayoutRowTwoSizeAndContent.Values[0]) { } }
            public class LayoutRowTwoSplitBottom : Icon { public LayoutRowTwoSplitBottom() : base("LayoutRowTwoSplitBottom", IconVariant.Regular, LayoutRowTwoSplitBottomSizeAndContent.Values[0]) { } }
            public class LayoutRowTwoSplitTop : Icon { public LayoutRowTwoSplitTop() : base("LayoutRowTwoSplitTop", IconVariant.Regular, LayoutRowTwoSplitTopSizeAndContent.Values[0]) { } }
            public class LeafOne : Icon { public LeafOne() : base("LeafOne", IconVariant.Regular, LeafOneSizeAndContent.Values[0]) { } }
            public class LeafThree : Icon { public LeafThree() : base("LeafThree", IconVariant.Regular, LeafThreeSizeAndContent.Values[0]) { } }
            public class LeafTwo : Icon { public LeafTwo() : base("LeafTwo", IconVariant.Regular, LeafTwoSizeAndContent.Values[0]) { } }
            public class Library : Icon { public Library() : base("Library", IconVariant.Regular, LibrarySizeAndContent.Values[0]) { } }
            public class Lightbulb : Icon { public Lightbulb() : base("Lightbulb", IconVariant.Regular, LightbulbSizeAndContent.Values[0]) { } }
            public class LightbulbFilament : Icon { public LightbulbFilament() : base("LightbulbFilament", IconVariant.Regular, LightbulbFilamentSizeAndContent.Values[0]) { } }
            public class LightbulbPerson : Icon { public LightbulbPerson() : base("LightbulbPerson", IconVariant.Regular, LightbulbPersonSizeAndContent.Values[0]) { } }
            public class Likert : Icon { public Likert() : base("Likert", IconVariant.Regular, LikertSizeAndContent.Values[0]) { } }
            public class LineHorizontal1 : Icon { public LineHorizontal1() : base("LineHorizontal1", IconVariant.Regular, LineHorizontal1SizeAndContent.Values[0]) { } }
            public class LineHorizontal1Dashes : Icon { public LineHorizontal1Dashes() : base("LineHorizontal1Dashes", IconVariant.Regular, LineHorizontal1DashesSizeAndContent.Values[0]) { } }
            public class LineHorizontal2DashesSolid : Icon { public LineHorizontal2DashesSolid() : base("LineHorizontal2DashesSolid", IconVariant.Regular, LineHorizontal2DashesSolidSizeAndContent.Values[0]) { } }
            public class LineHorizontal4 : Icon { public LineHorizontal4() : base("LineHorizontal4", IconVariant.Regular, LineHorizontal4SizeAndContent.Values[0]) { } }
            public class LineHorizontal4Search : Icon { public LineHorizontal4Search() : base("LineHorizontal4Search", IconVariant.Regular, LineHorizontal4SearchSizeAndContent.Values[0]) { } }
            public class Link : Icon { public Link() : base("Link", IconVariant.Regular, LinkSizeAndContent.Values[1]) { } }
            public class LinkAdd : Icon { public LinkAdd() : base("LinkAdd", IconVariant.Regular, LinkAddSizeAndContent.Values[0]) { } }
            public class LinkDismiss : Icon { public LinkDismiss() : base("LinkDismiss", IconVariant.Regular, LinkDismissSizeAndContent.Values[0]) { } }
            public class LinkEdit : Icon { public LinkEdit() : base("LinkEdit", IconVariant.Regular, LinkEditSizeAndContent.Values[0]) { } }
            public class LinkMultiple : Icon { public LinkMultiple() : base("LinkMultiple", IconVariant.Regular, LinkMultipleSizeAndContent.Values[0]) { } }
            public class LinkPerson : Icon { public LinkPerson() : base("LinkPerson", IconVariant.Regular, LinkPersonSizeAndContent.Values[0]) { } }
            public class LinkSquare : Icon { public LinkSquare() : base("LinkSquare", IconVariant.Regular, LinkSquareSizeAndContent.Values[1]) { } }
            public class List : Icon { public List() : base("List", IconVariant.Regular, ListSizeAndContent.Values[0]) { } }
            public class ListBar : Icon { public ListBar() : base("ListBar", IconVariant.Regular, ListBarSizeAndContent.Values[0]) { } }
            public class ListBarTree : Icon { public ListBarTree() : base("ListBarTree", IconVariant.Regular, ListBarTreeSizeAndContent.Values[0]) { } }
            public class ListBarTreeOffset : Icon { public ListBarTreeOffset() : base("ListBarTreeOffset", IconVariant.Regular, ListBarTreeOffsetSizeAndContent.Values[0]) { } }
            public class ListRtl : Icon { public ListRtl() : base("ListRtl", IconVariant.Regular, ListRtlSizeAndContent.Values[0]) { } }
            public class LocalLanguage : Icon { public LocalLanguage() : base("LocalLanguage", IconVariant.Regular, LocalLanguageSizeAndContent.Values[0]) { } }
            public class LocalLanguageEn : Icon { public LocalLanguageEn() : base("LocalLanguageEn", IconVariant.Regular, LocalLanguageEnSizeAndContent.Values[0]) { } }
            public class LocalLanguageKo : Icon { public LocalLanguageKo() : base("LocalLanguageKo", IconVariant.Regular, LocalLanguageKoSizeAndContent.Values[0]) { } }
            public class Location : Icon { public Location() : base("Location", IconVariant.Regular, LocationSizeAndContent.Values[1]) { } }
            public class LocationAdd : Icon { public LocationAdd() : base("LocationAdd", IconVariant.Regular, LocationAddSizeAndContent.Values[0]) { } }
            public class LocationArrow : Icon { public LocationArrow() : base("LocationArrow", IconVariant.Regular, LocationArrowSizeAndContent.Values[1]) { } }
            public class LocationArrowLeft : Icon { public LocationArrowLeft() : base("LocationArrowLeft", IconVariant.Regular, LocationArrowLeftSizeAndContent.Values[0]) { } }
            public class LocationArrowRight : Icon { public LocationArrowRight() : base("LocationArrowRight", IconVariant.Regular, LocationArrowRightSizeAndContent.Values[0]) { } }
            public class LocationArrowUp : Icon { public LocationArrowUp() : base("LocationArrowUp", IconVariant.Regular, LocationArrowUpSizeAndContent.Values[0]) { } }
            public class LocationOff : Icon { public LocationOff() : base("LocationOff", IconVariant.Regular, LocationOffSizeAndContent.Values[0]) { } }
            public class LocationTargetSquare : Icon { public LocationTargetSquare() : base("LocationTargetSquare", IconVariant.Regular, LocationTargetSquareSizeAndContent.Values[0]) { } }
            public class LockClosed : Icon { public LockClosed() : base("LockClosed", IconVariant.Regular, LockClosedSizeAndContent.Values[1]) { } }
            public class LockClosedKey : Icon { public LockClosedKey() : base("LockClosedKey", IconVariant.Regular, LockClosedKeySizeAndContent.Values[0]) { } }
            public class LockOpen : Icon { public LockOpen() : base("LockOpen", IconVariant.Regular, LockOpenSizeAndContent.Values[1]) { } }
            public class LockShield : Icon { public LockShield() : base("LockShield", IconVariant.Regular, LockShieldSizeAndContent.Values[0]) { } }
            public class Luggage : Icon { public Luggage() : base("Luggage", IconVariant.Regular, LuggageSizeAndContent.Values[0]) { } }
            public class Mail : Icon { public Mail() : base("Mail", IconVariant.Regular, MailSizeAndContent.Values[1]) { } }
            public class MailAdd : Icon { public MailAdd() : base("MailAdd", IconVariant.Regular, MailAddSizeAndContent.Values[0]) { } }
            public class MailAlert : Icon { public MailAlert() : base("MailAlert", IconVariant.Regular, MailAlertSizeAndContent.Values[0]) { } }
            public class MailAllRead : Icon { public MailAllRead() : base("MailAllRead", IconVariant.Regular, MailAllReadSizeAndContent.Values[0]) { } }
            public class MailArrowDoubleBack : Icon { public MailArrowDoubleBack() : base("MailArrowDoubleBack", IconVariant.Regular, MailArrowDoubleBackSizeAndContent.Values[0]) { } }
            public class MailArrowDown : Icon { public MailArrowDown() : base("MailArrowDown", IconVariant.Regular, MailArrowDownSizeAndContent.Values[0]) { } }
            public class MailArrowForward : Icon { public MailArrowForward() : base("MailArrowForward", IconVariant.Regular, MailArrowForwardSizeAndContent.Values[0]) { } }
            public class MailArrowUp : Icon { public MailArrowUp() : base("MailArrowUp", IconVariant.Regular, MailArrowUpSizeAndContent.Values[0]) { } }
            public class MailAttach : Icon { public MailAttach() : base("MailAttach", IconVariant.Regular, MailAttachSizeAndContent.Values[0]) { } }
            public class Mailbox : Icon { public Mailbox() : base("Mailbox", IconVariant.Regular, MailboxSizeAndContent.Values[0]) { } }
            public class MailCheckmark : Icon { public MailCheckmark() : base("MailCheckmark", IconVariant.Regular, MailCheckmarkSizeAndContent.Values[0]) { } }
            public class MailClock : Icon { public MailClock() : base("MailClock", IconVariant.Regular, MailClockSizeAndContent.Values[0]) { } }
            public class MailDismiss : Icon { public MailDismiss() : base("MailDismiss", IconVariant.Regular, MailDismissSizeAndContent.Values[0]) { } }
            public class MailError : Icon { public MailError() : base("MailError", IconVariant.Regular, MailErrorSizeAndContent.Values[0]) { } }
            public class MailInbox : Icon { public MailInbox() : base("MailInbox", IconVariant.Regular, MailInboxSizeAndContent.Values[0]) { } }
            public class MailInboxAdd : Icon { public MailInboxAdd() : base("MailInboxAdd", IconVariant.Regular, MailInboxAddSizeAndContent.Values[0]) { } }
            public class MailInboxArrowDown : Icon { public MailInboxArrowDown() : base("MailInboxArrowDown", IconVariant.Regular, MailInboxArrowDownSizeAndContent.Values[0]) { } }
            public class MailInboxCheckmark : Icon { public MailInboxCheckmark() : base("MailInboxCheckmark", IconVariant.Regular, MailInboxCheckmarkSizeAndContent.Values[0]) { } }
            public class MailInboxDismiss : Icon { public MailInboxDismiss() : base("MailInboxDismiss", IconVariant.Regular, MailInboxDismissSizeAndContent.Values[0]) { } }
            public class MailList : Icon { public MailList() : base("MailList", IconVariant.Regular, MailListSizeAndContent.Values[0]) { } }
            public class MailMultiple : Icon { public MailMultiple() : base("MailMultiple", IconVariant.Regular, MailMultipleSizeAndContent.Values[0]) { } }
            public class MailOff : Icon { public MailOff() : base("MailOff", IconVariant.Regular, MailOffSizeAndContent.Values[0]) { } }
            public class MailOpenPerson : Icon { public MailOpenPerson() : base("MailOpenPerson", IconVariant.Regular, MailOpenPersonSizeAndContent.Values[0]) { } }
            public class MailPause : Icon { public MailPause() : base("MailPause", IconVariant.Regular, MailPauseSizeAndContent.Values[0]) { } }
            public class MailProhibited : Icon { public MailProhibited() : base("MailProhibited", IconVariant.Regular, MailProhibitedSizeAndContent.Values[0]) { } }
            public class MailRead : Icon { public MailRead() : base("MailRead", IconVariant.Regular, MailReadSizeAndContent.Values[0]) { } }
            public class MailReadMultiple : Icon { public MailReadMultiple() : base("MailReadMultiple", IconVariant.Regular, MailReadMultipleSizeAndContent.Values[0]) { } }
            public class MailRewind : Icon { public MailRewind() : base("MailRewind", IconVariant.Regular, MailRewindSizeAndContent.Values[0]) { } }
            public class MailSettings : Icon { public MailSettings() : base("MailSettings", IconVariant.Regular, MailSettingsSizeAndContent.Values[0]) { } }
            public class MailShield : Icon { public MailShield() : base("MailShield", IconVariant.Regular, MailShieldSizeAndContent.Values[0]) { } }
            public class MailTemplate : Icon { public MailTemplate() : base("MailTemplate", IconVariant.Regular, MailTemplateSizeAndContent.Values[0]) { } }
            public class MailUnread : Icon { public MailUnread() : base("MailUnread", IconVariant.Regular, MailUnreadSizeAndContent.Values[1]) { } }
            public class MailWarning : Icon { public MailWarning() : base("MailWarning", IconVariant.Regular, MailWarningSizeAndContent.Values[0]) { } }
            public class Map : Icon { public Map() : base("Map", IconVariant.Regular, MapSizeAndContent.Values[0]) { } }
            public class MapDrive : Icon { public MapDrive() : base("MapDrive", IconVariant.Regular, MapDriveSizeAndContent.Values[0]) { } }
            public class MathFormatProfessional : Icon { public MathFormatProfessional() : base("MathFormatProfessional", IconVariant.Regular, MathFormatProfessionalSizeAndContent.Values[0]) { } }
            public class MathFormula : Icon { public MathFormula() : base("MathFormula", IconVariant.Regular, MathFormulaSizeAndContent.Values[0]) { } }
            public class MathSymbols : Icon { public MathSymbols() : base("MathSymbols", IconVariant.Regular, MathSymbolsSizeAndContent.Values[0]) { } }
            public class Maximize : Icon { public Maximize() : base("Maximize", IconVariant.Regular, MaximizeSizeAndContent.Values[0]) { } }
            public class MeetNow : Icon { public MeetNow() : base("MeetNow", IconVariant.Regular, MeetNowSizeAndContent.Values[0]) { } }
            public class Megaphone : Icon { public Megaphone() : base("Megaphone", IconVariant.Regular, MegaphoneSizeAndContent.Values[0]) { } }
            public class MegaphoneLoud : Icon { public MegaphoneLoud() : base("MegaphoneLoud", IconVariant.Regular, MegaphoneLoudSizeAndContent.Values[0]) { } }
            public class MegaphoneOff : Icon { public MegaphoneOff() : base("MegaphoneOff", IconVariant.Regular, MegaphoneOffSizeAndContent.Values[0]) { } }
            public class Memory : Icon { public Memory() : base("Memory", IconVariant.Regular, MemorySizeAndContent.Values[0]) { } }
            public class Mention : Icon { public Mention() : base("Mention", IconVariant.Regular, MentionSizeAndContent.Values[1]) { } }
            public class Merge : Icon { public Merge() : base("Merge", IconVariant.Regular, MergeSizeAndContent.Values[0]) { } }
            public class Mic : Icon { public Mic() : base("Mic", IconVariant.Regular, MicSizeAndContent.Values[0]) { } }
            public class MicOff : Icon { public MicOff() : base("MicOff", IconVariant.Regular, MicOffSizeAndContent.Values[1]) { } }
            public class MicProhibited : Icon { public MicProhibited() : base("MicProhibited", IconVariant.Regular, MicProhibitedSizeAndContent.Values[0]) { } }
            public class MicPulse : Icon { public MicPulse() : base("MicPulse", IconVariant.Regular, MicPulseSizeAndContent.Values[0]) { } }
            public class MicPulseOff : Icon { public MicPulseOff() : base("MicPulseOff", IconVariant.Regular, MicPulseOffSizeAndContent.Values[0]) { } }
            public class MicSparkle : Icon { public MicSparkle() : base("MicSparkle", IconVariant.Regular, MicSparkleSizeAndContent.Values[0]) { } }
            public class Molecule : Icon { public Molecule() : base("Molecule", IconVariant.Regular, MoleculeSizeAndContent.Values[0]) { } }
            public class Money : Icon { public Money() : base("Money", IconVariant.Regular, MoneySizeAndContent.Values[0]) { } }
            public class MoneyHand : Icon { public MoneyHand() : base("MoneyHand", IconVariant.Regular, MoneyHandSizeAndContent.Values[0]) { } }
            public class MoneySettings : Icon { public MoneySettings() : base("MoneySettings", IconVariant.Regular, MoneySettingsSizeAndContent.Values[0]) { } }
            public class MoreCircle : Icon { public MoreCircle() : base("MoreCircle", IconVariant.Regular, MoreCircleSizeAndContent.Values[0]) { } }
            public class MoreHorizontal : Icon { public MoreHorizontal() : base("MoreHorizontal", IconVariant.Regular, MoreHorizontalSizeAndContent.Values[0]) { } }
            public class MoreVertical : Icon { public MoreVertical() : base("MoreVertical", IconVariant.Regular, MoreVerticalSizeAndContent.Values[0]) { } }
            public class MoviesAndTv : Icon { public MoviesAndTv() : base("MoviesAndTv", IconVariant.Regular, MoviesAndTvSizeAndContent.Values[0]) { } }
            public class MultiselectLtr : Icon { public MultiselectLtr() : base("MultiselectLtr", IconVariant.Regular, MultiselectLtrSizeAndContent.Values[0]) { } }
            public class MultiselectRtl : Icon { public MultiselectRtl() : base("MultiselectRtl", IconVariant.Regular, MultiselectRtlSizeAndContent.Values[0]) { } }
            public class MusicNote2 : Icon { public MusicNote2() : base("MusicNote2", IconVariant.Regular, MusicNote2SizeAndContent.Values[0]) { } }
            public class MusicNoteOff2 : Icon { public MusicNoteOff2() : base("MusicNoteOff2", IconVariant.Regular, MusicNoteOff2SizeAndContent.Values[0]) { } }
            public class MyLocation : Icon { public MyLocation() : base("MyLocation", IconVariant.Regular, MyLocationSizeAndContent.Values[1]) { } }
            public class Navigation : Icon { public Navigation() : base("Navigation", IconVariant.Regular, NavigationSizeAndContent.Values[0]) { } }
            public class NetworkAdapter : Icon { public NetworkAdapter() : base("NetworkAdapter", IconVariant.Regular, NetworkAdapterSizeAndContent.Values[0]) { } }
            public class New : Icon { public New() : base("New", IconVariant.Regular, NewSizeAndContent.Values[0]) { } }
            public class News : Icon { public News() : base("News", IconVariant.Regular, NewsSizeAndContent.Values[0]) { } }
            public class Next : Icon { public Next() : base("Next", IconVariant.Regular, NextSizeAndContent.Values[0]) { } }
            public class Note : Icon { public Note() : base("Note", IconVariant.Regular, NoteSizeAndContent.Values[0]) { } }
            public class NoteAdd : Icon { public NoteAdd() : base("NoteAdd", IconVariant.Regular, NoteAddSizeAndContent.Values[0]) { } }
            public class Notebook : Icon { public Notebook() : base("Notebook", IconVariant.Regular, NotebookSizeAndContent.Values[0]) { } }
            public class Notepad : Icon { public Notepad() : base("Notepad", IconVariant.Regular, NotepadSizeAndContent.Values[1]) { } }
            public class NotepadEdit : Icon { public NotepadEdit() : base("NotepadEdit", IconVariant.Regular, NotepadEditSizeAndContent.Values[0]) { } }
            public class NotepadPerson : Icon { public NotepadPerson() : base("NotepadPerson", IconVariant.Regular, NotepadPersonSizeAndContent.Values[0]) { } }
            public class NotePin : Icon { public NotePin() : base("NotePin", IconVariant.Regular, NotePinSizeAndContent.Values[0]) { } }
            public class NumberCircle0 : Icon { public NumberCircle0() : base("NumberCircle0", IconVariant.Regular, NumberCircle0SizeAndContent.Values[0]) { } }
            public class NumberCircle1 : Icon { public NumberCircle1() : base("NumberCircle1", IconVariant.Regular, NumberCircle1SizeAndContent.Values[0]) { } }
            public class NumberCircle2 : Icon { public NumberCircle2() : base("NumberCircle2", IconVariant.Regular, NumberCircle2SizeAndContent.Values[0]) { } }
            public class NumberCircle3 : Icon { public NumberCircle3() : base("NumberCircle3", IconVariant.Regular, NumberCircle3SizeAndContent.Values[0]) { } }
            public class NumberCircle4 : Icon { public NumberCircle4() : base("NumberCircle4", IconVariant.Regular, NumberCircle4SizeAndContent.Values[0]) { } }
            public class NumberCircle5 : Icon { public NumberCircle5() : base("NumberCircle5", IconVariant.Regular, NumberCircle5SizeAndContent.Values[0]) { } }
            public class NumberCircle6 : Icon { public NumberCircle6() : base("NumberCircle6", IconVariant.Regular, NumberCircle6SizeAndContent.Values[0]) { } }
            public class NumberCircle7 : Icon { public NumberCircle7() : base("NumberCircle7", IconVariant.Regular, NumberCircle7SizeAndContent.Values[0]) { } }
            public class NumberCircle8 : Icon { public NumberCircle8() : base("NumberCircle8", IconVariant.Regular, NumberCircle8SizeAndContent.Values[0]) { } }
            public class NumberCircle9 : Icon { public NumberCircle9() : base("NumberCircle9", IconVariant.Regular, NumberCircle9SizeAndContent.Values[0]) { } }
            public class NumberRow : Icon { public NumberRow() : base("NumberRow", IconVariant.Regular, NumberRowSizeAndContent.Values[0]) { } }
            public class NumberSymbol : Icon { public NumberSymbol() : base("NumberSymbol", IconVariant.Regular, NumberSymbolSizeAndContent.Values[0]) { } }
            public class Open : Icon { public Open() : base("Open", IconVariant.Regular, OpenSizeAndContent.Values[1]) { } }
            public class OpenFolder : Icon { public OpenFolder() : base("OpenFolder", IconVariant.Regular, OpenFolderSizeAndContent.Values[0]) { } }
            public class OpenOff : Icon { public OpenOff() : base("OpenOff", IconVariant.Regular, OpenOffSizeAndContent.Values[0]) { } }
            public class Options : Icon { public Options() : base("Options", IconVariant.Regular, OptionsSizeAndContent.Values[0]) { } }
            public class Organization : Icon { public Organization() : base("Organization", IconVariant.Regular, OrganizationSizeAndContent.Values[1]) { } }
            public class OrganizationHorizontal : Icon { public OrganizationHorizontal() : base("OrganizationHorizontal", IconVariant.Regular, OrganizationHorizontalSizeAndContent.Values[0]) { } }
            public class Oval : Icon { public Oval() : base("Oval", IconVariant.Regular, OvalSizeAndContent.Values[0]) { } }
            public class PageFit : Icon { public PageFit() : base("PageFit", IconVariant.Regular, PageFitSizeAndContent.Values[0]) { } }
            public class PaintBrush : Icon { public PaintBrush() : base("PaintBrush", IconVariant.Regular, PaintBrushSizeAndContent.Values[0]) { } }
            public class PaintBucket : Icon { public PaintBucket() : base("PaintBucket", IconVariant.Regular, PaintBucketSizeAndContent.Values[0]) { } }
            public class PanelLeft : Icon { public PanelLeft() : base("PanelLeft", IconVariant.Regular, PanelLeftSizeAndContent.Values[0]) { } }
            public class PanelLeftAdd : Icon { public PanelLeftAdd() : base("PanelLeftAdd", IconVariant.Regular, PanelLeftAddSizeAndContent.Values[0]) { } }
            public class PanelLeftContract : Icon { public PanelLeftContract() : base("PanelLeftContract", IconVariant.Regular, PanelLeftContractSizeAndContent.Values[0]) { } }
            public class PanelLeftExpand : Icon { public PanelLeftExpand() : base("PanelLeftExpand", IconVariant.Regular, PanelLeftExpandSizeAndContent.Values[0]) { } }
            public class PanelLeftHeader : Icon { public PanelLeftHeader() : base("PanelLeftHeader", IconVariant.Regular, PanelLeftHeaderSizeAndContent.Values[0]) { } }
            public class PanelLeftHeaderAdd : Icon { public PanelLeftHeaderAdd() : base("PanelLeftHeaderAdd", IconVariant.Regular, PanelLeftHeaderAddSizeAndContent.Values[0]) { } }
            public class PanelLeftHeaderKey : Icon { public PanelLeftHeaderKey() : base("PanelLeftHeaderKey", IconVariant.Regular, PanelLeftHeaderKeySizeAndContent.Values[0]) { } }
            public class PanelLeftKey : Icon { public PanelLeftKey() : base("PanelLeftKey", IconVariant.Regular, PanelLeftKeySizeAndContent.Values[0]) { } }
            public class PanelLeftText : Icon { public PanelLeftText() : base("PanelLeftText", IconVariant.Regular, PanelLeftTextSizeAndContent.Values[0]) { } }
            public class PanelLeftTextAdd : Icon { public PanelLeftTextAdd() : base("PanelLeftTextAdd", IconVariant.Regular, PanelLeftTextAddSizeAndContent.Values[0]) { } }
            public class PanelLeftTextDismiss : Icon { public PanelLeftTextDismiss() : base("PanelLeftTextDismiss", IconVariant.Regular, PanelLeftTextDismissSizeAndContent.Values[0]) { } }
            public class PanelRight : Icon { public PanelRight() : base("PanelRight", IconVariant.Regular, PanelRightSizeAndContent.Values[0]) { } }
            public class PanelRightContract : Icon { public PanelRightContract() : base("PanelRightContract", IconVariant.Regular, PanelRightContractSizeAndContent.Values[0]) { } }
            public class PanelRightGallery : Icon { public PanelRightGallery() : base("PanelRightGallery", IconVariant.Regular, PanelRightGallerySizeAndContent.Values[0]) { } }
            public class PanelTopGallery : Icon { public PanelTopGallery() : base("PanelTopGallery", IconVariant.Regular, PanelTopGallerySizeAndContent.Values[0]) { } }
            public class Password : Icon { public Password() : base("Password", IconVariant.Regular, PasswordSizeAndContent.Values[0]) { } }
            public class Pause : Icon { public Pause() : base("Pause", IconVariant.Regular, PauseSizeAndContent.Values[1]) { } }
            public class PauseOff : Icon { public PauseOff() : base("PauseOff", IconVariant.Regular, PauseOffSizeAndContent.Values[0]) { } }
            public class PauseSettings : Icon { public PauseSettings() : base("PauseSettings", IconVariant.Regular, PauseSettingsSizeAndContent.Values[0]) { } }
            public class Payment : Icon { public Payment() : base("Payment", IconVariant.Regular, PaymentSizeAndContent.Values[0]) { } }
            public class Pen : Icon { public Pen() : base("Pen", IconVariant.Regular, PenSizeAndContent.Values[0]) { } }
            public class PenDismiss : Icon { public PenDismiss() : base("PenDismiss", IconVariant.Regular, PenDismissSizeAndContent.Values[0]) { } }
            public class PenOff : Icon { public PenOff() : base("PenOff", IconVariant.Regular, PenOffSizeAndContent.Values[0]) { } }
            public class PenProhibited : Icon { public PenProhibited() : base("PenProhibited", IconVariant.Regular, PenProhibitedSizeAndContent.Values[0]) { } }
            public class PenSparkle : Icon { public PenSparkle() : base("PenSparkle", IconVariant.Regular, PenSparkleSizeAndContent.Values[0]) { } }
            public class People : Icon { public People() : base("People", IconVariant.Regular, PeopleSizeAndContent.Values[1]) { } }
            public class PeopleAdd : Icon { public PeopleAdd() : base("PeopleAdd", IconVariant.Regular, PeopleAddSizeAndContent.Values[0]) { } }
            public class PeopleCall : Icon { public PeopleCall() : base("PeopleCall", IconVariant.Regular, PeopleCallSizeAndContent.Values[0]) { } }
            public class PeopleChat : Icon { public PeopleChat() : base("PeopleChat", IconVariant.Regular, PeopleChatSizeAndContent.Values[0]) { } }
            public class PeopleCheckmark : Icon { public PeopleCheckmark() : base("PeopleCheckmark", IconVariant.Regular, PeopleCheckmarkSizeAndContent.Values[0]) { } }
            public class PeopleCommunity : Icon { public PeopleCommunity() : base("PeopleCommunity", IconVariant.Regular, PeopleCommunitySizeAndContent.Values[0]) { } }
            public class PeopleEdit : Icon { public PeopleEdit() : base("PeopleEdit", IconVariant.Regular, PeopleEditSizeAndContent.Values[0]) { } }
            public class PeopleError : Icon { public PeopleError() : base("PeopleError", IconVariant.Regular, PeopleErrorSizeAndContent.Values[0]) { } }
            public class PeopleList : Icon { public PeopleList() : base("PeopleList", IconVariant.Regular, PeopleListSizeAndContent.Values[0]) { } }
            public class PeopleProhibited : Icon { public PeopleProhibited() : base("PeopleProhibited", IconVariant.Regular, PeopleProhibitedSizeAndContent.Values[0]) { } }
            public class PeopleStar : Icon { public PeopleStar() : base("PeopleStar", IconVariant.Regular, PeopleStarSizeAndContent.Values[0]) { } }
            public class PeopleSwap : Icon { public PeopleSwap() : base("PeopleSwap", IconVariant.Regular, PeopleSwapSizeAndContent.Values[0]) { } }
            public class PeopleSync : Icon { public PeopleSync() : base("PeopleSync", IconVariant.Regular, PeopleSyncSizeAndContent.Values[0]) { } }
            public class PeopleTeam : Icon { public PeopleTeam() : base("PeopleTeam", IconVariant.Regular, PeopleTeamSizeAndContent.Values[0]) { } }
            public class PeopleTeamDelete : Icon { public PeopleTeamDelete() : base("PeopleTeamDelete", IconVariant.Regular, PeopleTeamDeleteSizeAndContent.Values[0]) { } }
            public class PeopleToolbox : Icon { public PeopleToolbox() : base("PeopleToolbox", IconVariant.Regular, PeopleToolboxSizeAndContent.Values[0]) { } }
            public class Person : Icon { public Person() : base("Person", IconVariant.Regular, PersonSizeAndContent.Values[1]) { } }
            public class PersonAdd : Icon { public PersonAdd() : base("PersonAdd", IconVariant.Regular, PersonAddSizeAndContent.Values[0]) { } }
            public class PersonAlert : Icon { public PersonAlert() : base("PersonAlert", IconVariant.Regular, PersonAlertSizeAndContent.Values[0]) { } }
            public class PersonArrowBack : Icon { public PersonArrowBack() : base("PersonArrowBack", IconVariant.Regular, PersonArrowBackSizeAndContent.Values[0]) { } }
            public class PersonArrowLeft : Icon { public PersonArrowLeft() : base("PersonArrowLeft", IconVariant.Regular, PersonArrowLeftSizeAndContent.Values[0]) { } }
            public class PersonArrowRight : Icon { public PersonArrowRight() : base("PersonArrowRight", IconVariant.Regular, PersonArrowRightSizeAndContent.Values[0]) { } }
            public class PersonAvailable : Icon { public PersonAvailable() : base("PersonAvailable", IconVariant.Regular, PersonAvailableSizeAndContent.Values[0]) { } }
            public class PersonBoard : Icon { public PersonBoard() : base("PersonBoard", IconVariant.Regular, PersonBoardSizeAndContent.Values[0]) { } }
            public class PersonCall : Icon { public PersonCall() : base("PersonCall", IconVariant.Regular, PersonCallSizeAndContent.Values[0]) { } }
            public class PersonChat : Icon { public PersonChat() : base("PersonChat", IconVariant.Regular, PersonChatSizeAndContent.Values[0]) { } }
            public class PersonClock : Icon { public PersonClock() : base("PersonClock", IconVariant.Regular, PersonClockSizeAndContent.Values[0]) { } }
            public class PersonDelete : Icon { public PersonDelete() : base("PersonDelete", IconVariant.Regular, PersonDeleteSizeAndContent.Values[0]) { } }
            public class PersonFeedback : Icon { public PersonFeedback() : base("PersonFeedback", IconVariant.Regular, PersonFeedbackSizeAndContent.Values[0]) { } }
            public class PersonInfo : Icon { public PersonInfo() : base("PersonInfo", IconVariant.Regular, PersonInfoSizeAndContent.Values[0]) { } }
            public class PersonLightning : Icon { public PersonLightning() : base("PersonLightning", IconVariant.Regular, PersonLightningSizeAndContent.Values[0]) { } }
            public class PersonLink : Icon { public PersonLink() : base("PersonLink", IconVariant.Regular, PersonLinkSizeAndContent.Values[0]) { } }
            public class PersonLock : Icon { public PersonLock() : base("PersonLock", IconVariant.Regular, PersonLockSizeAndContent.Values[0]) { } }
            public class PersonMail : Icon { public PersonMail() : base("PersonMail", IconVariant.Regular, PersonMailSizeAndContent.Values[0]) { } }
            public class PersonNote : Icon { public PersonNote() : base("PersonNote", IconVariant.Regular, PersonNoteSizeAndContent.Values[0]) { } }
            public class PersonProhibited : Icon { public PersonProhibited() : base("PersonProhibited", IconVariant.Regular, PersonProhibitedSizeAndContent.Values[0]) { } }
            public class PersonQuestionMark : Icon { public PersonQuestionMark() : base("PersonQuestionMark", IconVariant.Regular, PersonQuestionMarkSizeAndContent.Values[0]) { } }
            public class PersonRibbon : Icon { public PersonRibbon() : base("PersonRibbon", IconVariant.Regular, PersonRibbonSizeAndContent.Values[0]) { } }
            public class PersonSearch : Icon { public PersonSearch() : base("PersonSearch", IconVariant.Regular, PersonSearchSizeAndContent.Values[0]) { } }
            public class PersonSettings : Icon { public PersonSettings() : base("PersonSettings", IconVariant.Regular, PersonSettingsSizeAndContent.Values[0]) { } }
            public class PersonSquare : Icon { public PersonSquare() : base("PersonSquare", IconVariant.Regular, PersonSquareSizeAndContent.Values[0]) { } }
            public class PersonSquareCheckmark : Icon { public PersonSquareCheckmark() : base("PersonSquareCheckmark", IconVariant.Regular, PersonSquareCheckmarkSizeAndContent.Values[0]) { } }
            public class PersonStanding : Icon { public PersonStanding() : base("PersonStanding", IconVariant.Regular, PersonStandingSizeAndContent.Values[0]) { } }
            public class PersonStar : Icon { public PersonStar() : base("PersonStar", IconVariant.Regular, PersonStarSizeAndContent.Values[0]) { } }
            public class PersonSubtract : Icon { public PersonSubtract() : base("PersonSubtract", IconVariant.Regular, PersonSubtractSizeAndContent.Values[0]) { } }
            public class PersonSupport : Icon { public PersonSupport() : base("PersonSupport", IconVariant.Regular, PersonSupportSizeAndContent.Values[0]) { } }
            public class PersonSwap : Icon { public PersonSwap() : base("PersonSwap", IconVariant.Regular, PersonSwapSizeAndContent.Values[0]) { } }
            public class PersonSync : Icon { public PersonSync() : base("PersonSync", IconVariant.Regular, PersonSyncSizeAndContent.Values[0]) { } }
            public class PersonVoice : Icon { public PersonVoice() : base("PersonVoice", IconVariant.Regular, PersonVoiceSizeAndContent.Values[0]) { } }
            public class PersonWalking : Icon { public PersonWalking() : base("PersonWalking", IconVariant.Regular, PersonWalkingSizeAndContent.Values[0]) { } }
            public class PersonWarning : Icon { public PersonWarning() : base("PersonWarning", IconVariant.Regular, PersonWarningSizeAndContent.Values[0]) { } }
            public class Phone : Icon { public Phone() : base("Phone", IconVariant.Regular, PhoneSizeAndContent.Values[1]) { } }
            public class PhoneChat : Icon { public PhoneChat() : base("PhoneChat", IconVariant.Regular, PhoneChatSizeAndContent.Values[0]) { } }
            public class PhoneCheckmark : Icon { public PhoneCheckmark() : base("PhoneCheckmark", IconVariant.Regular, PhoneCheckmarkSizeAndContent.Values[0]) { } }
            public class PhoneDesktop : Icon { public PhoneDesktop() : base("PhoneDesktop", IconVariant.Regular, PhoneDesktopSizeAndContent.Values[0]) { } }
            public class PhoneEraser : Icon { public PhoneEraser() : base("PhoneEraser", IconVariant.Regular, PhoneEraserSizeAndContent.Values[0]) { } }
            public class PhoneLaptop : Icon { public PhoneLaptop() : base("PhoneLaptop", IconVariant.Regular, PhoneLaptopSizeAndContent.Values[0]) { } }
            public class PhoneSpanIn : Icon { public PhoneSpanIn() : base("PhoneSpanIn", IconVariant.Regular, PhoneSpanInSizeAndContent.Values[0]) { } }
            public class PhoneSpanOut : Icon { public PhoneSpanOut() : base("PhoneSpanOut", IconVariant.Regular, PhoneSpanOutSizeAndContent.Values[0]) { } }
            public class PictureIn : Icon { public PictureIn() : base("PictureIn", IconVariant.Regular, PictureInSizeAndContent.Values[0]) { } }
            public class PictureInEnter : Icon { public PictureInEnter() : base("PictureInEnter", IconVariant.Regular, PictureInEnterSizeAndContent.Values[0]) { } }
            public class PictureInExit : Icon { public PictureInExit() : base("PictureInExit", IconVariant.Regular, PictureInExitSizeAndContent.Values[0]) { } }
            public class Pill : Icon { public Pill() : base("Pill", IconVariant.Regular, PillSizeAndContent.Values[0]) { } }
            public class Pin : Icon { public Pin() : base("Pin", IconVariant.Regular, PinSizeAndContent.Values[1]) { } }
            public class PinOff : Icon { public PinOff() : base("PinOff", IconVariant.Regular, PinOffSizeAndContent.Values[0]) { } }
            public class Play : Icon { public Play() : base("Play", IconVariant.Regular, PlaySizeAndContent.Values[1]) { } }
            public class PlayCircle : Icon { public PlayCircle() : base("PlayCircle", IconVariant.Regular, PlayCircleSizeAndContent.Values[0]) { } }
            public class PlayCircleHint : Icon { public PlayCircleHint() : base("PlayCircleHint", IconVariant.Regular, PlayCircleHintSizeAndContent.Values[0]) { } }
            public class PlayMultiple : Icon { public PlayMultiple() : base("PlayMultiple", IconVariant.Regular, PlayMultipleSizeAndContent.Values[0]) { } }
            public class PlugConnected : Icon { public PlugConnected() : base("PlugConnected", IconVariant.Regular, PlugConnectedSizeAndContent.Values[0]) { } }
            public class PlugDisconnected : Icon { public PlugDisconnected() : base("PlugDisconnected", IconVariant.Regular, PlugDisconnectedSizeAndContent.Values[0]) { } }
            public class Poll : Icon { public Poll() : base("Poll", IconVariant.Regular, PollSizeAndContent.Values[0]) { } }
            public class PollHorizontal : Icon { public PollHorizontal() : base("PollHorizontal", IconVariant.Regular, PollHorizontalSizeAndContent.Values[0]) { } }
            public class Premium : Icon { public Premium() : base("Premium", IconVariant.Regular, PremiumSizeAndContent.Values[1]) { } }
            public class PremiumPerson : Icon { public PremiumPerson() : base("PremiumPerson", IconVariant.Regular, PremiumPersonSizeAndContent.Values[0]) { } }
            public class PresenceAvailable : Icon { public PresenceAvailable() : base("PresenceAvailable", IconVariant.Regular, PresenceAvailableSizeAndContent.Values[2]) { } }
            public class PresenceAway : Icon { public PresenceAway() : base("PresenceAway", IconVariant.Regular, PresenceAwaySizeAndContent.Values[2]) { } }
            public class PresenceBlocked : Icon { public PresenceBlocked() : base("PresenceBlocked", IconVariant.Regular, PresenceBlockedSizeAndContent.Values[2]) { } }
            public class PresenceDnd : Icon { public PresenceDnd() : base("PresenceDnd", IconVariant.Regular, PresenceDndSizeAndContent.Values[2]) { } }
            public class PresenceOffline : Icon { public PresenceOffline() : base("PresenceOffline", IconVariant.Regular, PresenceOfflineSizeAndContent.Values[2]) { } }
            public class PresenceOof : Icon { public PresenceOof() : base("PresenceOof", IconVariant.Regular, PresenceOofSizeAndContent.Values[2]) { } }
            public class PresenceUnknown : Icon { public PresenceUnknown() : base("PresenceUnknown", IconVariant.Regular, PresenceUnknownSizeAndContent.Values[2]) { } }
            public class PreviewLink : Icon { public PreviewLink() : base("PreviewLink", IconVariant.Regular, PreviewLinkSizeAndContent.Values[0]) { } }
            public class Previous : Icon { public Previous() : base("Previous", IconVariant.Regular, PreviousSizeAndContent.Values[0]) { } }
            public class Print : Icon { public Print() : base("Print", IconVariant.Regular, PrintSizeAndContent.Values[0]) { } }
            public class Prohibited : Icon { public Prohibited() : base("Prohibited", IconVariant.Regular, ProhibitedSizeAndContent.Values[1]) { } }
            public class ProhibitedMultiple : Icon { public ProhibitedMultiple() : base("ProhibitedMultiple", IconVariant.Regular, ProhibitedMultipleSizeAndContent.Values[0]) { } }
            public class ProjectionScreen : Icon { public ProjectionScreen() : base("ProjectionScreen", IconVariant.Regular, ProjectionScreenSizeAndContent.Values[0]) { } }
            public class ProjectionScreenDismiss : Icon { public ProjectionScreenDismiss() : base("ProjectionScreenDismiss", IconVariant.Regular, ProjectionScreenDismissSizeAndContent.Values[0]) { } }
            public class ProtocolHandler : Icon { public ProtocolHandler() : base("ProtocolHandler", IconVariant.Regular, ProtocolHandlerSizeAndContent.Values[0]) { } }
            public class PuzzleCube : Icon { public PuzzleCube() : base("PuzzleCube", IconVariant.Regular, PuzzleCubeSizeAndContent.Values[0]) { } }
            public class PuzzlePiece : Icon { public PuzzlePiece() : base("PuzzlePiece", IconVariant.Regular, PuzzlePieceSizeAndContent.Values[0]) { } }
            public class Question : Icon { public Question() : base("Question", IconVariant.Regular, QuestionSizeAndContent.Values[0]) { } }
            public class QuestionCircle : Icon { public QuestionCircle() : base("QuestionCircle", IconVariant.Regular, QuestionCircleSizeAndContent.Values[1]) { } }
            public class RadioButton : Icon { public RadioButton() : base("RadioButton", IconVariant.Regular, RadioButtonSizeAndContent.Values[0]) { } }
            public class RadioButtonOff : Icon { public RadioButtonOff() : base("RadioButtonOff", IconVariant.Regular, RadioButtonOffSizeAndContent.Values[0]) { } }
            public class Ram : Icon { public Ram() : base("Ram", IconVariant.Regular, RamSizeAndContent.Values[0]) { } }
            public class RatingMature : Icon { public RatingMature() : base("RatingMature", IconVariant.Regular, RatingMatureSizeAndContent.Values[0]) { } }
            public class ReadAloud : Icon { public ReadAloud() : base("ReadAloud", IconVariant.Regular, ReadAloudSizeAndContent.Values[0]) { } }
            public class ReadingList : Icon { public ReadingList() : base("ReadingList", IconVariant.Regular, ReadingListSizeAndContent.Values[0]) { } }
            public class ReadingListAdd : Icon { public ReadingListAdd() : base("ReadingListAdd", IconVariant.Regular, ReadingListAddSizeAndContent.Values[0]) { } }
            public class Receipt : Icon { public Receipt() : base("Receipt", IconVariant.Regular, ReceiptSizeAndContent.Values[0]) { } }
            public class ReceiptMoney : Icon { public ReceiptMoney() : base("ReceiptMoney", IconVariant.Regular, ReceiptMoneySizeAndContent.Values[0]) { } }
            public class ReceiptSparkles : Icon { public ReceiptSparkles() : base("ReceiptSparkles", IconVariant.Regular, ReceiptSparklesSizeAndContent.Values[0]) { } }
            public class Record : Icon { public Record() : base("Record", IconVariant.Regular, RecordSizeAndContent.Values[1]) { } }
            public class RecordStop : Icon { public RecordStop() : base("RecordStop", IconVariant.Regular, RecordStopSizeAndContent.Values[1]) { } }
            public class RectangleLandscape : Icon { public RectangleLandscape() : base("RectangleLandscape", IconVariant.Regular, RectangleLandscapeSizeAndContent.Values[1]) { } }
            public class RectangleLandscapeHintCopy : Icon { public RectangleLandscapeHintCopy() : base("RectangleLandscapeHintCopy", IconVariant.Regular, RectangleLandscapeHintCopySizeAndContent.Values[0]) { } }
            public class RectangleLandscapeSparkle : Icon { public RectangleLandscapeSparkle() : base("RectangleLandscapeSparkle", IconVariant.Regular, RectangleLandscapeSparkleSizeAndContent.Values[0]) { } }
            public class RemixAdd : Icon { public RemixAdd() : base("RemixAdd", IconVariant.Regular, RemixAddSizeAndContent.Values[0]) { } }
            public class Remote : Icon { public Remote() : base("Remote", IconVariant.Regular, RemoteSizeAndContent.Values[0]) { } }
            public class Rename : Icon { public Rename() : base("Rename", IconVariant.Regular, RenameSizeAndContent.Values[0]) { } }
            public class ReOrder : Icon { public ReOrder() : base("ReOrder", IconVariant.Regular, ReOrderSizeAndContent.Values[0]) { } }
            public class ReOrderDotsHorizontal : Icon { public ReOrderDotsHorizontal() : base("ReOrderDotsHorizontal", IconVariant.Regular, ReOrderDotsHorizontalSizeAndContent.Values[0]) { } }
            public class ReOrderDotsVertical : Icon { public ReOrderDotsVertical() : base("ReOrderDotsVertical", IconVariant.Regular, ReOrderDotsVerticalSizeAndContent.Values[0]) { } }
            public class Resize : Icon { public Resize() : base("Resize", IconVariant.Regular, ResizeSizeAndContent.Values[0]) { } }
            public class ResizeLarge : Icon { public ResizeLarge() : base("ResizeLarge", IconVariant.Regular, ResizeLargeSizeAndContent.Values[0]) { } }
            public class ResizeSmall : Icon { public ResizeSmall() : base("ResizeSmall", IconVariant.Regular, ResizeSmallSizeAndContent.Values[0]) { } }
            public class Reward : Icon { public Reward() : base("Reward", IconVariant.Regular, RewardSizeAndContent.Values[1]) { } }
            public class Rewind : Icon { public Rewind() : base("Rewind", IconVariant.Regular, RewindSizeAndContent.Values[0]) { } }
            public class Rhombus : Icon { public Rhombus() : base("Rhombus", IconVariant.Regular, RhombusSizeAndContent.Values[0]) { } }
            public class Ribbon : Icon { public Ribbon() : base("Ribbon", IconVariant.Regular, RibbonSizeAndContent.Values[1]) { } }
            public class RibbonOff : Icon { public RibbonOff() : base("RibbonOff", IconVariant.Regular, RibbonOffSizeAndContent.Values[1]) { } }
            public class RoadCone : Icon { public RoadCone() : base("RoadCone", IconVariant.Regular, RoadConeSizeAndContent.Values[0]) { } }
            public class Rocket : Icon { public Rocket() : base("Rocket", IconVariant.Regular, RocketSizeAndContent.Values[0]) { } }
            public class Rss : Icon { public Rss() : base("Rss", IconVariant.Regular, RssSizeAndContent.Values[0]) { } }
            public class Ruler : Icon { public Ruler() : base("Ruler", IconVariant.Regular, RulerSizeAndContent.Values[0]) { } }
            public class Run : Icon { public Run() : base("Run", IconVariant.Regular, RunSizeAndContent.Values[0]) { } }
            public class Save : Icon { public Save() : base("Save", IconVariant.Regular, SaveSizeAndContent.Values[0]) { } }
            public class SaveMultiple : Icon { public SaveMultiple() : base("SaveMultiple", IconVariant.Regular, SaveMultipleSizeAndContent.Values[0]) { } }
            public class Savings : Icon { public Savings() : base("Savings", IconVariant.Regular, SavingsSizeAndContent.Values[0]) { } }
            public class ScaleFit : Icon { public ScaleFit() : base("ScaleFit", IconVariant.Regular, ScaleFitSizeAndContent.Values[0]) { } }
            public class Scan : Icon { public Scan() : base("Scan", IconVariant.Regular, ScanSizeAndContent.Values[0]) { } }
            public class ScanCamera : Icon { public ScanCamera() : base("ScanCamera", IconVariant.Regular, ScanCameraSizeAndContent.Values[0]) { } }
            public class ScanDash : Icon { public ScanDash() : base("ScanDash", IconVariant.Regular, ScanDashSizeAndContent.Values[1]) { } }
            public class ScanPerson : Icon { public ScanPerson() : base("ScanPerson", IconVariant.Regular, ScanPersonSizeAndContent.Values[0]) { } }
            public class ScanText : Icon { public ScanText() : base("ScanText", IconVariant.Regular, ScanTextSizeAndContent.Values[0]) { } }
            public class ScanThumbUp : Icon { public ScanThumbUp() : base("ScanThumbUp", IconVariant.Regular, ScanThumbUpSizeAndContent.Values[0]) { } }
            public class ScanThumbUpOff : Icon { public ScanThumbUpOff() : base("ScanThumbUpOff", IconVariant.Regular, ScanThumbUpOffSizeAndContent.Values[0]) { } }
            public class Screenshot : Icon { public Screenshot() : base("Screenshot", IconVariant.Regular, ScreenshotSizeAndContent.Values[0]) { } }
            public class ScreenshotRecord : Icon { public ScreenshotRecord() : base("ScreenshotRecord", IconVariant.Regular, ScreenshotRecordSizeAndContent.Values[0]) { } }
            public class Script : Icon { public Script() : base("Script", IconVariant.Regular, ScriptSizeAndContent.Values[0]) { } }
            public class Search : Icon { public Search() : base("Search", IconVariant.Regular, SearchSizeAndContent.Values[1]) { } }
            public class SearchVisual : Icon { public SearchVisual() : base("SearchVisual", IconVariant.Regular, SearchVisualSizeAndContent.Values[0]) { } }
            public class SelectAllOff : Icon { public SelectAllOff() : base("SelectAllOff", IconVariant.Regular, SelectAllOffSizeAndContent.Values[0]) { } }
            public class SelectAllOn : Icon { public SelectAllOn() : base("SelectAllOn", IconVariant.Regular, SelectAllOnSizeAndContent.Values[0]) { } }
            public class Send : Icon { public Send() : base("Send", IconVariant.Regular, SendSizeAndContent.Values[0]) { } }
            public class SendBeaker : Icon { public SendBeaker() : base("SendBeaker", IconVariant.Regular, SendBeakerSizeAndContent.Values[0]) { } }
            public class SerialPort : Icon { public SerialPort() : base("SerialPort", IconVariant.Regular, SerialPortSizeAndContent.Values[0]) { } }
            public class Server : Icon { public Server() : base("Server", IconVariant.Regular, ServerSizeAndContent.Values[1]) { } }
            public class ServerLink : Icon { public ServerLink() : base("ServerLink", IconVariant.Regular, ServerLinkSizeAndContent.Values[0]) { } }
            public class ServerSurface : Icon { public ServerSurface() : base("ServerSurface", IconVariant.Regular, ServerSurfaceSizeAndContent.Values[0]) { } }
            public class ServerSurfaceMultiple : Icon { public ServerSurfaceMultiple() : base("ServerSurfaceMultiple", IconVariant.Regular, ServerSurfaceMultipleSizeAndContent.Values[0]) { } }
            public class ServiceBell : Icon { public ServiceBell() : base("ServiceBell", IconVariant.Regular, ServiceBellSizeAndContent.Values[0]) { } }
            public class Settings : Icon { public Settings() : base("Settings", IconVariant.Regular, SettingsSizeAndContent.Values[0]) { } }
            public class ShapeExclude : Icon { public ShapeExclude() : base("ShapeExclude", IconVariant.Regular, ShapeExcludeSizeAndContent.Values[0]) { } }
            public class ShapeIntersect : Icon { public ShapeIntersect() : base("ShapeIntersect", IconVariant.Regular, ShapeIntersectSizeAndContent.Values[0]) { } }
            public class ShapeOrganic : Icon { public ShapeOrganic() : base("ShapeOrganic", IconVariant.Regular, ShapeOrganicSizeAndContent.Values[0]) { } }
            public class Shapes : Icon { public Shapes() : base("Shapes", IconVariant.Regular, ShapesSizeAndContent.Values[0]) { } }
            public class ShapeSubtract : Icon { public ShapeSubtract() : base("ShapeSubtract", IconVariant.Regular, ShapeSubtractSizeAndContent.Values[0]) { } }
            public class ShapeUnion : Icon { public ShapeUnion() : base("ShapeUnion", IconVariant.Regular, ShapeUnionSizeAndContent.Values[0]) { } }
            public class Share : Icon { public Share() : base("Share", IconVariant.Regular, ShareSizeAndContent.Values[0]) { } }
            public class ShareAndroid : Icon { public ShareAndroid() : base("ShareAndroid", IconVariant.Regular, ShareAndroidSizeAndContent.Values[0]) { } }
            public class ShareScreenPerson : Icon { public ShareScreenPerson() : base("ShareScreenPerson", IconVariant.Regular, ShareScreenPersonSizeAndContent.Values[0]) { } }
            public class ShareScreenPersonOverlay : Icon { public ShareScreenPersonOverlay() : base("ShareScreenPersonOverlay", IconVariant.Regular, ShareScreenPersonOverlaySizeAndContent.Values[0]) { } }
            public class ShareScreenPersonOverlayInside : Icon { public ShareScreenPersonOverlayInside() : base("ShareScreenPersonOverlayInside", IconVariant.Regular, ShareScreenPersonOverlayInsideSizeAndContent.Values[0]) { } }
            public class ShareScreenPersonP : Icon { public ShareScreenPersonP() : base("ShareScreenPersonP", IconVariant.Regular, ShareScreenPersonPSizeAndContent.Values[0]) { } }
            public class ShareScreenStop : Icon { public ShareScreenStop() : base("ShareScreenStop", IconVariant.Regular, ShareScreenStopSizeAndContent.Values[0]) { } }
            public class Shield : Icon { public Shield() : base("Shield", IconVariant.Regular, ShieldSizeAndContent.Values[1]) { } }
            public class ShieldAdd : Icon { public ShieldAdd() : base("ShieldAdd", IconVariant.Regular, ShieldAddSizeAndContent.Values[0]) { } }
            public class ShieldCheckmark : Icon { public ShieldCheckmark() : base("ShieldCheckmark", IconVariant.Regular, ShieldCheckmarkSizeAndContent.Values[0]) { } }
            public class ShieldDismiss : Icon { public ShieldDismiss() : base("ShieldDismiss", IconVariant.Regular, ShieldDismissSizeAndContent.Values[0]) { } }
            public class ShieldError : Icon { public ShieldError() : base("ShieldError", IconVariant.Regular, ShieldErrorSizeAndContent.Values[0]) { } }
            public class ShieldGlobe : Icon { public ShieldGlobe() : base("ShieldGlobe", IconVariant.Regular, ShieldGlobeSizeAndContent.Values[0]) { } }
            public class ShieldKeyhole : Icon { public ShieldKeyhole() : base("ShieldKeyhole", IconVariant.Regular, ShieldKeyholeSizeAndContent.Values[0]) { } }
            public class ShieldLock : Icon { public ShieldLock() : base("ShieldLock", IconVariant.Regular, ShieldLockSizeAndContent.Values[0]) { } }
            public class ShieldQuestion : Icon { public ShieldQuestion() : base("ShieldQuestion", IconVariant.Regular, ShieldQuestionSizeAndContent.Values[0]) { } }
            public class ShieldTask : Icon { public ShieldTask() : base("ShieldTask", IconVariant.Regular, ShieldTaskSizeAndContent.Values[0]) { } }
            public class Shifts : Icon { public Shifts() : base("Shifts", IconVariant.Regular, ShiftsSizeAndContent.Values[0]) { } }
            public class ShiftsActivity : Icon { public ShiftsActivity() : base("ShiftsActivity", IconVariant.Regular, ShiftsActivitySizeAndContent.Values[0]) { } }
            public class ShoppingBag : Icon { public ShoppingBag() : base("ShoppingBag", IconVariant.Regular, ShoppingBagSizeAndContent.Values[0]) { } }
            public class Signature : Icon { public Signature() : base("Signature", IconVariant.Regular, SignatureSizeAndContent.Values[0]) { } }
            public class Sim : Icon { public Sim() : base("Sim", IconVariant.Regular, SimSizeAndContent.Values[0]) { } }
            public class SlashForward : Icon { public SlashForward() : base("SlashForward", IconVariant.Regular, SlashForwardSizeAndContent.Values[1]) { } }
            public class SlideAdd : Icon { public SlideAdd() : base("SlideAdd", IconVariant.Regular, SlideAddSizeAndContent.Values[0]) { } }
            public class SlideEraser : Icon { public SlideEraser() : base("SlideEraser", IconVariant.Regular, SlideEraserSizeAndContent.Values[0]) { } }
            public class SlideRecord : Icon { public SlideRecord() : base("SlideRecord", IconVariant.Regular, SlideRecordSizeAndContent.Values[0]) { } }
            public class SlideSearch : Icon { public SlideSearch() : base("SlideSearch", IconVariant.Regular, SlideSearchSizeAndContent.Values[0]) { } }
            public class SlideText : Icon { public SlideText() : base("SlideText", IconVariant.Regular, SlideTextSizeAndContent.Values[0]) { } }
            public class SlideTextEdit : Icon { public SlideTextEdit() : base("SlideTextEdit", IconVariant.Regular, SlideTextEditSizeAndContent.Values[0]) { } }
            public class SlideTextMultiple : Icon { public SlideTextMultiple() : base("SlideTextMultiple", IconVariant.Regular, SlideTextMultipleSizeAndContent.Values[0]) { } }
            public class SlideTextPerson : Icon { public SlideTextPerson() : base("SlideTextPerson", IconVariant.Regular, SlideTextPersonSizeAndContent.Values[0]) { } }
            public class SlideTextSparkle : Icon { public SlideTextSparkle() : base("SlideTextSparkle", IconVariant.Regular, SlideTextSparkleSizeAndContent.Values[0]) { } }
            public class Snooze : Icon { public Snooze() : base("Snooze", IconVariant.Regular, SnoozeSizeAndContent.Values[0]) { } }
            public class Space3d : Icon { public Space3d() : base("Space3d", IconVariant.Regular, Space3dSizeAndContent.Values[0]) { } }
            public class Sparkle : Icon { public Sparkle() : base("Sparkle", IconVariant.Regular, SparkleSizeAndContent.Values[0]) { } }
            public class SparkleCircle : Icon { public SparkleCircle() : base("SparkleCircle", IconVariant.Regular, SparkleCircleSizeAndContent.Values[0]) { } }
            public class Speaker0 : Icon { public Speaker0() : base("Speaker0", IconVariant.Regular, Speaker0SizeAndContent.Values[0]) { } }
            public class Speaker1 : Icon { public Speaker1() : base("Speaker1", IconVariant.Regular, Speaker1SizeAndContent.Values[0]) { } }
            public class Speaker2 : Icon { public Speaker2() : base("Speaker2", IconVariant.Regular, Speaker2SizeAndContent.Values[0]) { } }
            public class SpeakerEdit : Icon { public SpeakerEdit() : base("SpeakerEdit", IconVariant.Regular, SpeakerEditSizeAndContent.Values[0]) { } }
            public class SpeakerMute : Icon { public SpeakerMute() : base("SpeakerMute", IconVariant.Regular, SpeakerMuteSizeAndContent.Values[0]) { } }
            public class SpeakerOff : Icon { public SpeakerOff() : base("SpeakerOff", IconVariant.Regular, SpeakerOffSizeAndContent.Values[0]) { } }
            public class SpinnerIos : Icon { public SpinnerIos() : base("SpinnerIos", IconVariant.Regular, SpinnerIosSizeAndContent.Values[0]) { } }
            public class SplitHorizontal : Icon { public SplitHorizontal() : base("SplitHorizontal", IconVariant.Regular, SplitHorizontalSizeAndContent.Values[1]) { } }
            public class SplitVertical : Icon { public SplitVertical() : base("SplitVertical", IconVariant.Regular, SplitVerticalSizeAndContent.Values[1]) { } }
            public class Sport : Icon { public Sport() : base("Sport", IconVariant.Regular, SportSizeAndContent.Values[0]) { } }
            public class SportSoccer : Icon { public SportSoccer() : base("SportSoccer", IconVariant.Regular, SportSoccerSizeAndContent.Values[0]) { } }
            public class SprayCan : Icon { public SprayCan() : base("SprayCan", IconVariant.Regular, SprayCanSizeAndContent.Values[0]) { } }
            public class Square : Icon { public Square() : base("Square", IconVariant.Regular, SquareSizeAndContent.Values[1]) { } }
            public class SquareAdd : Icon { public SquareAdd() : base("SquareAdd", IconVariant.Regular, SquareAddSizeAndContent.Values[0]) { } }
            public class SquareArrowForward : Icon { public SquareArrowForward() : base("SquareArrowForward", IconVariant.Regular, SquareArrowForwardSizeAndContent.Values[0]) { } }
            public class SquareDismiss : Icon { public SquareDismiss() : base("SquareDismiss", IconVariant.Regular, SquareDismissSizeAndContent.Values[0]) { } }
            public class SquareHint : Icon { public SquareHint() : base("SquareHint", IconVariant.Regular, SquareHintSizeAndContent.Values[0]) { } }
            public class SquareHintArrowBack : Icon { public SquareHintArrowBack() : base("SquareHintArrowBack", IconVariant.Regular, SquareHintArrowBackSizeAndContent.Values[0]) { } }
            public class SquareHintHexagon : Icon { public SquareHintHexagon() : base("SquareHintHexagon", IconVariant.Regular, SquareHintHexagonSizeAndContent.Values[1]) { } }
            public class SquareHintSparkles : Icon { public SquareHintSparkles() : base("SquareHintSparkles", IconVariant.Regular, SquareHintSparklesSizeAndContent.Values[0]) { } }
            public class SquareMultiple : Icon { public SquareMultiple() : base("SquareMultiple", IconVariant.Regular, SquareMultipleSizeAndContent.Values[0]) { } }
            public class Stack : Icon { public Stack() : base("Stack", IconVariant.Regular, StackSizeAndContent.Values[0]) { } }
            public class StackStar : Icon { public StackStar() : base("StackStar", IconVariant.Regular, StackStarSizeAndContent.Values[0]) { } }
            public class Star : Icon { public Star() : base("Star", IconVariant.Regular, StarSizeAndContent.Values[1]) { } }
            public class StarAdd : Icon { public StarAdd() : base("StarAdd", IconVariant.Regular, StarAddSizeAndContent.Values[0]) { } }
            public class StarArrowBack : Icon { public StarArrowBack() : base("StarArrowBack", IconVariant.Regular, StarArrowBackSizeAndContent.Values[0]) { } }
            public class StarCheckmark : Icon { public StarCheckmark() : base("StarCheckmark", IconVariant.Regular, StarCheckmarkSizeAndContent.Values[0]) { } }
            public class StarDismiss : Icon { public StarDismiss() : base("StarDismiss", IconVariant.Regular, StarDismissSizeAndContent.Values[0]) { } }
            public class StarEmphasis : Icon { public StarEmphasis() : base("StarEmphasis", IconVariant.Regular, StarEmphasisSizeAndContent.Values[0]) { } }
            public class StarHalf : Icon { public StarHalf() : base("StarHalf", IconVariant.Regular, StarHalfSizeAndContent.Values[1]) { } }
            public class StarLineHorizontal3 : Icon { public StarLineHorizontal3() : base("StarLineHorizontal3", IconVariant.Regular, StarLineHorizontal3SizeAndContent.Values[0]) { } }
            public class StarOff : Icon { public StarOff() : base("StarOff", IconVariant.Regular, StarOffSizeAndContent.Values[1]) { } }
            public class StarOneQuarter : Icon { public StarOneQuarter() : base("StarOneQuarter", IconVariant.Regular, StarOneQuarterSizeAndContent.Values[1]) { } }
            public class StarProhibited : Icon { public StarProhibited() : base("StarProhibited", IconVariant.Regular, StarProhibitedSizeAndContent.Values[0]) { } }
            public class StarThreeQuarter : Icon { public StarThreeQuarter() : base("StarThreeQuarter", IconVariant.Regular, StarThreeQuarterSizeAndContent.Values[1]) { } }
            public class Status : Icon { public Status() : base("Status", IconVariant.Regular, StatusSizeAndContent.Values[1]) { } }
            public class Step : Icon { public Step() : base("Step", IconVariant.Regular, StepSizeAndContent.Values[0]) { } }
            public class Steps : Icon { public Steps() : base("Steps", IconVariant.Regular, StepsSizeAndContent.Values[0]) { } }
            public class Stop : Icon { public Stop() : base("Stop", IconVariant.Regular, StopSizeAndContent.Values[0]) { } }
            public class StoreMicrosoft : Icon { public StoreMicrosoft() : base("StoreMicrosoft", IconVariant.Regular, StoreMicrosoftSizeAndContent.Values[0]) { } }
            public class Subtitles : Icon { public Subtitles() : base("Subtitles", IconVariant.Regular, SubtitlesSizeAndContent.Values[0]) { } }
            public class Subtract : Icon { public Subtract() : base("Subtract", IconVariant.Regular, SubtractSizeAndContent.Values[1]) { } }
            public class SubtractCircle : Icon { public SubtractCircle() : base("SubtractCircle", IconVariant.Regular, SubtractCircleSizeAndContent.Values[1]) { } }
            public class SubtractCircleArrowBack : Icon { public SubtractCircleArrowBack() : base("SubtractCircleArrowBack", IconVariant.Regular, SubtractCircleArrowBackSizeAndContent.Values[0]) { } }
            public class SubtractCircleArrowForward : Icon { public SubtractCircleArrowForward() : base("SubtractCircleArrowForward", IconVariant.Regular, SubtractCircleArrowForwardSizeAndContent.Values[0]) { } }
            public class SubtractParentheses : Icon { public SubtractParentheses() : base("SubtractParentheses", IconVariant.Regular, SubtractParenthesesSizeAndContent.Values[0]) { } }
            public class SubtractSquare : Icon { public SubtractSquare() : base("SubtractSquare", IconVariant.Regular, SubtractSquareSizeAndContent.Values[0]) { } }
            public class SubtractSquareMultiple : Icon { public SubtractSquareMultiple() : base("SubtractSquareMultiple", IconVariant.Regular, SubtractSquareMultipleSizeAndContent.Values[0]) { } }
            public class Symbols : Icon { public Symbols() : base("Symbols", IconVariant.Regular, SymbolsSizeAndContent.Values[0]) { } }
            public class SyncOff : Icon { public SyncOff() : base("SyncOff", IconVariant.Regular, SyncOffSizeAndContent.Values[0]) { } }
            public class Tab : Icon { public Tab() : base("Tab", IconVariant.Regular, TabSizeAndContent.Values[0]) { } }
            public class TabDesktop : Icon { public TabDesktop() : base("TabDesktop", IconVariant.Regular, TabDesktopSizeAndContent.Values[0]) { } }
            public class TabDesktopArrowClockwise : Icon { public TabDesktopArrowClockwise() : base("TabDesktopArrowClockwise", IconVariant.Regular, TabDesktopArrowClockwiseSizeAndContent.Values[0]) { } }
            public class TabDesktopImage : Icon { public TabDesktopImage() : base("TabDesktopImage", IconVariant.Regular, TabDesktopImageSizeAndContent.Values[0]) { } }
            public class TabDesktopLink : Icon { public TabDesktopLink() : base("TabDesktopLink", IconVariant.Regular, TabDesktopLinkSizeAndContent.Values[0]) { } }
            public class TabDesktopMultiple : Icon { public TabDesktopMultiple() : base("TabDesktopMultiple", IconVariant.Regular, TabDesktopMultipleSizeAndContent.Values[0]) { } }
            public class TabDesktopMultipleAdd : Icon { public TabDesktopMultipleAdd() : base("TabDesktopMultipleAdd", IconVariant.Regular, TabDesktopMultipleAddSizeAndContent.Values[0]) { } }
            public class TabInPrivate : Icon { public TabInPrivate() : base("TabInPrivate", IconVariant.Regular, TabInPrivateSizeAndContent.Values[0]) { } }
            public class Table : Icon { public Table() : base("Table", IconVariant.Regular, TableSizeAndContent.Values[0]) { } }
            public class TableAdd : Icon { public TableAdd() : base("TableAdd", IconVariant.Regular, TableAddSizeAndContent.Values[0]) { } }
            public class TableBottomRow : Icon { public TableBottomRow() : base("TableBottomRow", IconVariant.Regular, TableBottomRowSizeAndContent.Values[0]) { } }
            public class TableCalculator : Icon { public TableCalculator() : base("TableCalculator", IconVariant.Regular, TableCalculatorSizeAndContent.Values[0]) { } }
            public class TableCellEdit : Icon { public TableCellEdit() : base("TableCellEdit", IconVariant.Regular, TableCellEditSizeAndContent.Values[0]) { } }
            public class TableCellsMerge : Icon { public TableCellsMerge() : base("TableCellsMerge", IconVariant.Regular, TableCellsMergeSizeAndContent.Values[0]) { } }
            public class TableCellsSplit : Icon { public TableCellsSplit() : base("TableCellsSplit", IconVariant.Regular, TableCellsSplitSizeAndContent.Values[0]) { } }
            public class TableDeleteColumn : Icon { public TableDeleteColumn() : base("TableDeleteColumn", IconVariant.Regular, TableDeleteColumnSizeAndContent.Values[0]) { } }
            public class TableDeleteRow : Icon { public TableDeleteRow() : base("TableDeleteRow", IconVariant.Regular, TableDeleteRowSizeAndContent.Values[0]) { } }
            public class TableDismiss : Icon { public TableDismiss() : base("TableDismiss", IconVariant.Regular, TableDismissSizeAndContent.Values[0]) { } }
            public class TableEdit : Icon { public TableEdit() : base("TableEdit", IconVariant.Regular, TableEditSizeAndContent.Values[0]) { } }
            public class TableFreezeColumn : Icon { public TableFreezeColumn() : base("TableFreezeColumn", IconVariant.Regular, TableFreezeColumnSizeAndContent.Values[0]) { } }
            public class TableFreezeColumnAndRow : Icon { public TableFreezeColumnAndRow() : base("TableFreezeColumnAndRow", IconVariant.Regular, TableFreezeColumnAndRowSizeAndContent.Values[0]) { } }
            public class TableFreezeRow : Icon { public TableFreezeRow() : base("TableFreezeRow", IconVariant.Regular, TableFreezeRowSizeAndContent.Values[0]) { } }
            public class TableInsertColumn : Icon { public TableInsertColumn() : base("TableInsertColumn", IconVariant.Regular, TableInsertColumnSizeAndContent.Values[0]) { } }
            public class TableInsertRow : Icon { public TableInsertRow() : base("TableInsertRow", IconVariant.Regular, TableInsertRowSizeAndContent.Values[0]) { } }
            public class TableLightning : Icon { public TableLightning() : base("TableLightning", IconVariant.Regular, TableLightningSizeAndContent.Values[0]) { } }
            public class TableLink : Icon { public TableLink() : base("TableLink", IconVariant.Regular, TableLinkSizeAndContent.Values[0]) { } }
            public class TableLock : Icon { public TableLock() : base("TableLock", IconVariant.Regular, TableLockSizeAndContent.Values[0]) { } }
            public class TableMoveAbove : Icon { public TableMoveAbove() : base("TableMoveAbove", IconVariant.Regular, TableMoveAboveSizeAndContent.Values[0]) { } }
            public class TableMoveBelow : Icon { public TableMoveBelow() : base("TableMoveBelow", IconVariant.Regular, TableMoveBelowSizeAndContent.Values[0]) { } }
            public class TableMoveLeft : Icon { public TableMoveLeft() : base("TableMoveLeft", IconVariant.Regular, TableMoveLeftSizeAndContent.Values[0]) { } }
            public class TableMoveRight : Icon { public TableMoveRight() : base("TableMoveRight", IconVariant.Regular, TableMoveRightSizeAndContent.Values[0]) { } }
            public class TableResizeColumn : Icon { public TableResizeColumn() : base("TableResizeColumn", IconVariant.Regular, TableResizeColumnSizeAndContent.Values[0]) { } }
            public class TableResizeRow : Icon { public TableResizeRow() : base("TableResizeRow", IconVariant.Regular, TableResizeRowSizeAndContent.Values[0]) { } }
            public class TableSettings : Icon { public TableSettings() : base("TableSettings", IconVariant.Regular, TableSettingsSizeAndContent.Values[0]) { } }
            public class TableSimple : Icon { public TableSimple() : base("TableSimple", IconVariant.Regular, TableSimpleSizeAndContent.Values[0]) { } }
            public class TableSimpleCheckmark : Icon { public TableSimpleCheckmark() : base("TableSimpleCheckmark", IconVariant.Regular, TableSimpleCheckmarkSizeAndContent.Values[0]) { } }
            public class TableSimpleExclude : Icon { public TableSimpleExclude() : base("TableSimpleExclude", IconVariant.Regular, TableSimpleExcludeSizeAndContent.Values[0]) { } }
            public class TableSimpleInclude : Icon { public TableSimpleInclude() : base("TableSimpleInclude", IconVariant.Regular, TableSimpleIncludeSizeAndContent.Values[0]) { } }
            public class TableStackAbove : Icon { public TableStackAbove() : base("TableStackAbove", IconVariant.Regular, TableStackAboveSizeAndContent.Values[0]) { } }
            public class TableStackBelow : Icon { public TableStackBelow() : base("TableStackBelow", IconVariant.Regular, TableStackBelowSizeAndContent.Values[0]) { } }
            public class TableStackLeft : Icon { public TableStackLeft() : base("TableStackLeft", IconVariant.Regular, TableStackLeftSizeAndContent.Values[0]) { } }
            public class TableStackRight : Icon { public TableStackRight() : base("TableStackRight", IconVariant.Regular, TableStackRightSizeAndContent.Values[0]) { } }
            public class TableSwitch : Icon { public TableSwitch() : base("TableSwitch", IconVariant.Regular, TableSwitchSizeAndContent.Values[0]) { } }
            public class Tablet : Icon { public Tablet() : base("Tablet", IconVariant.Regular, TabletSizeAndContent.Values[1]) { } }
            public class Tabs : Icon { public Tabs() : base("Tabs", IconVariant.Regular, TabsSizeAndContent.Values[0]) { } }
            public class Tag : Icon { public Tag() : base("Tag", IconVariant.Regular, TagSizeAndContent.Values[0]) { } }
            public class TagDismiss : Icon { public TagDismiss() : base("TagDismiss", IconVariant.Regular, TagDismissSizeAndContent.Values[0]) { } }
            public class TagError : Icon { public TagError() : base("TagError", IconVariant.Regular, TagErrorSizeAndContent.Values[0]) { } }
            public class TagLock : Icon { public TagLock() : base("TagLock", IconVariant.Regular, TagLockSizeAndContent.Values[0]) { } }
            public class TagMultiple : Icon { public TagMultiple() : base("TagMultiple", IconVariant.Regular, TagMultipleSizeAndContent.Values[0]) { } }
            public class TagQuestionMark : Icon { public TagQuestionMark() : base("TagQuestionMark", IconVariant.Regular, TagQuestionMarkSizeAndContent.Values[0]) { } }
            public class Target : Icon { public Target() : base("Target", IconVariant.Regular, TargetSizeAndContent.Values[0]) { } }
            public class TargetArrow : Icon { public TargetArrow() : base("TargetArrow", IconVariant.Regular, TargetArrowSizeAndContent.Values[0]) { } }
            public class TargetEdit : Icon { public TargetEdit() : base("TargetEdit", IconVariant.Regular, TargetEditSizeAndContent.Values[0]) { } }
            public class TaskListSquareLtr : Icon { public TaskListSquareLtr() : base("TaskListSquareLtr", IconVariant.Regular, TaskListSquareLtrSizeAndContent.Values[0]) { } }
            public class TaskListSquareRtl : Icon { public TaskListSquareRtl() : base("TaskListSquareRtl", IconVariant.Regular, TaskListSquareRtlSizeAndContent.Values[0]) { } }
            public class TeardropBottomRight : Icon { public TeardropBottomRight() : base("TeardropBottomRight", IconVariant.Regular, TeardropBottomRightSizeAndContent.Values[0]) { } }
            public class Temperature : Icon { public Temperature() : base("Temperature", IconVariant.Regular, TemperatureSizeAndContent.Values[0]) { } }
            public class Tent : Icon { public Tent() : base("Tent", IconVariant.Regular, TentSizeAndContent.Values[1]) { } }
            public class TetrisApp : Icon { public TetrisApp() : base("TetrisApp", IconVariant.Regular, TetrisAppSizeAndContent.Values[0]) { } }
            public class Text : Icon { public Text() : base("Text", IconVariant.Regular, TextSizeAndContent.Values[1]) { } }
            public class TextAlignCenter : Icon { public TextAlignCenter() : base("TextAlignCenter", IconVariant.Regular, TextAlignCenterSizeAndContent.Values[0]) { } }
            public class TextAlignCenterRotate270 : Icon { public TextAlignCenterRotate270() : base("TextAlignCenterRotate270", IconVariant.Regular, TextAlignCenterRotate270SizeAndContent.Values[0]) { } }
            public class TextAlignCenterRotate90 : Icon { public TextAlignCenterRotate90() : base("TextAlignCenterRotate90", IconVariant.Regular, TextAlignCenterRotate90SizeAndContent.Values[0]) { } }
            public class TextAlignLeft : Icon { public TextAlignLeft() : base("TextAlignLeft", IconVariant.Regular, TextAlignLeftSizeAndContent.Values[0]) { } }
            public class TextAlignLeftRotate270 : Icon { public TextAlignLeftRotate270() : base("TextAlignLeftRotate270", IconVariant.Regular, TextAlignLeftRotate270SizeAndContent.Values[0]) { } }
            public class TextAlignLeftRotate90 : Icon { public TextAlignLeftRotate90() : base("TextAlignLeftRotate90", IconVariant.Regular, TextAlignLeftRotate90SizeAndContent.Values[0]) { } }
            public class TextAlignRight : Icon { public TextAlignRight() : base("TextAlignRight", IconVariant.Regular, TextAlignRightSizeAndContent.Values[0]) { } }
            public class TextAlignRightRotate270 : Icon { public TextAlignRightRotate270() : base("TextAlignRightRotate270", IconVariant.Regular, TextAlignRightRotate270SizeAndContent.Values[0]) { } }
            public class TextAlignRightRotate90 : Icon { public TextAlignRightRotate90() : base("TextAlignRightRotate90", IconVariant.Regular, TextAlignRightRotate90SizeAndContent.Values[0]) { } }
            public class TextArrowDownRightColumn : Icon { public TextArrowDownRightColumn() : base("TextArrowDownRightColumn", IconVariant.Regular, TextArrowDownRightColumnSizeAndContent.Values[0]) { } }
            public class TextAsterisk : Icon { public TextAsterisk() : base("TextAsterisk", IconVariant.Regular, TextAsteriskSizeAndContent.Values[0]) { } }
            public class TextBold : Icon { public TextBold() : base("TextBold", IconVariant.Regular, TextBoldSizeAndContent.Values[0]) { } }
            public class TextBoldBg : Icon { public TextBoldBg() : base("TextBoldBg", IconVariant.Regular, TextBoldBgSizeAndContent.Values[0]) { } }
            public class TextBoldCa : Icon { public TextBoldCa() : base("TextBoldCa", IconVariant.Regular, TextBoldCaSizeAndContent.Values[0]) { } }
            public class TextBoldDa : Icon { public TextBoldDa() : base("TextBoldDa", IconVariant.Regular, TextBoldDaSizeAndContent.Values[0]) { } }
            public class TextBoldDe : Icon { public TextBoldDe() : base("TextBoldDe", IconVariant.Regular, TextBoldDeSizeAndContent.Values[0]) { } }
            public class TextBoldEn : Icon { public TextBoldEn() : base("TextBoldEn", IconVariant.Regular, TextBoldEnSizeAndContent.Values[0]) { } }
            public class TextBoldEs : Icon { public TextBoldEs() : base("TextBoldEs", IconVariant.Regular, TextBoldEsSizeAndContent.Values[0]) { } }
            public class TextBoldEt : Icon { public TextBoldEt() : base("TextBoldEt", IconVariant.Regular, TextBoldEtSizeAndContent.Values[0]) { } }
            public class TextBoldFr : Icon { public TextBoldFr() : base("TextBoldFr", IconVariant.Regular, TextBoldFrSizeAndContent.Values[0]) { } }
            public class TextBoldGl : Icon { public TextBoldGl() : base("TextBoldGl", IconVariant.Regular, TextBoldGlSizeAndContent.Values[0]) { } }
            public class TextBoldHu : Icon { public TextBoldHu() : base("TextBoldHu", IconVariant.Regular, TextBoldHuSizeAndContent.Values[0]) { } }
            public class TextBoldIt : Icon { public TextBoldIt() : base("TextBoldIt", IconVariant.Regular, TextBoldItSizeAndContent.Values[0]) { } }
            public class TextBoldKk : Icon { public TextBoldKk() : base("TextBoldKk", IconVariant.Regular, TextBoldKkSizeAndContent.Values[0]) { } }
            public class TextBoldKo : Icon { public TextBoldKo() : base("TextBoldKo", IconVariant.Regular, TextBoldKoSizeAndContent.Values[0]) { } }
            public class TextBoldLt : Icon { public TextBoldLt() : base("TextBoldLt", IconVariant.Regular, TextBoldLtSizeAndContent.Values[0]) { } }
            public class TextBoldLv : Icon { public TextBoldLv() : base("TextBoldLv", IconVariant.Regular, TextBoldLvSizeAndContent.Values[0]) { } }
            public class TextBoldMs : Icon { public TextBoldMs() : base("TextBoldMs", IconVariant.Regular, TextBoldMsSizeAndContent.Values[0]) { } }
            public class TextBoldNo : Icon { public TextBoldNo() : base("TextBoldNo", IconVariant.Regular, TextBoldNoSizeAndContent.Values[0]) { } }
            public class TextBoldPt : Icon { public TextBoldPt() : base("TextBoldPt", IconVariant.Regular, TextBoldPtSizeAndContent.Values[0]) { } }
            public class TextBoldRu : Icon { public TextBoldRu() : base("TextBoldRu", IconVariant.Regular, TextBoldRuSizeAndContent.Values[0]) { } }
            public class TextBoldSl : Icon { public TextBoldSl() : base("TextBoldSl", IconVariant.Regular, TextBoldSlSizeAndContent.Values[0]) { } }
            public class TextBoldSrCyrl : Icon { public TextBoldSrCyrl() : base("TextBoldSrCyrl", IconVariant.Regular, TextBoldSrCyrlSizeAndContent.Values[0]) { } }
            public class TextBoldSrLatn : Icon { public TextBoldSrLatn() : base("TextBoldSrLatn", IconVariant.Regular, TextBoldSrLatnSizeAndContent.Values[0]) { } }
            public class TextBoldSv : Icon { public TextBoldSv() : base("TextBoldSv", IconVariant.Regular, TextBoldSvSizeAndContent.Values[0]) { } }
            public class Textbox : Icon { public Textbox() : base("Textbox", IconVariant.Regular, TextboxSizeAndContent.Values[0]) { } }
            public class TextboxAlignBottomCenter : Icon { public TextboxAlignBottomCenter() : base("TextboxAlignBottomCenter", IconVariant.Regular, TextboxAlignBottomCenterSizeAndContent.Values[0]) { } }
            public class TextboxAlignBottomLeft : Icon { public TextboxAlignBottomLeft() : base("TextboxAlignBottomLeft", IconVariant.Regular, TextboxAlignBottomLeftSizeAndContent.Values[0]) { } }
            public class TextboxAlignBottomRight : Icon { public TextboxAlignBottomRight() : base("TextboxAlignBottomRight", IconVariant.Regular, TextboxAlignBottomRightSizeAndContent.Values[0]) { } }
            public class TextboxAlignCenter : Icon { public TextboxAlignCenter() : base("TextboxAlignCenter", IconVariant.Regular, TextboxAlignCenterSizeAndContent.Values[0]) { } }
            public class TextboxAlignMiddle : Icon { public TextboxAlignMiddle() : base("TextboxAlignMiddle", IconVariant.Regular, TextboxAlignMiddleSizeAndContent.Values[0]) { } }
            public class TextboxAlignMiddleLeft : Icon { public TextboxAlignMiddleLeft() : base("TextboxAlignMiddleLeft", IconVariant.Regular, TextboxAlignMiddleLeftSizeAndContent.Values[0]) { } }
            public class TextboxAlignMiddleRight : Icon { public TextboxAlignMiddleRight() : base("TextboxAlignMiddleRight", IconVariant.Regular, TextboxAlignMiddleRightSizeAndContent.Values[0]) { } }
            public class TextboxAlignTopCenter : Icon { public TextboxAlignTopCenter() : base("TextboxAlignTopCenter", IconVariant.Regular, TextboxAlignTopCenterSizeAndContent.Values[0]) { } }
            public class TextboxAlignTopLeft : Icon { public TextboxAlignTopLeft() : base("TextboxAlignTopLeft", IconVariant.Regular, TextboxAlignTopLeftSizeAndContent.Values[0]) { } }
            public class TextboxAlignTopRight : Icon { public TextboxAlignTopRight() : base("TextboxAlignTopRight", IconVariant.Regular, TextboxAlignTopRightSizeAndContent.Values[0]) { } }
            public class TextBulletList : Icon { public TextBulletList() : base("TextBulletList", IconVariant.Regular, TextBulletListSizeAndContent.Values[0]) { } }
            public class TextBulletListLtr : Icon { public TextBulletListLtr() : base("TextBulletListLtr", IconVariant.Regular, TextBulletListLtrSizeAndContent.Values[0]) { } }
            public class TextBulletListRtl : Icon { public TextBulletListRtl() : base("TextBulletListRtl", IconVariant.Regular, TextBulletListRtlSizeAndContent.Values[0]) { } }
            public class TextBulletListSquare : Icon { public TextBulletListSquare() : base("TextBulletListSquare", IconVariant.Regular, TextBulletListSquareSizeAndContent.Values[0]) { } }
            public class TextBulletListSquareSparkle : Icon { public TextBulletListSquareSparkle() : base("TextBulletListSquareSparkle", IconVariant.Regular, TextBulletListSquareSparkleSizeAndContent.Values[0]) { } }
            public class TextBulletListSquareWarning : Icon { public TextBulletListSquareWarning() : base("TextBulletListSquareWarning", IconVariant.Regular, TextBulletListSquareWarningSizeAndContent.Values[0]) { } }
            public class TextBulletListTree : Icon { public TextBulletListTree() : base("TextBulletListTree", IconVariant.Regular, TextBulletListTreeSizeAndContent.Values[0]) { } }
            public class TextCaseLowercase : Icon { public TextCaseLowercase() : base("TextCaseLowercase", IconVariant.Regular, TextCaseLowercaseSizeAndContent.Values[0]) { } }
            public class TextCaseTitle : Icon { public TextCaseTitle() : base("TextCaseTitle", IconVariant.Regular, TextCaseTitleSizeAndContent.Values[0]) { } }
            public class TextCaseUppercase : Icon { public TextCaseUppercase() : base("TextCaseUppercase", IconVariant.Regular, TextCaseUppercaseSizeAndContent.Values[0]) { } }
            public class TextChangeCase : Icon { public TextChangeCase() : base("TextChangeCase", IconVariant.Regular, TextChangeCaseSizeAndContent.Values[0]) { } }
            public class TextClearFormatting : Icon { public TextClearFormatting() : base("TextClearFormatting", IconVariant.Regular, TextClearFormattingSizeAndContent.Values[0]) { } }
            public class TextClearFormattingEn : Icon { public TextClearFormattingEn() : base("TextClearFormattingEn", IconVariant.Regular, TextClearFormattingEnSizeAndContent.Values[0]) { } }
            public class TextColor : Icon { public TextColor() : base("TextColor", IconVariant.Regular, TextColorSizeAndContent.Values[0]) { } }
            public class TextColorEn : Icon { public TextColorEn() : base("TextColorEn", IconVariant.Regular, TextColorEnSizeAndContent.Values[0]) { } }
            public class TextDensity : Icon { public TextDensity() : base("TextDensity", IconVariant.Regular, TextDensitySizeAndContent.Values[0]) { } }
            public class TextDescription : Icon { public TextDescription() : base("TextDescription", IconVariant.Regular, TextDescriptionSizeAndContent.Values[0]) { } }
            public class TextEditStyle : Icon { public TextEditStyle() : base("TextEditStyle", IconVariant.Regular, TextEditStyleSizeAndContent.Values[0]) { } }
            public class TextEditStyleEn : Icon { public TextEditStyleEn() : base("TextEditStyleEn", IconVariant.Regular, TextEditStyleEnSizeAndContent.Values[0]) { } }
            public class TextEditStyleKo : Icon { public TextEditStyleKo() : base("TextEditStyleKo", IconVariant.Regular, TextEditStyleKoSizeAndContent.Values[0]) { } }
            public class TextExpand : Icon { public TextExpand() : base("TextExpand", IconVariant.Regular, TextExpandSizeAndContent.Values[0]) { } }
            public class TextField : Icon { public TextField() : base("TextField", IconVariant.Regular, TextFieldSizeAndContent.Values[0]) { } }
            public class TextFont : Icon { public TextFont() : base("TextFont", IconVariant.Regular, TextFontSizeAndContent.Values[0]) { } }
            public class TextFontInfo : Icon { public TextFontInfo() : base("TextFontInfo", IconVariant.Regular, TextFontInfoSizeAndContent.Values[0]) { } }
            public class TextFontSize : Icon { public TextFontSize() : base("TextFontSize", IconVariant.Regular, TextFontSizeSizeAndContent.Values[0]) { } }
            public class TextGrammarLightning : Icon { public TextGrammarLightning() : base("TextGrammarLightning", IconVariant.Regular, TextGrammarLightningSizeAndContent.Values[0]) { } }
            public class TextGrammarWand : Icon { public TextGrammarWand() : base("TextGrammarWand", IconVariant.Regular, TextGrammarWandSizeAndContent.Values[0]) { } }
            public class TextHeader1Lines : Icon { public TextHeader1Lines() : base("TextHeader1Lines", IconVariant.Regular, TextHeader1LinesSizeAndContent.Values[0]) { } }
            public class TextHeader1LinesCaret : Icon { public TextHeader1LinesCaret() : base("TextHeader1LinesCaret", IconVariant.Regular, TextHeader1LinesCaretSizeAndContent.Values[0]) { } }
            public class TextHeader2Lines : Icon { public TextHeader2Lines() : base("TextHeader2Lines", IconVariant.Regular, TextHeader2LinesSizeAndContent.Values[0]) { } }
            public class TextHeader2LinesCaret : Icon { public TextHeader2LinesCaret() : base("TextHeader2LinesCaret", IconVariant.Regular, TextHeader2LinesCaretSizeAndContent.Values[0]) { } }
            public class TextHeader3Lines : Icon { public TextHeader3Lines() : base("TextHeader3Lines", IconVariant.Regular, TextHeader3LinesSizeAndContent.Values[0]) { } }
            public class TextHeader3LinesCaret : Icon { public TextHeader3LinesCaret() : base("TextHeader3LinesCaret", IconVariant.Regular, TextHeader3LinesCaretSizeAndContent.Values[0]) { } }
            public class TextIndentDecrease : Icon { public TextIndentDecrease() : base("TextIndentDecrease", IconVariant.Regular, TextIndentDecreaseSizeAndContent.Values[0]) { } }
            public class TextIndentDecreaseLtr : Icon { public TextIndentDecreaseLtr() : base("TextIndentDecreaseLtr", IconVariant.Regular, TextIndentDecreaseLtrSizeAndContent.Values[0]) { } }
            public class TextIndentDecreaseRtl : Icon { public TextIndentDecreaseRtl() : base("TextIndentDecreaseRtl", IconVariant.Regular, TextIndentDecreaseRtlSizeAndContent.Values[0]) { } }
            public class TextIndentIncrease : Icon { public TextIndentIncrease() : base("TextIndentIncrease", IconVariant.Regular, TextIndentIncreaseSizeAndContent.Values[0]) { } }
            public class TextIndentIncreaseLtr : Icon { public TextIndentIncreaseLtr() : base("TextIndentIncreaseLtr", IconVariant.Regular, TextIndentIncreaseLtrSizeAndContent.Values[0]) { } }
            public class TextIndentIncreaseRtl : Icon { public TextIndentIncreaseRtl() : base("TextIndentIncreaseRtl", IconVariant.Regular, TextIndentIncreaseRtlSizeAndContent.Values[0]) { } }
            public class TextItalic : Icon { public TextItalic() : base("TextItalic", IconVariant.Regular, TextItalicSizeAndContent.Values[0]) { } }
            public class TextItalicBg : Icon { public TextItalicBg() : base("TextItalicBg", IconVariant.Regular, TextItalicBgSizeAndContent.Values[0]) { } }
            public class TextItalicCa : Icon { public TextItalicCa() : base("TextItalicCa", IconVariant.Regular, TextItalicCaSizeAndContent.Values[0]) { } }
            public class TextItalicDa : Icon { public TextItalicDa() : base("TextItalicDa", IconVariant.Regular, TextItalicDaSizeAndContent.Values[0]) { } }
            public class TextItalicDe : Icon { public TextItalicDe() : base("TextItalicDe", IconVariant.Regular, TextItalicDeSizeAndContent.Values[0]) { } }
            public class TextItalicEn : Icon { public TextItalicEn() : base("TextItalicEn", IconVariant.Regular, TextItalicEnSizeAndContent.Values[0]) { } }
            public class TextItalicEs : Icon { public TextItalicEs() : base("TextItalicEs", IconVariant.Regular, TextItalicEsSizeAndContent.Values[0]) { } }
            public class TextItalicEt : Icon { public TextItalicEt() : base("TextItalicEt", IconVariant.Regular, TextItalicEtSizeAndContent.Values[0]) { } }
            public class TextItalicGl : Icon { public TextItalicGl() : base("TextItalicGl", IconVariant.Regular, TextItalicGlSizeAndContent.Values[0]) { } }
            public class TextItalicHu : Icon { public TextItalicHu() : base("TextItalicHu", IconVariant.Regular, TextItalicHuSizeAndContent.Values[0]) { } }
            public class TextItalicIt : Icon { public TextItalicIt() : base("TextItalicIt", IconVariant.Regular, TextItalicItSizeAndContent.Values[0]) { } }
            public class TextItalicKk : Icon { public TextItalicKk() : base("TextItalicKk", IconVariant.Regular, TextItalicKkSizeAndContent.Values[0]) { } }
            public class TextItalicKo : Icon { public TextItalicKo() : base("TextItalicKo", IconVariant.Regular, TextItalicKoSizeAndContent.Values[0]) { } }
            public class TextItalicLt : Icon { public TextItalicLt() : base("TextItalicLt", IconVariant.Regular, TextItalicLtSizeAndContent.Values[0]) { } }
            public class TextItalicLv : Icon { public TextItalicLv() : base("TextItalicLv", IconVariant.Regular, TextItalicLvSizeAndContent.Values[0]) { } }
            public class TextItalicNo : Icon { public TextItalicNo() : base("TextItalicNo", IconVariant.Regular, TextItalicNoSizeAndContent.Values[0]) { } }
            public class TextItalicRu : Icon { public TextItalicRu() : base("TextItalicRu", IconVariant.Regular, TextItalicRuSizeAndContent.Values[0]) { } }
            public class TextItalicSl : Icon { public TextItalicSl() : base("TextItalicSl", IconVariant.Regular, TextItalicSlSizeAndContent.Values[0]) { } }
            public class TextItalicSv : Icon { public TextItalicSv() : base("TextItalicSv", IconVariant.Regular, TextItalicSvSizeAndContent.Values[0]) { } }
            public class TextNumberListLtr : Icon { public TextNumberListLtr() : base("TextNumberListLtr", IconVariant.Regular, TextNumberListLtrSizeAndContent.Values[0]) { } }
            public class TextNumberListRtl : Icon { public TextNumberListRtl() : base("TextNumberListRtl", IconVariant.Regular, TextNumberListRtlSizeAndContent.Values[0]) { } }
            public class TextParagraph : Icon { public TextParagraph() : base("TextParagraph", IconVariant.Regular, TextParagraphSizeAndContent.Values[0]) { } }
            public class TextParagraphDirectionLeft : Icon { public TextParagraphDirectionLeft() : base("TextParagraphDirectionLeft", IconVariant.Regular, TextParagraphDirectionLeftSizeAndContent.Values[0]) { } }
            public class TextParagraphDirectionRight : Icon { public TextParagraphDirectionRight() : base("TextParagraphDirectionRight", IconVariant.Regular, TextParagraphDirectionRightSizeAndContent.Values[0]) { } }
            public class TextParagraphEn : Icon { public TextParagraphEn() : base("TextParagraphEn", IconVariant.Regular, TextParagraphEnSizeAndContent.Values[0]) { } }
            public class TextParagraphKo : Icon { public TextParagraphKo() : base("TextParagraphKo", IconVariant.Regular, TextParagraphKoSizeAndContent.Values[0]) { } }
            public class TextPositionSquareLeft : Icon { public TextPositionSquareLeft() : base("TextPositionSquareLeft", IconVariant.Regular, TextPositionSquareLeftSizeAndContent.Values[0]) { } }
            public class TextPositionSquareRight : Icon { public TextPositionSquareRight() : base("TextPositionSquareRight", IconVariant.Regular, TextPositionSquareRightSizeAndContent.Values[0]) { } }
            public class TextQuote : Icon { public TextQuote() : base("TextQuote", IconVariant.Regular, TextQuoteSizeAndContent.Values[0]) { } }
            public class TextSortAscending : Icon { public TextSortAscending() : base("TextSortAscending", IconVariant.Regular, TextSortAscendingSizeAndContent.Values[0]) { } }
            public class TextSortAscendingBg : Icon { public TextSortAscendingBg() : base("TextSortAscendingBg", IconVariant.Regular, TextSortAscendingBgSizeAndContent.Values[0]) { } }
            public class TextSortAscendingDa : Icon { public TextSortAscendingDa() : base("TextSortAscendingDa", IconVariant.Regular, TextSortAscendingDaSizeAndContent.Values[0]) { } }
            public class TextSortAscendingEn : Icon { public TextSortAscendingEn() : base("TextSortAscendingEn", IconVariant.Regular, TextSortAscendingEnSizeAndContent.Values[0]) { } }
            public class TextSortAscendingKk : Icon { public TextSortAscendingKk() : base("TextSortAscendingKk", IconVariant.Regular, TextSortAscendingKkSizeAndContent.Values[0]) { } }
            public class TextSortAscendingKo : Icon { public TextSortAscendingKo() : base("TextSortAscendingKo", IconVariant.Regular, TextSortAscendingKoSizeAndContent.Values[0]) { } }
            public class TextSortAscendingRu : Icon { public TextSortAscendingRu() : base("TextSortAscendingRu", IconVariant.Regular, TextSortAscendingRuSizeAndContent.Values[0]) { } }
            public class TextSortAscendingSl : Icon { public TextSortAscendingSl() : base("TextSortAscendingSl", IconVariant.Regular, TextSortAscendingSlSizeAndContent.Values[0]) { } }
            public class TextSortDescending : Icon { public TextSortDescending() : base("TextSortDescending", IconVariant.Regular, TextSortDescendingSizeAndContent.Values[0]) { } }
            public class TextSortDescendingBg : Icon { public TextSortDescendingBg() : base("TextSortDescendingBg", IconVariant.Regular, TextSortDescendingBgSizeAndContent.Values[0]) { } }
            public class TextSortDescendingDa : Icon { public TextSortDescendingDa() : base("TextSortDescendingDa", IconVariant.Regular, TextSortDescendingDaSizeAndContent.Values[0]) { } }
            public class TextSortDescendingEn : Icon { public TextSortDescendingEn() : base("TextSortDescendingEn", IconVariant.Regular, TextSortDescendingEnSizeAndContent.Values[0]) { } }
            public class TextSortDescendingKk : Icon { public TextSortDescendingKk() : base("TextSortDescendingKk", IconVariant.Regular, TextSortDescendingKkSizeAndContent.Values[0]) { } }
            public class TextSortDescendingKo : Icon { public TextSortDescendingKo() : base("TextSortDescendingKo", IconVariant.Regular, TextSortDescendingKoSizeAndContent.Values[0]) { } }
            public class TextSortDescendingRu : Icon { public TextSortDescendingRu() : base("TextSortDescendingRu", IconVariant.Regular, TextSortDescendingRuSizeAndContent.Values[0]) { } }
            public class TextSortDescendingSl : Icon { public TextSortDescendingSl() : base("TextSortDescendingSl", IconVariant.Regular, TextSortDescendingSlSizeAndContent.Values[0]) { } }
            public class TextStrikethrough : Icon { public TextStrikethrough() : base("TextStrikethrough", IconVariant.Regular, TextStrikethroughSizeAndContent.Values[0]) { } }
            public class TextStrikethroughEn : Icon { public TextStrikethroughEn() : base("TextStrikethroughEn", IconVariant.Regular, TextStrikethroughEnSizeAndContent.Values[0]) { } }
            public class TextStrikethroughKo : Icon { public TextStrikethroughKo() : base("TextStrikethroughKo", IconVariant.Regular, TextStrikethroughKoSizeAndContent.Values[0]) { } }
            public class TextSubscript : Icon { public TextSubscript() : base("TextSubscript", IconVariant.Regular, TextSubscriptSizeAndContent.Values[0]) { } }
            public class TextSuperscript : Icon { public TextSuperscript() : base("TextSuperscript", IconVariant.Regular, TextSuperscriptSizeAndContent.Values[0]) { } }
            public class TextT : Icon { public TextT() : base("TextT", IconVariant.Regular, TextTSizeAndContent.Values[1]) { } }
            public class TextTTag : Icon { public TextTTag() : base("TextTTag", IconVariant.Regular, TextTTagSizeAndContent.Values[0]) { } }
            public class TextUnderline : Icon { public TextUnderline() : base("TextUnderline", IconVariant.Regular, TextUnderlineSizeAndContent.Values[0]) { } }
            public class TextUnderlineBg : Icon { public TextUnderlineBg() : base("TextUnderlineBg", IconVariant.Regular, TextUnderlineBgSizeAndContent.Values[0]) { } }
            public class TextUnderlineCa : Icon { public TextUnderlineCa() : base("TextUnderlineCa", IconVariant.Regular, TextUnderlineCaSizeAndContent.Values[0]) { } }
            public class TextUnderlineCharacterU : Icon { public TextUnderlineCharacterU() : base("TextUnderlineCharacterU", IconVariant.Regular, TextUnderlineCharacterUSizeAndContent.Values[0]) { } }
            public class TextUnderlineEn : Icon { public TextUnderlineEn() : base("TextUnderlineEn", IconVariant.Regular, TextUnderlineEnSizeAndContent.Values[0]) { } }
            public class TextUnderlineEs : Icon { public TextUnderlineEs() : base("TextUnderlineEs", IconVariant.Regular, TextUnderlineEsSizeAndContent.Values[0]) { } }
            public class TextUnderlineEt : Icon { public TextUnderlineEt() : base("TextUnderlineEt", IconVariant.Regular, TextUnderlineEtSizeAndContent.Values[0]) { } }
            public class TextUnderlineFr : Icon { public TextUnderlineFr() : base("TextUnderlineFr", IconVariant.Regular, TextUnderlineFrSizeAndContent.Values[0]) { } }
            public class TextUnderlineGl : Icon { public TextUnderlineGl() : base("TextUnderlineGl", IconVariant.Regular, TextUnderlineGlSizeAndContent.Values[0]) { } }
            public class TextUnderlineHu : Icon { public TextUnderlineHu() : base("TextUnderlineHu", IconVariant.Regular, TextUnderlineHuSizeAndContent.Values[0]) { } }
            public class TextUnderlineIt : Icon { public TextUnderlineIt() : base("TextUnderlineIt", IconVariant.Regular, TextUnderlineItSizeAndContent.Values[0]) { } }
            public class TextUnderlineKk : Icon { public TextUnderlineKk() : base("TextUnderlineKk", IconVariant.Regular, TextUnderlineKkSizeAndContent.Values[0]) { } }
            public class TextUnderlineKo : Icon { public TextUnderlineKo() : base("TextUnderlineKo", IconVariant.Regular, TextUnderlineKoSizeAndContent.Values[0]) { } }
            public class TextUnderlineLt : Icon { public TextUnderlineLt() : base("TextUnderlineLt", IconVariant.Regular, TextUnderlineLtSizeAndContent.Values[0]) { } }
            public class TextUnderlineLv : Icon { public TextUnderlineLv() : base("TextUnderlineLv", IconVariant.Regular, TextUnderlineLvSizeAndContent.Values[0]) { } }
            public class TextUnderlinePt : Icon { public TextUnderlinePt() : base("TextUnderlinePt", IconVariant.Regular, TextUnderlinePtSizeAndContent.Values[0]) { } }
            public class TextUnderlineRu : Icon { public TextUnderlineRu() : base("TextUnderlineRu", IconVariant.Regular, TextUnderlineRuSizeAndContent.Values[0]) { } }
            public class TextUnderlineSl : Icon { public TextUnderlineSl() : base("TextUnderlineSl", IconVariant.Regular, TextUnderlineSlSizeAndContent.Values[0]) { } }
            public class TextWholeWord : Icon { public TextWholeWord() : base("TextWholeWord", IconVariant.Regular, TextWholeWordSizeAndContent.Values[0]) { } }
            public class TextWrap : Icon { public TextWrap() : base("TextWrap", IconVariant.Regular, TextWrapSizeAndContent.Values[0]) { } }
            public class TextWrapOff : Icon { public TextWrapOff() : base("TextWrapOff", IconVariant.Regular, TextWrapOffSizeAndContent.Values[0]) { } }
            public class ThumbDislike : Icon { public ThumbDislike() : base("ThumbDislike", IconVariant.Regular, ThumbDislikeSizeAndContent.Values[0]) { } }
            public class ThumbLike : Icon { public ThumbLike() : base("ThumbLike", IconVariant.Regular, ThumbLikeSizeAndContent.Values[0]) { } }
            public class ThumbLikeDislike : Icon { public ThumbLikeDislike() : base("ThumbLikeDislike", IconVariant.Regular, ThumbLikeDislikeSizeAndContent.Values[0]) { } }
            public class TicketDiagonal : Icon { public TicketDiagonal() : base("TicketDiagonal", IconVariant.Regular, TicketDiagonalSizeAndContent.Values[0]) { } }
            public class Timer : Icon { public Timer() : base("Timer", IconVariant.Regular, TimerSizeAndContent.Values[1]) { } }
            public class ToggleLeft : Icon { public ToggleLeft() : base("ToggleLeft", IconVariant.Regular, ToggleLeftSizeAndContent.Values[0]) { } }
            public class ToggleMultiple : Icon { public ToggleMultiple() : base("ToggleMultiple", IconVariant.Regular, ToggleMultipleSizeAndContent.Values[0]) { } }
            public class ToggleRight : Icon { public ToggleRight() : base("ToggleRight", IconVariant.Regular, ToggleRightSizeAndContent.Values[0]) { } }
            public class Toolbox : Icon { public Toolbox() : base("Toolbox", IconVariant.Regular, ToolboxSizeAndContent.Values[1]) { } }
            public class Translate : Icon { public Translate() : base("Translate", IconVariant.Regular, TranslateSizeAndContent.Values[0]) { } }
            public class TranslateAuto : Icon { public TranslateAuto() : base("TranslateAuto", IconVariant.Regular, TranslateAutoSizeAndContent.Values[0]) { } }
            public class TranslateOff : Icon { public TranslateOff() : base("TranslateOff", IconVariant.Regular, TranslateOffSizeAndContent.Values[0]) { } }
            public class Triangle : Icon { public Triangle() : base("Triangle", IconVariant.Regular, TriangleSizeAndContent.Values[1]) { } }
            public class TriangleDown : Icon { public TriangleDown() : base("TriangleDown", IconVariant.Regular, TriangleDownSizeAndContent.Values[1]) { } }
            public class TriangleLeft : Icon { public TriangleLeft() : base("TriangleLeft", IconVariant.Regular, TriangleLeftSizeAndContent.Values[1]) { } }
            public class TriangleRight : Icon { public TriangleRight() : base("TriangleRight", IconVariant.Regular, TriangleRightSizeAndContent.Values[1]) { } }
            public class Trophy : Icon { public Trophy() : base("Trophy", IconVariant.Regular, TrophySizeAndContent.Values[0]) { } }
            public class TrophyLock : Icon { public TrophyLock() : base("TrophyLock", IconVariant.Regular, TrophyLockSizeAndContent.Values[0]) { } }
            public class TrophyOff : Icon { public TrophyOff() : base("TrophyOff", IconVariant.Regular, TrophyOffSizeAndContent.Values[0]) { } }
            public class Tv : Icon { public Tv() : base("Tv", IconVariant.Regular, TvSizeAndContent.Values[0]) { } }
            public class TvUsb : Icon { public TvUsb() : base("TvUsb", IconVariant.Regular, TvUsbSizeAndContent.Values[0]) { } }
            public class Vault : Icon { public Vault() : base("Vault", IconVariant.Regular, VaultSizeAndContent.Values[0]) { } }
            public class VehicleBicycle : Icon { public VehicleBicycle() : base("VehicleBicycle", IconVariant.Regular, VehicleBicycleSizeAndContent.Values[0]) { } }
            public class VehicleBus : Icon { public VehicleBus() : base("VehicleBus", IconVariant.Regular, VehicleBusSizeAndContent.Values[0]) { } }
            public class VehicleCab : Icon { public VehicleCab() : base("VehicleCab", IconVariant.Regular, VehicleCabSizeAndContent.Values[0]) { } }
            public class VehicleCar : Icon { public VehicleCar() : base("VehicleCar", IconVariant.Regular, VehicleCarSizeAndContent.Values[0]) { } }
            public class VehicleCarCollision : Icon { public VehicleCarCollision() : base("VehicleCarCollision", IconVariant.Regular, VehicleCarCollisionSizeAndContent.Values[0]) { } }
            public class VehicleCarParking : Icon { public VehicleCarParking() : base("VehicleCarParking", IconVariant.Regular, VehicleCarParkingSizeAndContent.Values[0]) { } }
            public class VehicleCarProfile : Icon { public VehicleCarProfile() : base("VehicleCarProfile", IconVariant.Regular, VehicleCarProfileSizeAndContent.Values[0]) { } }
            public class VehicleCarProfileLtr : Icon { public VehicleCarProfileLtr() : base("VehicleCarProfileLtr", IconVariant.Regular, VehicleCarProfileLtrSizeAndContent.Values[0]) { } }
            public class VehicleCarProfileLtrClock : Icon { public VehicleCarProfileLtrClock() : base("VehicleCarProfileLtrClock", IconVariant.Regular, VehicleCarProfileLtrClockSizeAndContent.Values[0]) { } }
            public class VehicleCarProfileRtl : Icon { public VehicleCarProfileRtl() : base("VehicleCarProfileRtl", IconVariant.Regular, VehicleCarProfileRtlSizeAndContent.Values[0]) { } }
            public class VehicleShip : Icon { public VehicleShip() : base("VehicleShip", IconVariant.Regular, VehicleShipSizeAndContent.Values[0]) { } }
            public class VehicleSubway : Icon { public VehicleSubway() : base("VehicleSubway", IconVariant.Regular, VehicleSubwaySizeAndContent.Values[0]) { } }
            public class VehicleSubwayClock : Icon { public VehicleSubwayClock() : base("VehicleSubwayClock", IconVariant.Regular, VehicleSubwayClockSizeAndContent.Values[0]) { } }
            public class VehicleTruck : Icon { public VehicleTruck() : base("VehicleTruck", IconVariant.Regular, VehicleTruckSizeAndContent.Values[0]) { } }
            public class VehicleTruckProfile : Icon { public VehicleTruckProfile() : base("VehicleTruckProfile", IconVariant.Regular, VehicleTruckProfileSizeAndContent.Values[0]) { } }
            public class Video : Icon { public Video() : base("Video", IconVariant.Regular, VideoSizeAndContent.Values[0]) { } }
            public class VideoBackgroundEffect : Icon { public VideoBackgroundEffect() : base("VideoBackgroundEffect", IconVariant.Regular, VideoBackgroundEffectSizeAndContent.Values[0]) { } }
            public class VideoBackgroundEffectHorizontal : Icon { public VideoBackgroundEffectHorizontal() : base("VideoBackgroundEffectHorizontal", IconVariant.Regular, VideoBackgroundEffectHorizontalSizeAndContent.Values[0]) { } }
            public class VideoChat : Icon { public VideoChat() : base("VideoChat", IconVariant.Regular, VideoChatSizeAndContent.Values[0]) { } }
            public class VideoClip : Icon { public VideoClip() : base("VideoClip", IconVariant.Regular, VideoClipSizeAndContent.Values[0]) { } }
            public class VideoClipMultiple : Icon { public VideoClipMultiple() : base("VideoClipMultiple", IconVariant.Regular, VideoClipMultipleSizeAndContent.Values[0]) { } }
            public class VideoClipOff : Icon { public VideoClipOff() : base("VideoClipOff", IconVariant.Regular, VideoClipOffSizeAndContent.Values[0]) { } }
            public class VideoClipOptimize : Icon { public VideoClipOptimize() : base("VideoClipOptimize", IconVariant.Regular, VideoClipOptimizeSizeAndContent.Values[0]) { } }
            public class VideoPerson : Icon { public VideoPerson() : base("VideoPerson", IconVariant.Regular, VideoPersonSizeAndContent.Values[1]) { } }
            public class VideoPersonCall : Icon { public VideoPersonCall() : base("VideoPersonCall", IconVariant.Regular, VideoPersonCallSizeAndContent.Values[0]) { } }
            public class VideoPersonClock : Icon { public VideoPersonClock() : base("VideoPersonClock", IconVariant.Regular, VideoPersonClockSizeAndContent.Values[0]) { } }
            public class VideoPersonPulse : Icon { public VideoPersonPulse() : base("VideoPersonPulse", IconVariant.Regular, VideoPersonPulseSizeAndContent.Values[0]) { } }
            public class VideoPersonSparkle : Icon { public VideoPersonSparkle() : base("VideoPersonSparkle", IconVariant.Regular, VideoPersonSparkleSizeAndContent.Values[0]) { } }
            public class VideoProhibited : Icon { public VideoProhibited() : base("VideoProhibited", IconVariant.Regular, VideoProhibitedSizeAndContent.Values[0]) { } }
            public class Voicemail : Icon { public Voicemail() : base("Voicemail", IconVariant.Regular, VoicemailSizeAndContent.Values[0]) { } }
            public class VoicemailArrowBack : Icon { public VoicemailArrowBack() : base("VoicemailArrowBack", IconVariant.Regular, VoicemailArrowBackSizeAndContent.Values[0]) { } }
            public class VoicemailArrowForward : Icon { public VoicemailArrowForward() : base("VoicemailArrowForward", IconVariant.Regular, VoicemailArrowForwardSizeAndContent.Values[0]) { } }
            public class VoicemailShield : Icon { public VoicemailShield() : base("VoicemailShield", IconVariant.Regular, VoicemailShieldSizeAndContent.Values[0]) { } }
            public class VoicemailSubtract : Icon { public VoicemailSubtract() : base("VoicemailSubtract", IconVariant.Regular, VoicemailSubtractSizeAndContent.Values[0]) { } }
            public class Wallet : Icon { public Wallet() : base("Wallet", IconVariant.Regular, WalletSizeAndContent.Values[0]) { } }
            public class WalletCreditCard : Icon { public WalletCreditCard() : base("WalletCreditCard", IconVariant.Regular, WalletCreditCardSizeAndContent.Values[0]) { } }
            public class Wand : Icon { public Wand() : base("Wand", IconVariant.Regular, WandSizeAndContent.Values[0]) { } }
            public class Warning : Icon { public Warning() : base("Warning", IconVariant.Regular, WarningSizeAndContent.Values[1]) { } }
            public class Water : Icon { public Water() : base("Water", IconVariant.Regular, WaterSizeAndContent.Values[0]) { } }
            public class WeatherMoon : Icon { public WeatherMoon() : base("WeatherMoon", IconVariant.Regular, WeatherMoonSizeAndContent.Values[0]) { } }
            public class WeatherMoonOff : Icon { public WeatherMoonOff() : base("WeatherMoonOff", IconVariant.Regular, WeatherMoonOffSizeAndContent.Values[0]) { } }
            public class WeatherPartlyCloudyDay : Icon { public WeatherPartlyCloudyDay() : base("WeatherPartlyCloudyDay", IconVariant.Regular, WeatherPartlyCloudyDaySizeAndContent.Values[0]) { } }
            public class WeatherSunny : Icon { public WeatherSunny() : base("WeatherSunny", IconVariant.Regular, WeatherSunnySizeAndContent.Values[0]) { } }
            public class WebAsset : Icon { public WebAsset() : base("WebAsset", IconVariant.Regular, WebAssetSizeAndContent.Values[0]) { } }
            public class Whiteboard : Icon { public Whiteboard() : base("Whiteboard", IconVariant.Regular, WhiteboardSizeAndContent.Values[0]) { } }
            public class WhiteboardOff : Icon { public WhiteboardOff() : base("WhiteboardOff", IconVariant.Regular, WhiteboardOffSizeAndContent.Values[0]) { } }
            public class Window : Icon { public Window() : base("Window", IconVariant.Regular, WindowSizeAndContent.Values[0]) { } }
            public class WindowApps : Icon { public WindowApps() : base("WindowApps", IconVariant.Regular, WindowAppsSizeAndContent.Values[0]) { } }
            public class WindowArrowUp : Icon { public WindowArrowUp() : base("WindowArrowUp", IconVariant.Regular, WindowArrowUpSizeAndContent.Values[0]) { } }
            public class WindowDevEdit : Icon { public WindowDevEdit() : base("WindowDevEdit", IconVariant.Regular, WindowDevEditSizeAndContent.Values[0]) { } }
            public class WindowDevTools : Icon { public WindowDevTools() : base("WindowDevTools", IconVariant.Regular, WindowDevToolsSizeAndContent.Values[0]) { } }
            public class WindowEdit : Icon { public WindowEdit() : base("WindowEdit", IconVariant.Regular, WindowEditSizeAndContent.Values[0]) { } }
            public class WindowMultiple : Icon { public WindowMultiple() : base("WindowMultiple", IconVariant.Regular, WindowMultipleSizeAndContent.Values[0]) { } }
            public class WindowNew : Icon { public WindowNew() : base("WindowNew", IconVariant.Regular, WindowNewSizeAndContent.Values[0]) { } }
            public class WindowShield : Icon { public WindowShield() : base("WindowShield", IconVariant.Regular, WindowShieldSizeAndContent.Values[0]) { } }
            public class WindowWrench : Icon { public WindowWrench() : base("WindowWrench", IconVariant.Regular, WindowWrenchSizeAndContent.Values[0]) { } }
            public class Wrench : Icon { public Wrench() : base("Wrench", IconVariant.Regular, WrenchSizeAndContent.Values[0]) { } }
            public class XboxController : Icon { public XboxController() : base("XboxController", IconVariant.Regular, XboxControllerSizeAndContent.Values[0]) { } }
            public class ZoomFit : Icon { public ZoomFit() : base("ZoomFit", IconVariant.Regular, ZoomFitSizeAndContent.Values[0]) { } }
            public class ZoomIn : Icon { public ZoomIn() : base("ZoomIn", IconVariant.Regular, ZoomInSizeAndContent.Values[0]) { } }
            public class ZoomOut : Icon { public ZoomOut() : base("ZoomOut", IconVariant.Regular, ZoomOutSizeAndContent.Values[0]) { } }
        }
    }
}

#pragma warning restore 1591
