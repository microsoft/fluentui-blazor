// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

#pragma warning disable 1591

namespace Microsoft.FluentUI.AspNetCore.Components;

public static partial class Icons
{
    public static partial class Filled
    {
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public static partial class Size48
        {
            public class Accessibility : Icon { public Accessibility() : base("Accessibility", IconVariant.Filled, AccessibilitySizeAndContent.Values[5]) { } }
            public class AccessibilityCheckmark : Icon { public AccessibilityCheckmark() : base("AccessibilityCheckmark", IconVariant.Filled, AccessibilityCheckmarkSizeAndContent.Values[4]) { } }
            public class Add : Icon { public Add() : base("Add", IconVariant.Filled, AddSizeAndContent.Values[6]) { } }
            public class AddSquare : Icon { public AddSquare() : base("AddSquare", IconVariant.Filled, AddSquareSizeAndContent.Values[5]) { } }
            public class AddSubtractCircle : Icon { public AddSubtractCircle() : base("AddSubtractCircle", IconVariant.Filled, AddSubtractCircleSizeAndContent.Values[4]) { } }
            public class Alert : Icon { public Alert() : base("Alert", IconVariant.Filled, AlertSizeAndContent.Values[6]) { } }
            public class AlignBottom : Icon { public AlignBottom() : base("AlignBottom", IconVariant.Filled, AlignBottomSizeAndContent.Values[5]) { } }
            public class AlignCenterHorizontal : Icon { public AlignCenterHorizontal() : base("AlignCenterHorizontal", IconVariant.Filled, AlignCenterHorizontalSizeAndContent.Values[5]) { } }
            public class AlignCenterVertical : Icon { public AlignCenterVertical() : base("AlignCenterVertical", IconVariant.Filled, AlignCenterVerticalSizeAndContent.Values[5]) { } }
            public class AlignLeft : Icon { public AlignLeft() : base("AlignLeft", IconVariant.Filled, AlignLeftSizeAndContent.Values[5]) { } }
            public class AlignRight : Icon { public AlignRight() : base("AlignRight", IconVariant.Filled, AlignRightSizeAndContent.Values[5]) { } }
            public class AlignTop : Icon { public AlignTop() : base("AlignTop", IconVariant.Filled, AlignTopSizeAndContent.Values[5]) { } }
            public class AppFolder : Icon { public AppFolder() : base("AppFolder", IconVariant.Filled, AppFolderSizeAndContent.Values[5]) { } }
            public class AppGeneric : Icon { public AppGeneric() : base("AppGeneric", IconVariant.Filled, AppGenericSizeAndContent.Values[3]) { } }
            public class Apps : Icon { public Apps() : base("Apps", IconVariant.Filled, AppsSizeAndContent.Values[5]) { } }
            public class Archive : Icon { public Archive() : base("Archive", IconVariant.Filled, ArchiveSizeAndContent.Values[5]) { } }
            public class ArchiveArrowBack : Icon { public ArchiveArrowBack() : base("ArchiveArrowBack", IconVariant.Filled, ArchiveArrowBackSizeAndContent.Values[5]) { } }
            public class ArrowCircleDown : Icon { public ArrowCircleDown() : base("ArrowCircleDown", IconVariant.Filled, ArrowCircleDownSizeAndContent.Values[6]) { } }
            public class ArrowCircleLeft : Icon { public ArrowCircleLeft() : base("ArrowCircleLeft", IconVariant.Filled, ArrowCircleLeftSizeAndContent.Values[6]) { } }
            public class ArrowCircleRight : Icon { public ArrowCircleRight() : base("ArrowCircleRight", IconVariant.Filled, ArrowCircleRightSizeAndContent.Values[6]) { } }
            public class ArrowCircleUp : Icon { public ArrowCircleUp() : base("ArrowCircleUp", IconVariant.Filled, ArrowCircleUpSizeAndContent.Values[6]) { } }
            public class ArrowClockwise : Icon { public ArrowClockwise() : base("ArrowClockwise", IconVariant.Filled, ArrowClockwiseSizeAndContent.Values[6]) { } }
            public class ArrowCounterclockwise : Icon { public ArrowCounterclockwise() : base("ArrowCounterclockwise", IconVariant.Filled, ArrowCounterclockwiseSizeAndContent.Values[6]) { } }
            public class ArrowDown : Icon { public ArrowDown() : base("ArrowDown", IconVariant.Filled, ArrowDownSizeAndContent.Values[6]) { } }
            public class ArrowDownLeft : Icon { public ArrowDownLeft() : base("ArrowDownLeft", IconVariant.Filled, ArrowDownLeftSizeAndContent.Values[4]) { } }
            public class ArrowDownload : Icon { public ArrowDownload() : base("ArrowDownload", IconVariant.Filled, ArrowDownloadSizeAndContent.Values[5]) { } }
            public class ArrowDownloadOff : Icon { public ArrowDownloadOff() : base("ArrowDownloadOff", IconVariant.Filled, ArrowDownloadOffSizeAndContent.Values[5]) { } }
            public class ArrowForward : Icon { public ArrowForward() : base("ArrowForward", IconVariant.Filled, ArrowForwardSizeAndContent.Values[5]) { } }
            public class ArrowLeft : Icon { public ArrowLeft() : base("ArrowLeft", IconVariant.Filled, ArrowLeftSizeAndContent.Values[6]) { } }
            public class ArrowMaximize : Icon { public ArrowMaximize() : base("ArrowMaximize", IconVariant.Filled, ArrowMaximizeSizeAndContent.Values[5]) { } }
            public class ArrowMaximizeVertical : Icon { public ArrowMaximizeVertical() : base("ArrowMaximizeVertical", IconVariant.Filled, ArrowMaximizeVerticalSizeAndContent.Values[2]) { } }
            public class ArrowOutlineDownLeft : Icon { public ArrowOutlineDownLeft() : base("ArrowOutlineDownLeft", IconVariant.Filled, ArrowOutlineDownLeftSizeAndContent.Values[5]) { } }
            public class ArrowOutlineUpRight : Icon { public ArrowOutlineUpRight() : base("ArrowOutlineUpRight", IconVariant.Filled, ArrowOutlineUpRightSizeAndContent.Values[3]) { } }
            public class ArrowRedo : Icon { public ArrowRedo() : base("ArrowRedo", IconVariant.Filled, ArrowRedoSizeAndContent.Values[5]) { } }
            public class ArrowReply : Icon { public ArrowReply() : base("ArrowReply", IconVariant.Filled, ArrowReplySizeAndContent.Values[5]) { } }
            public class ArrowReplyAll : Icon { public ArrowReplyAll() : base("ArrowReplyAll", IconVariant.Filled, ArrowReplyAllSizeAndContent.Values[5]) { } }
            public class ArrowReset : Icon { public ArrowReset() : base("ArrowReset", IconVariant.Filled, ArrowResetSizeAndContent.Values[3]) { } }
            public class ArrowRight : Icon { public ArrowRight() : base("ArrowRight", IconVariant.Filled, ArrowRightSizeAndContent.Values[6]) { } }
            public class ArrowShuffle : Icon { public ArrowShuffle() : base("ArrowShuffle", IconVariant.Filled, ArrowShuffleSizeAndContent.Values[5]) { } }
            public class ArrowShuffleOff : Icon { public ArrowShuffleOff() : base("ArrowShuffleOff", IconVariant.Filled, ArrowShuffleOffSizeAndContent.Values[5]) { } }
            public class ArrowTurnDownLeft : Icon { public ArrowTurnDownLeft() : base("ArrowTurnDownLeft", IconVariant.Filled, ArrowTurnDownLeftSizeAndContent.Values[1]) { } }
            public class ArrowTurnDownRight : Icon { public ArrowTurnDownRight() : base("ArrowTurnDownRight", IconVariant.Filled, ArrowTurnDownRightSizeAndContent.Values[1]) { } }
            public class ArrowTurnDownUp : Icon { public ArrowTurnDownUp() : base("ArrowTurnDownUp", IconVariant.Filled, ArrowTurnDownUpSizeAndContent.Values[1]) { } }
            public class ArrowTurnLeftDown : Icon { public ArrowTurnLeftDown() : base("ArrowTurnLeftDown", IconVariant.Filled, ArrowTurnLeftDownSizeAndContent.Values[1]) { } }
            public class ArrowTurnLeftRight : Icon { public ArrowTurnLeftRight() : base("ArrowTurnLeftRight", IconVariant.Filled, ArrowTurnLeftRightSizeAndContent.Values[1]) { } }
            public class ArrowTurnLeftUp : Icon { public ArrowTurnLeftUp() : base("ArrowTurnLeftUp", IconVariant.Filled, ArrowTurnLeftUpSizeAndContent.Values[1]) { } }
            public class ArrowTurnRight : Icon { public ArrowTurnRight() : base("ArrowTurnRight", IconVariant.Filled, ArrowTurnRightSizeAndContent.Values[2]) { } }
            public class ArrowTurnRightDown : Icon { public ArrowTurnRightDown() : base("ArrowTurnRightDown", IconVariant.Filled, ArrowTurnRightDownSizeAndContent.Values[1]) { } }
            public class ArrowTurnRightLeft : Icon { public ArrowTurnRightLeft() : base("ArrowTurnRightLeft", IconVariant.Filled, ArrowTurnRightLeftSizeAndContent.Values[1]) { } }
            public class ArrowTurnRightUp : Icon { public ArrowTurnRightUp() : base("ArrowTurnRightUp", IconVariant.Filled, ArrowTurnRightUpSizeAndContent.Values[1]) { } }
            public class ArrowTurnUpDown : Icon { public ArrowTurnUpDown() : base("ArrowTurnUpDown", IconVariant.Filled, ArrowTurnUpDownSizeAndContent.Values[1]) { } }
            public class ArrowTurnUpLeft : Icon { public ArrowTurnUpLeft() : base("ArrowTurnUpLeft", IconVariant.Filled, ArrowTurnUpLeftSizeAndContent.Values[1]) { } }
            public class ArrowUndo : Icon { public ArrowUndo() : base("ArrowUndo", IconVariant.Filled, ArrowUndoSizeAndContent.Values[5]) { } }
            public class ArrowUp : Icon { public ArrowUp() : base("ArrowUp", IconVariant.Filled, ArrowUpSizeAndContent.Values[6]) { } }
            public class ArrowUpLeft : Icon { public ArrowUpLeft() : base("ArrowUpLeft", IconVariant.Filled, ArrowUpLeftSizeAndContent.Values[3]) { } }
            public class ArrowUpRight : Icon { public ArrowUpRight() : base("ArrowUpRight", IconVariant.Filled, ArrowUpRightSizeAndContent.Values[4]) { } }
            public class Backpack : Icon { public Backpack() : base("Backpack", IconVariant.Filled, BackpackSizeAndContent.Values[6]) { } }
            public class BackpackAdd : Icon { public BackpackAdd() : base("BackpackAdd", IconVariant.Filled, BackpackAddSizeAndContent.Values[3]) { } }
            public class Beach : Icon { public Beach() : base("Beach", IconVariant.Filled, BeachSizeAndContent.Values[5]) { } }
            public class Bluetooth : Icon { public Bluetooth() : base("Bluetooth", IconVariant.Filled, BluetoothSizeAndContent.Values[5]) { } }
            public class BoardSplit : Icon { public BoardSplit() : base("BoardSplit", IconVariant.Filled, BoardSplitSizeAndContent.Values[4]) { } }
            public class BookmarkMultiple : Icon { public BookmarkMultiple() : base("BookmarkMultiple", IconVariant.Filled, BookmarkMultipleSizeAndContent.Values[5]) { } }
            public class BookOpen : Icon { public BookOpen() : base("BookOpen", IconVariant.Filled, BookOpenSizeAndContent.Values[5]) { } }
            public class BookOpenMicrophone : Icon { public BookOpenMicrophone() : base("BookOpenMicrophone", IconVariant.Filled, BookOpenMicrophoneSizeAndContent.Values[4]) { } }
            public class Braces : Icon { public Braces() : base("Braces", IconVariant.Filled, BracesSizeAndContent.Values[5]) { } }
            public class BracesVariable : Icon { public BracesVariable() : base("BracesVariable", IconVariant.Filled, BracesVariableSizeAndContent.Values[2]) { } }
            public class Briefcase : Icon { public Briefcase() : base("Briefcase", IconVariant.Filled, BriefcaseSizeAndContent.Values[6]) { } }
            public class BriefcaseOff : Icon { public BriefcaseOff() : base("BriefcaseOff", IconVariant.Filled, BriefcaseOffSizeAndContent.Values[5]) { } }
            public class BrightnessHigh : Icon { public BrightnessHigh() : base("BrightnessHigh", IconVariant.Filled, BrightnessHighSizeAndContent.Values[5]) { } }
            public class BrightnessLow : Icon { public BrightnessLow() : base("BrightnessLow", IconVariant.Filled, BrightnessLowSizeAndContent.Values[5]) { } }
            public class Building : Icon { public Building() : base("Building", IconVariant.Filled, BuildingSizeAndContent.Values[4]) { } }
            public class BuildingBank : Icon { public BuildingBank() : base("BuildingBank", IconVariant.Filled, BuildingBankSizeAndContent.Values[4]) { } }
            public class BuildingBankLink : Icon { public BuildingBankLink() : base("BuildingBankLink", IconVariant.Filled, BuildingBankLinkSizeAndContent.Values[4]) { } }
            public class BuildingFactory : Icon { public BuildingFactory() : base("BuildingFactory", IconVariant.Filled, BuildingFactorySizeAndContent.Values[5]) { } }
            public class BuildingMosque : Icon { public BuildingMosque() : base("BuildingMosque", IconVariant.Filled, BuildingMosqueSizeAndContent.Values[6]) { } }
            public class BuildingSwap : Icon { public BuildingSwap() : base("BuildingSwap", IconVariant.Filled, BuildingSwapSizeAndContent.Values[4]) { } }
            public class Calendar : Icon { public Calendar() : base("Calendar", IconVariant.Filled, CalendarSizeAndContent.Values[6]) { } }
            public class CalendarArrowCounterclockwise : Icon { public CalendarArrowCounterclockwise() : base("CalendarArrowCounterclockwise", IconVariant.Filled, CalendarArrowCounterclockwiseSizeAndContent.Values[5]) { } }
            public class CalendarEmpty : Icon { public CalendarEmpty() : base("CalendarEmpty", IconVariant.Filled, CalendarEmptySizeAndContent.Values[5]) { } }
            public class CalendarLock : Icon { public CalendarLock() : base("CalendarLock", IconVariant.Filled, CalendarLockSizeAndContent.Values[5]) { } }
            public class CalendarLtr : Icon { public CalendarLtr() : base("CalendarLtr", IconVariant.Filled, CalendarLtrSizeAndContent.Values[6]) { } }
            public class CalendarRecord : Icon { public CalendarRecord() : base("CalendarRecord", IconVariant.Filled, CalendarRecordSizeAndContent.Values[5]) { } }
            public class CalendarRtl : Icon { public CalendarRtl() : base("CalendarRtl", IconVariant.Filled, CalendarRtlSizeAndContent.Values[6]) { } }
            public class CalendarSettings : Icon { public CalendarSettings() : base("CalendarSettings", IconVariant.Filled, CalendarSettingsSizeAndContent.Values[5]) { } }
            public class CalendarShield : Icon { public CalendarShield() : base("CalendarShield", IconVariant.Filled, CalendarShieldSizeAndContent.Values[5]) { } }
            public class Call : Icon { public Call() : base("Call", IconVariant.Filled, CallSizeAndContent.Values[6]) { } }
            public class CallEnd : Icon { public CallEnd() : base("CallEnd", IconVariant.Filled, CallEndSizeAndContent.Values[6]) { } }
            public class CallForward : Icon { public CallForward() : base("CallForward", IconVariant.Filled, CallForwardSizeAndContent.Values[5]) { } }
            public class CallInbound : Icon { public CallInbound() : base("CallInbound", IconVariant.Filled, CallInboundSizeAndContent.Values[4]) { } }
            public class CallMissed : Icon { public CallMissed() : base("CallMissed", IconVariant.Filled, CallMissedSizeAndContent.Values[5]) { } }
            public class CallOutbound : Icon { public CallOutbound() : base("CallOutbound", IconVariant.Filled, CallOutboundSizeAndContent.Values[4]) { } }
            public class CallPark : Icon { public CallPark() : base("CallPark", IconVariant.Filled, CallParkSizeAndContent.Values[5]) { } }
            public class CallProhibited : Icon { public CallProhibited() : base("CallProhibited", IconVariant.Filled, CallProhibitedSizeAndContent.Values[4]) { } }
            public class CameraAdd : Icon { public CameraAdd() : base("CameraAdd", IconVariant.Filled, CameraAddSizeAndContent.Values[2]) { } }
            public class CameraDome : Icon { public CameraDome() : base("CameraDome", IconVariant.Filled, CameraDomeSizeAndContent.Values[4]) { } }
            public class Channel : Icon { public Channel() : base("Channel", IconVariant.Filled, ChannelSizeAndContent.Values[4]) { } }
            public class ChannelAdd : Icon { public ChannelAdd() : base("ChannelAdd", IconVariant.Filled, ChannelAddSizeAndContent.Values[4]) { } }
            public class ChannelAlert : Icon { public ChannelAlert() : base("ChannelAlert", IconVariant.Filled, ChannelAlertSizeAndContent.Values[4]) { } }
            public class ChannelArrowLeft : Icon { public ChannelArrowLeft() : base("ChannelArrowLeft", IconVariant.Filled, ChannelArrowLeftSizeAndContent.Values[4]) { } }
            public class ChannelDismiss : Icon { public ChannelDismiss() : base("ChannelDismiss", IconVariant.Filled, ChannelDismissSizeAndContent.Values[4]) { } }
            public class ChannelShare : Icon { public ChannelShare() : base("ChannelShare", IconVariant.Filled, ChannelShareSizeAndContent.Values[5]) { } }
            public class ChannelSubtract : Icon { public ChannelSubtract() : base("ChannelSubtract", IconVariant.Filled, ChannelSubtractSizeAndContent.Values[4]) { } }
            public class ChartPerson : Icon { public ChartPerson() : base("ChartPerson", IconVariant.Filled, ChartPersonSizeAndContent.Values[3]) { } }
            public class Chat : Icon { public Chat() : base("Chat", IconVariant.Filled, ChatSizeAndContent.Values[6]) { } }
            public class ChatAdd : Icon { public ChatAdd() : base("ChatAdd", IconVariant.Filled, ChatAddSizeAndContent.Values[5]) { } }
            public class ChatEmpty : Icon { public ChatEmpty() : base("ChatEmpty", IconVariant.Filled, ChatEmptySizeAndContent.Values[6]) { } }
            public class ChatSparkle : Icon { public ChatSparkle() : base("ChatSparkle", IconVariant.Filled, ChatSparkleSizeAndContent.Values[5]) { } }
            public class Checkmark : Icon { public Checkmark() : base("Checkmark", IconVariant.Filled, CheckmarkSizeAndContent.Values[6]) { } }
            public class CheckmarkCircle : Icon { public CheckmarkCircle() : base("CheckmarkCircle", IconVariant.Filled, CheckmarkCircleSizeAndContent.Values[5]) { } }
            public class ChevronCircleDown : Icon { public ChevronCircleDown() : base("ChevronCircleDown", IconVariant.Filled, ChevronCircleDownSizeAndContent.Values[6]) { } }
            public class ChevronCircleLeft : Icon { public ChevronCircleLeft() : base("ChevronCircleLeft", IconVariant.Filled, ChevronCircleLeftSizeAndContent.Values[6]) { } }
            public class ChevronCircleRight : Icon { public ChevronCircleRight() : base("ChevronCircleRight", IconVariant.Filled, ChevronCircleRightSizeAndContent.Values[6]) { } }
            public class ChevronCircleUp : Icon { public ChevronCircleUp() : base("ChevronCircleUp", IconVariant.Filled, ChevronCircleUpSizeAndContent.Values[6]) { } }
            public class ChevronDown : Icon { public ChevronDown() : base("ChevronDown", IconVariant.Filled, ChevronDownSizeAndContent.Values[6]) { } }
            public class ChevronLeft : Icon { public ChevronLeft() : base("ChevronLeft", IconVariant.Filled, ChevronLeftSizeAndContent.Values[6]) { } }
            public class ChevronRight : Icon { public ChevronRight() : base("ChevronRight", IconVariant.Filled, ChevronRightSizeAndContent.Values[6]) { } }
            public class ChevronUp : Icon { public ChevronUp() : base("ChevronUp", IconVariant.Filled, ChevronUpSizeAndContent.Values[6]) { } }
            public class Circle : Icon { public Circle() : base("Circle", IconVariant.Filled, CircleSizeAndContent.Values[6]) { } }
            public class Clock : Icon { public Clock() : base("Clock", IconVariant.Filled, ClockSizeAndContent.Values[6]) { } }
            public class ClosedCaption : Icon { public ClosedCaption() : base("ClosedCaption", IconVariant.Filled, ClosedCaptionSizeAndContent.Values[5]) { } }
            public class ClosedCaptionOff : Icon { public ClosedCaptionOff() : base("ClosedCaptionOff", IconVariant.Filled, ClosedCaptionOffSizeAndContent.Values[4]) { } }
            public class Cloud : Icon { public Cloud() : base("Cloud", IconVariant.Filled, CloudSizeAndContent.Values[5]) { } }
            public class CloudArchive : Icon { public CloudArchive() : base("CloudArchive", IconVariant.Filled, CloudArchiveSizeAndContent.Values[5]) { } }
            public class CloudArrowDown : Icon { public CloudArrowDown() : base("CloudArrowDown", IconVariant.Filled, CloudArrowDownSizeAndContent.Values[5]) { } }
            public class CloudArrowUp : Icon { public CloudArrowUp() : base("CloudArrowUp", IconVariant.Filled, CloudArrowUpSizeAndContent.Values[5]) { } }
            public class CloudBeaker : Icon { public CloudBeaker() : base("CloudBeaker", IconVariant.Filled, CloudBeakerSizeAndContent.Values[5]) { } }
            public class CloudCheckmark : Icon { public CloudCheckmark() : base("CloudCheckmark", IconVariant.Filled, CloudCheckmarkSizeAndContent.Values[5]) { } }
            public class CloudCube : Icon { public CloudCube() : base("CloudCube", IconVariant.Filled, CloudCubeSizeAndContent.Values[5]) { } }
            public class CloudDismiss : Icon { public CloudDismiss() : base("CloudDismiss", IconVariant.Filled, CloudDismissSizeAndContent.Values[5]) { } }
            public class CloudError : Icon { public CloudError() : base("CloudError", IconVariant.Filled, CloudErrorSizeAndContent.Values[5]) { } }
            public class CloudOff : Icon { public CloudOff() : base("CloudOff", IconVariant.Filled, CloudOffSizeAndContent.Values[5]) { } }
            public class CloudSync : Icon { public CloudSync() : base("CloudSync", IconVariant.Filled, CloudSyncSizeAndContent.Values[5]) { } }
            public class CloudWords : Icon { public CloudWords() : base("CloudWords", IconVariant.Filled, CloudWordsSizeAndContent.Values[5]) { } }
            public class Clover : Icon { public Clover() : base("Clover", IconVariant.Filled, CloverSizeAndContent.Values[5]) { } }
            public class CodeBlock : Icon { public CodeBlock() : base("CodeBlock", IconVariant.Filled, CodeBlockSizeAndContent.Values[5]) { } }
            public class Comment : Icon { public Comment() : base("Comment", IconVariant.Filled, CommentSizeAndContent.Values[5]) { } }
            public class CommentAdd : Icon { public CommentAdd() : base("CommentAdd", IconVariant.Filled, CommentAddSizeAndContent.Values[5]) { } }
            public class CommentArrowLeft : Icon { public CommentArrowLeft() : base("CommentArrowLeft", IconVariant.Filled, CommentArrowLeftSizeAndContent.Values[5]) { } }
            public class CommentArrowRight : Icon { public CommentArrowRight() : base("CommentArrowRight", IconVariant.Filled, CommentArrowRightSizeAndContent.Values[5]) { } }
            public class CommentCheckmark : Icon { public CommentCheckmark() : base("CommentCheckmark", IconVariant.Filled, CommentCheckmarkSizeAndContent.Values[5]) { } }
            public class CommentLink : Icon { public CommentLink() : base("CommentLink", IconVariant.Filled, CommentLinkSizeAndContent.Values[4]) { } }
            public class CommentOff : Icon { public CommentOff() : base("CommentOff", IconVariant.Filled, CommentOffSizeAndContent.Values[4]) { } }
            public class ConferenceRoom : Icon { public ConferenceRoom() : base("ConferenceRoom", IconVariant.Filled, ConferenceRoomSizeAndContent.Values[4]) { } }
            public class ContactCard : Icon { public ContactCard() : base("ContactCard", IconVariant.Filled, ContactCardSizeAndContent.Values[5]) { } }
            public class ContactCardGroup : Icon { public ContactCardGroup() : base("ContactCardGroup", IconVariant.Filled, ContactCardGroupSizeAndContent.Values[4]) { } }
            public class ContactCardRibbon : Icon { public ContactCardRibbon() : base("ContactCardRibbon", IconVariant.Filled, ContactCardRibbonSizeAndContent.Values[5]) { } }
            public class ContractDownLeft : Icon { public ContractDownLeft() : base("ContractDownLeft", IconVariant.Filled, ContractDownLeftSizeAndContent.Values[5]) { } }
            public class ContractUpRight : Icon { public ContractUpRight() : base("ContractUpRight", IconVariant.Filled, ContractUpRightSizeAndContent.Values[5]) { } }
            public class Couch : Icon { public Couch() : base("Couch", IconVariant.Filled, CouchSizeAndContent.Values[4]) { } }
            public class Crop : Icon { public Crop() : base("Crop", IconVariant.Filled, CropSizeAndContent.Values[5]) { } }
            public class Cube : Icon { public Cube() : base("Cube", IconVariant.Filled, CubeSizeAndContent.Values[5]) { } }
            public class CursorHover : Icon { public CursorHover() : base("CursorHover", IconVariant.Filled, CursorHoverSizeAndContent.Values[5]) { } }
            public class CursorHoverOff : Icon { public CursorHoverOff() : base("CursorHoverOff", IconVariant.Filled, CursorHoverOffSizeAndContent.Values[4]) { } }
            public class Database : Icon { public Database() : base("Database", IconVariant.Filled, DatabaseSizeAndContent.Values[4]) { } }
            public class DataTrending : Icon { public DataTrending() : base("DataTrending", IconVariant.Filled, DataTrendingSizeAndContent.Values[5]) { } }
            public class Delete : Icon { public Delete() : base("Delete", IconVariant.Filled, DeleteSizeAndContent.Values[6]) { } }
            public class Dentist : Icon { public Dentist() : base("Dentist", IconVariant.Filled, DentistSizeAndContent.Values[5]) { } }
            public class Desk : Icon { public Desk() : base("Desk", IconVariant.Filled, DeskSizeAndContent.Values[5]) { } }
            public class DesktopPulse : Icon { public DesktopPulse() : base("DesktopPulse", IconVariant.Filled, DesktopPulseSizeAndContent.Values[5]) { } }
            public class DeviceMeetingRoom : Icon { public DeviceMeetingRoom() : base("DeviceMeetingRoom", IconVariant.Filled, DeviceMeetingRoomSizeAndContent.Values[5]) { } }
            public class DeviceMeetingRoomRemote : Icon { public DeviceMeetingRoomRemote() : base("DeviceMeetingRoomRemote", IconVariant.Filled, DeviceMeetingRoomRemoteSizeAndContent.Values[5]) { } }
            public class Dialpad : Icon { public Dialpad() : base("Dialpad", IconVariant.Filled, DialpadSizeAndContent.Values[4]) { } }
            public class Diamond : Icon { public Diamond() : base("Diamond", IconVariant.Filled, DiamondSizeAndContent.Values[5]) { } }
            public class Dishwasher : Icon { public Dishwasher() : base("Dishwasher", IconVariant.Filled, DishwasherSizeAndContent.Values[3]) { } }
            public class Dismiss : Icon { public Dismiss() : base("Dismiss", IconVariant.Filled, DismissSizeAndContent.Values[6]) { } }
            public class DismissCircle : Icon { public DismissCircle() : base("DismissCircle", IconVariant.Filled, DismissCircleSizeAndContent.Values[6]) { } }
            public class Diversity : Icon { public Diversity() : base("Diversity", IconVariant.Filled, DiversitySizeAndContent.Values[4]) { } }
            public class Doctor : Icon { public Doctor() : base("Doctor", IconVariant.Filled, DoctorSizeAndContent.Values[5]) { } }
            public class Document : Icon { public Document() : base("Document", IconVariant.Filled, DocumentSizeAndContent.Values[5]) { } }
            public class DocumentAdd : Icon { public DocumentAdd() : base("DocumentAdd", IconVariant.Filled, DocumentAddSizeAndContent.Values[4]) { } }
            public class DocumentArrowLeft : Icon { public DocumentArrowLeft() : base("DocumentArrowLeft", IconVariant.Filled, DocumentArrowLeftSizeAndContent.Values[4]) { } }
            public class DocumentCopy : Icon { public DocumentCopy() : base("DocumentCopy", IconVariant.Filled, DocumentCopySizeAndContent.Values[3]) { } }
            public class DocumentLightning : Icon { public DocumentLightning() : base("DocumentLightning", IconVariant.Filled, DocumentLightningSizeAndContent.Values[5]) { } }
            public class DocumentLock : Icon { public DocumentLock() : base("DocumentLock", IconVariant.Filled, DocumentLockSizeAndContent.Values[5]) { } }
            public class DocumentMention : Icon { public DocumentMention() : base("DocumentMention", IconVariant.Filled, DocumentMentionSizeAndContent.Values[4]) { } }
            public class DocumentPrint : Icon { public DocumentPrint() : base("DocumentPrint", IconVariant.Filled, DocumentPrintSizeAndContent.Values[4]) { } }
            public class DocumentRibbon : Icon { public DocumentRibbon() : base("DocumentRibbon", IconVariant.Filled, DocumentRibbonSizeAndContent.Values[5]) { } }
            public class Drop : Icon { public Drop() : base("Drop", IconVariant.Filled, DropSizeAndContent.Values[5]) { } }
            public class Earth : Icon { public Earth() : base("Earth", IconVariant.Filled, EarthSizeAndContent.Values[4]) { } }
            public class EarthLeaf : Icon { public EarthLeaf() : base("EarthLeaf", IconVariant.Filled, EarthLeafSizeAndContent.Values[4]) { } }
            public class Edit : Icon { public Edit() : base("Edit", IconVariant.Filled, EditSizeAndContent.Values[6]) { } }
            public class EditOff : Icon { public EditOff() : base("EditOff", IconVariant.Filled, EditOffSizeAndContent.Values[5]) { } }
            public class EditProhibited : Icon { public EditProhibited() : base("EditProhibited", IconVariant.Filled, EditProhibitedSizeAndContent.Values[5]) { } }
            public class Elevator : Icon { public Elevator() : base("Elevator", IconVariant.Filled, ElevatorSizeAndContent.Values[3]) { } }
            public class Emoji : Icon { public Emoji() : base("Emoji", IconVariant.Filled, EmojiSizeAndContent.Values[5]) { } }
            public class EmojiEdit : Icon { public EmojiEdit() : base("EmojiEdit", IconVariant.Filled, EmojiEditSizeAndContent.Values[4]) { } }
            public class EmojiHand : Icon { public EmojiHand() : base("EmojiHand", IconVariant.Filled, EmojiHandSizeAndContent.Values[5]) { } }
            public class EmojiHint : Icon { public EmojiHint() : base("EmojiHint", IconVariant.Filled, EmojiHintSizeAndContent.Values[5]) { } }
            public class EmojiSparkle : Icon { public EmojiSparkle() : base("EmojiSparkle", IconVariant.Filled, EmojiSparkleSizeAndContent.Values[5]) { } }
            public class ErrorCircle : Icon { public ErrorCircle() : base("ErrorCircle", IconVariant.Filled, ErrorCircleSizeAndContent.Values[4]) { } }
            public class ExpandUpLeft : Icon { public ExpandUpLeft() : base("ExpandUpLeft", IconVariant.Filled, ExpandUpLeftSizeAndContent.Values[5]) { } }
            public class ExpandUpRight : Icon { public ExpandUpRight() : base("ExpandUpRight", IconVariant.Filled, ExpandUpRightSizeAndContent.Values[5]) { } }
            public class Eye : Icon { public Eye() : base("Eye", IconVariant.Filled, EyeSizeAndContent.Values[6]) { } }
            public class EyeLines : Icon { public EyeLines() : base("EyeLines", IconVariant.Filled, EyeLinesSizeAndContent.Values[4]) { } }
            public class Feed : Icon { public Feed() : base("Feed", IconVariant.Filled, FeedSizeAndContent.Values[5]) { } }
            public class Filmstrip : Icon { public Filmstrip() : base("Filmstrip", IconVariant.Filled, FilmstripSizeAndContent.Values[4]) { } }
            public class FilmstripOff : Icon { public FilmstripOff() : base("FilmstripOff", IconVariant.Filled, FilmstripOffSizeAndContent.Values[0]) { } }
            public class Fingerprint : Icon { public Fingerprint() : base("Fingerprint", IconVariant.Filled, FingerprintSizeAndContent.Values[4]) { } }
            public class Fireplace : Icon { public Fireplace() : base("Fireplace", IconVariant.Filled, FireplaceSizeAndContent.Values[3]) { } }
            public class Flag : Icon { public Flag() : base("Flag", IconVariant.Filled, FlagSizeAndContent.Values[5]) { } }
            public class FlagClock : Icon { public FlagClock() : base("FlagClock", IconVariant.Filled, FlagClockSizeAndContent.Values[5]) { } }
            public class FlagOff : Icon { public FlagOff() : base("FlagOff", IconVariant.Filled, FlagOffSizeAndContent.Values[4]) { } }
            public class FlagPride : Icon { public FlagPride() : base("FlagPride", IconVariant.Filled, FlagPrideSizeAndContent.Values[5]) { } }
            public class FlagPrideIntersexInclusiveProgress : Icon { public FlagPrideIntersexInclusiveProgress() : base("FlagPrideIntersexInclusiveProgress", IconVariant.Filled, FlagPrideIntersexInclusiveProgressSizeAndContent.Values[5]) { } }
            public class FlagPridePhiladelphia : Icon { public FlagPridePhiladelphia() : base("FlagPridePhiladelphia", IconVariant.Filled, FlagPridePhiladelphiaSizeAndContent.Values[5]) { } }
            public class FlagPrideProgress : Icon { public FlagPrideProgress() : base("FlagPrideProgress", IconVariant.Filled, FlagPrideProgressSizeAndContent.Values[5]) { } }
            public class FlipHorizontal : Icon { public FlipHorizontal() : base("FlipHorizontal", IconVariant.Filled, FlipHorizontalSizeAndContent.Values[5]) { } }
            public class FlipVertical : Icon { public FlipVertical() : base("FlipVertical", IconVariant.Filled, FlipVerticalSizeAndContent.Values[5]) { } }
            public class Fluent : Icon { public Fluent() : base("Fluent", IconVariant.Filled, FluentSizeAndContent.Values[3]) { } }
            public class Folder : Icon { public Folder() : base("Folder", IconVariant.Filled, FolderSizeAndContent.Values[5]) { } }
            public class FolderAdd : Icon { public FolderAdd() : base("FolderAdd", IconVariant.Filled, FolderAddSizeAndContent.Values[5]) { } }
            public class FolderArrowLeft : Icon { public FolderArrowLeft() : base("FolderArrowLeft", IconVariant.Filled, FolderArrowLeftSizeAndContent.Values[5]) { } }
            public class FolderArrowRight : Icon { public FolderArrowRight() : base("FolderArrowRight", IconVariant.Filled, FolderArrowRightSizeAndContent.Values[5]) { } }
            public class FolderArrowUp : Icon { public FolderArrowUp() : base("FolderArrowUp", IconVariant.Filled, FolderArrowUpSizeAndContent.Values[5]) { } }
            public class FolderLink : Icon { public FolderLink() : base("FolderLink", IconVariant.Filled, FolderLinkSizeAndContent.Values[5]) { } }
            public class FolderPerson : Icon { public FolderPerson() : base("FolderPerson", IconVariant.Filled, FolderPersonSizeAndContent.Values[5]) { } }
            public class FolderProhibited : Icon { public FolderProhibited() : base("FolderProhibited", IconVariant.Filled, FolderProhibitedSizeAndContent.Values[5]) { } }
            public class Form : Icon { public Form() : base("Form", IconVariant.Filled, FormSizeAndContent.Values[3]) { } }
            public class FormMultiple : Icon { public FormMultiple() : base("FormMultiple", IconVariant.Filled, FormMultipleSizeAndContent.Values[3]) { } }
            public class FormNew : Icon { public FormNew() : base("FormNew", IconVariant.Filled, FormNewSizeAndContent.Values[3]) { } }
            public class Fps30 : Icon { public Fps30() : base("Fps30", IconVariant.Filled, Fps30SizeAndContent.Values[4]) { } }
            public class Fps60 : Icon { public Fps60() : base("Fps60", IconVariant.Filled, Fps60SizeAndContent.Values[4]) { } }
            public class Games : Icon { public Games() : base("Games", IconVariant.Filled, GamesSizeAndContent.Values[5]) { } }
            public class Glasses : Icon { public Glasses() : base("Glasses", IconVariant.Filled, GlassesSizeAndContent.Values[5]) { } }
            public class GlassesOff : Icon { public GlassesOff() : base("GlassesOff", IconVariant.Filled, GlassesOffSizeAndContent.Values[5]) { } }
            public class Globe : Icon { public Globe() : base("Globe", IconVariant.Filled, GlobeSizeAndContent.Values[5]) { } }
            public class GlobeShield : Icon { public GlobeShield() : base("GlobeShield", IconVariant.Filled, GlobeShieldSizeAndContent.Values[2]) { } }
            public class GlobeVideo : Icon { public GlobeVideo() : base("GlobeVideo", IconVariant.Filled, GlobeVideoSizeAndContent.Values[4]) { } }
            public class Guardian : Icon { public Guardian() : base("Guardian", IconVariant.Filled, GuardianSizeAndContent.Values[3]) { } }
            public class Headphones : Icon { public Headphones() : base("Headphones", IconVariant.Filled, HeadphonesSizeAndContent.Values[4]) { } }
            public class HeadphonesSoundWave : Icon { public HeadphonesSoundWave() : base("HeadphonesSoundWave", IconVariant.Filled, HeadphonesSoundWaveSizeAndContent.Values[4]) { } }
            public class Headset : Icon { public Headset() : base("Headset", IconVariant.Filled, HeadsetSizeAndContent.Values[5]) { } }
            public class Heart : Icon { public Heart() : base("Heart", IconVariant.Filled, HeartSizeAndContent.Values[6]) { } }
            public class HeartCircleHint : Icon { public HeartCircleHint() : base("HeartCircleHint", IconVariant.Filled, HeartCircleHintSizeAndContent.Values[5]) { } }
            public class Hexagon : Icon { public Hexagon() : base("Hexagon", IconVariant.Filled, HexagonSizeAndContent.Values[6]) { } }
            public class History : Icon { public History() : base("History", IconVariant.Filled, HistorySizeAndContent.Values[5]) { } }
            public class HistoryDismiss : Icon { public HistoryDismiss() : base("HistoryDismiss", IconVariant.Filled, HistoryDismissSizeAndContent.Values[4]) { } }
            public class Home : Icon { public Home() : base("Home", IconVariant.Filled, HomeSizeAndContent.Values[6]) { } }
            public class HomeMore : Icon { public HomeMore() : base("HomeMore", IconVariant.Filled, HomeMoreSizeAndContent.Values[3]) { } }
            public class HomeSplit : Icon { public HomeSplit() : base("HomeSplit", IconVariant.Filled, HomeSplitSizeAndContent.Values[3]) { } }
            public class Image : Icon { public Image() : base("Image", IconVariant.Filled, ImageSizeAndContent.Values[5]) { } }
            public class ImageBorder : Icon { public ImageBorder() : base("ImageBorder", IconVariant.Filled, ImageBorderSizeAndContent.Values[5]) { } }
            public class ImageCircle : Icon { public ImageCircle() : base("ImageCircle", IconVariant.Filled, ImageCircleSizeAndContent.Values[5]) { } }
            public class ImageMultiple : Icon { public ImageMultiple() : base("ImageMultiple", IconVariant.Filled, ImageMultipleSizeAndContent.Values[5]) { } }
            public class ImageOff : Icon { public ImageOff() : base("ImageOff", IconVariant.Filled, ImageOffSizeAndContent.Values[4]) { } }
            public class ImageTable : Icon { public ImageTable() : base("ImageTable", IconVariant.Filled, ImageTableSizeAndContent.Values[5]) { } }
            public class Info : Icon { public Info() : base("Info", IconVariant.Filled, InfoSizeAndContent.Values[6]) { } }
            public class LeafTwo : Icon { public LeafTwo() : base("LeafTwo", IconVariant.Filled, LeafTwoSizeAndContent.Values[4]) { } }
            public class Lightbulb : Icon { public Lightbulb() : base("Lightbulb", IconVariant.Filled, LightbulbSizeAndContent.Values[5]) { } }
            public class LightbulbFilament : Icon { public LightbulbFilament() : base("LightbulbFilament", IconVariant.Filled, LightbulbFilamentSizeAndContent.Values[4]) { } }
            public class LightbulbPerson : Icon { public LightbulbPerson() : base("LightbulbPerson", IconVariant.Filled, LightbulbPersonSizeAndContent.Values[5]) { } }
            public class Line : Icon { public Line() : base("Line", IconVariant.Filled, LineSizeAndContent.Values[3]) { } }
            public class LineDashes : Icon { public LineDashes() : base("LineDashes", IconVariant.Filled, LineDashesSizeAndContent.Values[3]) { } }
            public class Link : Icon { public Link() : base("Link", IconVariant.Filled, LinkSizeAndContent.Values[6]) { } }
            public class LinkPerson : Icon { public LinkPerson() : base("LinkPerson", IconVariant.Filled, LinkPersonSizeAndContent.Values[4]) { } }
            public class Location : Icon { public Location() : base("Location", IconVariant.Filled, LocationSizeAndContent.Values[5]) { } }
            public class LocationArrow : Icon { public LocationArrow() : base("LocationArrow", IconVariant.Filled, LocationArrowSizeAndContent.Values[6]) { } }
            public class LocationArrowLeft : Icon { public LocationArrowLeft() : base("LocationArrowLeft", IconVariant.Filled, LocationArrowLeftSizeAndContent.Values[2]) { } }
            public class LocationArrowRight : Icon { public LocationArrowRight() : base("LocationArrowRight", IconVariant.Filled, LocationArrowRightSizeAndContent.Values[2]) { } }
            public class LocationArrowUp : Icon { public LocationArrowUp() : base("LocationArrowUp", IconVariant.Filled, LocationArrowUpSizeAndContent.Values[2]) { } }
            public class LocationOff : Icon { public LocationOff() : base("LocationOff", IconVariant.Filled, LocationOffSizeAndContent.Values[4]) { } }
            public class LockClosed : Icon { public LockClosed() : base("LockClosed", IconVariant.Filled, LockClosedSizeAndContent.Values[6]) { } }
            public class LockOpen : Icon { public LockOpen() : base("LockOpen", IconVariant.Filled, LockOpenSizeAndContent.Values[6]) { } }
            public class LockShield : Icon { public LockShield() : base("LockShield", IconVariant.Filled, LockShieldSizeAndContent.Values[5]) { } }
            public class Luggage : Icon { public Luggage() : base("Luggage", IconVariant.Filled, LuggageSizeAndContent.Values[5]) { } }
            public class Mail : Icon { public Mail() : base("Mail", IconVariant.Filled, MailSizeAndContent.Values[6]) { } }
            public class MailRead : Icon { public MailRead() : base("MailRead", IconVariant.Filled, MailReadSizeAndContent.Values[5]) { } }
            public class MailUnread : Icon { public MailUnread() : base("MailUnread", IconVariant.Filled, MailUnreadSizeAndContent.Values[6]) { } }
            public class MathSymbols : Icon { public MathSymbols() : base("MathSymbols", IconVariant.Filled, MathSymbolsSizeAndContent.Values[5]) { } }
            public class Maximize : Icon { public Maximize() : base("Maximize", IconVariant.Filled, MaximizeSizeAndContent.Values[4]) { } }
            public class MeetNow : Icon { public MeetNow() : base("MeetNow", IconVariant.Filled, MeetNowSizeAndContent.Values[5]) { } }
            public class Mention : Icon { public Mention() : base("Mention", IconVariant.Filled, MentionSizeAndContent.Values[5]) { } }
            public class Mic : Icon { public Mic() : base("Mic", IconVariant.Filled, MicSizeAndContent.Values[5]) { } }
            public class MicOff : Icon { public MicOff() : base("MicOff", IconVariant.Filled, MicOffSizeAndContent.Values[6]) { } }
            public class MicProhibited : Icon { public MicProhibited() : base("MicProhibited", IconVariant.Filled, MicProhibitedSizeAndContent.Values[4]) { } }
            public class MicPulse : Icon { public MicPulse() : base("MicPulse", IconVariant.Filled, MicPulseSizeAndContent.Values[5]) { } }
            public class MicPulseOff : Icon { public MicPulseOff() : base("MicPulseOff", IconVariant.Filled, MicPulseOffSizeAndContent.Values[5]) { } }
            public class Molecule : Icon { public Molecule() : base("Molecule", IconVariant.Filled, MoleculeSizeAndContent.Values[5]) { } }
            public class MoreCircle : Icon { public MoreCircle() : base("MoreCircle", IconVariant.Filled, MoreCircleSizeAndContent.Values[5]) { } }
            public class MoreHorizontal : Icon { public MoreHorizontal() : base("MoreHorizontal", IconVariant.Filled, MoreHorizontalSizeAndContent.Values[5]) { } }
            public class MoreVertical : Icon { public MoreVertical() : base("MoreVertical", IconVariant.Filled, MoreVerticalSizeAndContent.Values[5]) { } }
            public class Multiplier12x : Icon { public Multiplier12x() : base("Multiplier12x", IconVariant.Filled, Multiplier12xSizeAndContent.Values[4]) { } }
            public class Multiplier15x : Icon { public Multiplier15x() : base("Multiplier15x", IconVariant.Filled, Multiplier15xSizeAndContent.Values[4]) { } }
            public class Multiplier18x : Icon { public Multiplier18x() : base("Multiplier18x", IconVariant.Filled, Multiplier18xSizeAndContent.Values[4]) { } }
            public class Multiplier1x : Icon { public Multiplier1x() : base("Multiplier1x", IconVariant.Filled, Multiplier1xSizeAndContent.Values[4]) { } }
            public class Multiplier2x : Icon { public Multiplier2x() : base("Multiplier2x", IconVariant.Filled, Multiplier2xSizeAndContent.Values[4]) { } }
            public class Multiplier5x : Icon { public Multiplier5x() : base("Multiplier5x", IconVariant.Filled, Multiplier5xSizeAndContent.Values[4]) { } }
            public class Next : Icon { public Next() : base("Next", IconVariant.Filled, NextSizeAndContent.Values[5]) { } }
            public class Note : Icon { public Note() : base("Note", IconVariant.Filled, NoteSizeAndContent.Values[4]) { } }
            public class NoteAdd : Icon { public NoteAdd() : base("NoteAdd", IconVariant.Filled, NoteAddSizeAndContent.Values[4]) { } }
            public class NumberCircle0 : Icon { public NumberCircle0() : base("NumberCircle0", IconVariant.Filled, NumberCircle0SizeAndContent.Values[5]) { } }
            public class NumberCircle1 : Icon { public NumberCircle1() : base("NumberCircle1", IconVariant.Filled, NumberCircle1SizeAndContent.Values[5]) { } }
            public class NumberCircle2 : Icon { public NumberCircle2() : base("NumberCircle2", IconVariant.Filled, NumberCircle2SizeAndContent.Values[5]) { } }
            public class NumberCircle3 : Icon { public NumberCircle3() : base("NumberCircle3", IconVariant.Filled, NumberCircle3SizeAndContent.Values[5]) { } }
            public class NumberCircle4 : Icon { public NumberCircle4() : base("NumberCircle4", IconVariant.Filled, NumberCircle4SizeAndContent.Values[5]) { } }
            public class NumberCircle5 : Icon { public NumberCircle5() : base("NumberCircle5", IconVariant.Filled, NumberCircle5SizeAndContent.Values[5]) { } }
            public class NumberCircle6 : Icon { public NumberCircle6() : base("NumberCircle6", IconVariant.Filled, NumberCircle6SizeAndContent.Values[5]) { } }
            public class NumberCircle7 : Icon { public NumberCircle7() : base("NumberCircle7", IconVariant.Filled, NumberCircle7SizeAndContent.Values[5]) { } }
            public class NumberCircle8 : Icon { public NumberCircle8() : base("NumberCircle8", IconVariant.Filled, NumberCircle8SizeAndContent.Values[5]) { } }
            public class NumberCircle9 : Icon { public NumberCircle9() : base("NumberCircle9", IconVariant.Filled, NumberCircle9SizeAndContent.Values[5]) { } }
            public class NumberSymbol : Icon { public NumberSymbol() : base("NumberSymbol", IconVariant.Filled, NumberSymbolSizeAndContent.Values[5]) { } }
            public class Open : Icon { public Open() : base("Open", IconVariant.Filled, OpenSizeAndContent.Values[6]) { } }
            public class OpenFolder : Icon { public OpenFolder() : base("OpenFolder", IconVariant.Filled, OpenFolderSizeAndContent.Values[4]) { } }
            public class OpenOff : Icon { public OpenOff() : base("OpenOff", IconVariant.Filled, OpenOffSizeAndContent.Values[4]) { } }
            public class Options : Icon { public Options() : base("Options", IconVariant.Filled, OptionsSizeAndContent.Values[3]) { } }
            public class Organization : Icon { public Organization() : base("Organization", IconVariant.Filled, OrganizationSizeAndContent.Values[6]) { } }
            public class Oval : Icon { public Oval() : base("Oval", IconVariant.Filled, OvalSizeAndContent.Values[5]) { } }
            public class Oven : Icon { public Oven() : base("Oven", IconVariant.Filled, OvenSizeAndContent.Values[3]) { } }
            public class PanelLeft : Icon { public PanelLeft() : base("PanelLeft", IconVariant.Filled, PanelLeftSizeAndContent.Values[5]) { } }
            public class PanelLeftAdd : Icon { public PanelLeftAdd() : base("PanelLeftAdd", IconVariant.Filled, PanelLeftAddSizeAndContent.Values[5]) { } }
            public class PanelLeftHeader : Icon { public PanelLeftHeader() : base("PanelLeftHeader", IconVariant.Filled, PanelLeftHeaderSizeAndContent.Values[5]) { } }
            public class PanelLeftHeaderAdd : Icon { public PanelLeftHeaderAdd() : base("PanelLeftHeaderAdd", IconVariant.Filled, PanelLeftHeaderAddSizeAndContent.Values[5]) { } }
            public class PanelLeftText : Icon { public PanelLeftText() : base("PanelLeftText", IconVariant.Filled, PanelLeftTextSizeAndContent.Values[5]) { } }
            public class PanelLeftTextAdd : Icon { public PanelLeftTextAdd() : base("PanelLeftTextAdd", IconVariant.Filled, PanelLeftTextAddSizeAndContent.Values[5]) { } }
            public class PanelLeftTextDismiss : Icon { public PanelLeftTextDismiss() : base("PanelLeftTextDismiss", IconVariant.Filled, PanelLeftTextDismissSizeAndContent.Values[5]) { } }
            public class PanelRight : Icon { public PanelRight() : base("PanelRight", IconVariant.Filled, PanelRightSizeAndContent.Values[5]) { } }
            public class Pause : Icon { public Pause() : base("Pause", IconVariant.Filled, PauseSizeAndContent.Values[6]) { } }
            public class PauseCircle : Icon { public PauseCircle() : base("PauseCircle", IconVariant.Filled, PauseCircleSizeAndContent.Values[3]) { } }
            public class Payment : Icon { public Payment() : base("Payment", IconVariant.Filled, PaymentSizeAndContent.Values[5]) { } }
            public class Pen : Icon { public Pen() : base("Pen", IconVariant.Filled, PenSizeAndContent.Values[5]) { } }
            public class PenDismiss : Icon { public PenDismiss() : base("PenDismiss", IconVariant.Filled, PenDismissSizeAndContent.Values[5]) { } }
            public class PenOff : Icon { public PenOff() : base("PenOff", IconVariant.Filled, PenOffSizeAndContent.Values[5]) { } }
            public class PenProhibited : Icon { public PenProhibited() : base("PenProhibited", IconVariant.Filled, PenProhibitedSizeAndContent.Values[5]) { } }
            public class PenSparkle : Icon { public PenSparkle() : base("PenSparkle", IconVariant.Filled, PenSparkleSizeAndContent.Values[5]) { } }
            public class Pentagon : Icon { public Pentagon() : base("Pentagon", IconVariant.Filled, PentagonSizeAndContent.Values[2]) { } }
            public class People : Icon { public People() : base("People", IconVariant.Filled, PeopleSizeAndContent.Values[6]) { } }
            public class PeopleCommunity : Icon { public PeopleCommunity() : base("PeopleCommunity", IconVariant.Filled, PeopleCommunitySizeAndContent.Values[5]) { } }
            public class PeopleStar : Icon { public PeopleStar() : base("PeopleStar", IconVariant.Filled, PeopleStarSizeAndContent.Values[5]) { } }
            public class PeopleTeam : Icon { public PeopleTeam() : base("PeopleTeam", IconVariant.Filled, PeopleTeamSizeAndContent.Values[5]) { } }
            public class Person : Icon { public Person() : base("Person", IconVariant.Filled, PersonSizeAndContent.Values[6]) { } }
            public class PersonArrowBack : Icon { public PersonArrowBack() : base("PersonArrowBack", IconVariant.Filled, PersonArrowBackSizeAndContent.Values[5]) { } }
            public class PersonEdit : Icon { public PersonEdit() : base("PersonEdit", IconVariant.Filled, PersonEditSizeAndContent.Values[2]) { } }
            public class PersonFeedback : Icon { public PersonFeedback() : base("PersonFeedback", IconVariant.Filled, PersonFeedbackSizeAndContent.Values[5]) { } }
            public class PersonLink : Icon { public PersonLink() : base("PersonLink", IconVariant.Filled, PersonLinkSizeAndContent.Values[5]) { } }
            public class PersonMail : Icon { public PersonMail() : base("PersonMail", IconVariant.Filled, PersonMailSizeAndContent.Values[4]) { } }
            public class PersonStar : Icon { public PersonStar() : base("PersonStar", IconVariant.Filled, PersonStarSizeAndContent.Values[5]) { } }
            public class PersonSync : Icon { public PersonSync() : base("PersonSync", IconVariant.Filled, PersonSyncSizeAndContent.Values[5]) { } }
            public class PersonTag : Icon { public PersonTag() : base("PersonTag", IconVariant.Filled, PersonTagSizeAndContent.Values[4]) { } }
            public class PersonWarning : Icon { public PersonWarning() : base("PersonWarning", IconVariant.Filled, PersonWarningSizeAndContent.Values[5]) { } }
            public class Phone : Icon { public Phone() : base("Phone", IconVariant.Filled, PhoneSizeAndContent.Values[6]) { } }
            public class PhoneDesktop : Icon { public PhoneDesktop() : base("PhoneDesktop", IconVariant.Filled, PhoneDesktopSizeAndContent.Values[5]) { } }
            public class Pin : Icon { public Pin() : base("Pin", IconVariant.Filled, PinSizeAndContent.Values[6]) { } }
            public class PinOff : Icon { public PinOff() : base("PinOff", IconVariant.Filled, PinOffSizeAndContent.Values[5]) { } }
            public class Play : Icon { public Play() : base("Play", IconVariant.Filled, PlaySizeAndContent.Values[6]) { } }
            public class PlayCircle : Icon { public PlayCircle() : base("PlayCircle", IconVariant.Filled, PlayCircleSizeAndContent.Values[4]) { } }
            public class PlugDisconnected : Icon { public PlugDisconnected() : base("PlugDisconnected", IconVariant.Filled, PlugDisconnectedSizeAndContent.Values[4]) { } }
            public class Previous : Icon { public Previous() : base("Previous", IconVariant.Filled, PreviousSizeAndContent.Values[5]) { } }
            public class Print : Icon { public Print() : base("Print", IconVariant.Filled, PrintSizeAndContent.Values[5]) { } }
            public class Prohibited : Icon { public Prohibited() : base("Prohibited", IconVariant.Filled, ProhibitedSizeAndContent.Values[6]) { } }
            public class PuzzleCube : Icon { public PuzzleCube() : base("PuzzleCube", IconVariant.Filled, PuzzleCubeSizeAndContent.Values[4]) { } }
            public class Question : Icon { public Question() : base("Question", IconVariant.Filled, QuestionSizeAndContent.Values[5]) { } }
            public class QuestionCircle : Icon { public QuestionCircle() : base("QuestionCircle", IconVariant.Filled, QuestionCircleSizeAndContent.Values[6]) { } }
            public class QuizNew : Icon { public QuizNew() : base("QuizNew", IconVariant.Filled, QuizNewSizeAndContent.Values[3]) { } }
            public class Record : Icon { public Record() : base("Record", IconVariant.Filled, RecordSizeAndContent.Values[6]) { } }
            public class RecordStop : Icon { public RecordStop() : base("RecordStop", IconVariant.Filled, RecordStopSizeAndContent.Values[6]) { } }
            public class RectangleLandscape : Icon { public RectangleLandscape() : base("RectangleLandscape", IconVariant.Filled, RectangleLandscapeSizeAndContent.Values[6]) { } }
            public class Resize : Icon { public Resize() : base("Resize", IconVariant.Filled, ResizeSizeAndContent.Values[5]) { } }
            public class Rhombus : Icon { public Rhombus() : base("Rhombus", IconVariant.Filled, RhombusSizeAndContent.Values[5]) { } }
            public class RoadCone : Icon { public RoadCone() : base("RoadCone", IconVariant.Filled, RoadConeSizeAndContent.Values[5]) { } }
            public class Ruler : Icon { public Ruler() : base("Ruler", IconVariant.Filled, RulerSizeAndContent.Values[5]) { } }
            public class ScanCamera : Icon { public ScanCamera() : base("ScanCamera", IconVariant.Filled, ScanCameraSizeAndContent.Values[4]) { } }
            public class ScanDash : Icon { public ScanDash() : base("ScanDash", IconVariant.Filled, ScanDashSizeAndContent.Values[6]) { } }
            public class ScanPerson : Icon { public ScanPerson() : base("ScanPerson", IconVariant.Filled, ScanPersonSizeAndContent.Values[4]) { } }
            public class ScanThumbUp : Icon { public ScanThumbUp() : base("ScanThumbUp", IconVariant.Filled, ScanThumbUpSizeAndContent.Values[4]) { } }
            public class ScanThumbUpOff : Icon { public ScanThumbUpOff() : base("ScanThumbUpOff", IconVariant.Filled, ScanThumbUpOffSizeAndContent.Values[4]) { } }
            public class Search : Icon { public Search() : base("Search", IconVariant.Filled, SearchSizeAndContent.Values[6]) { } }
            public class Send : Icon { public Send() : base("Send", IconVariant.Filled, SendSizeAndContent.Values[5]) { } }
            public class SendBeaker : Icon { public SendBeaker() : base("SendBeaker", IconVariant.Filled, SendBeakerSizeAndContent.Values[5]) { } }
            public class Settings : Icon { public Settings() : base("Settings", IconVariant.Filled, SettingsSizeAndContent.Values[5]) { } }
            public class ShapeOrganic : Icon { public ShapeOrganic() : base("ShapeOrganic", IconVariant.Filled, ShapeOrganicSizeAndContent.Values[5]) { } }
            public class Shapes : Icon { public Shapes() : base("Shapes", IconVariant.Filled, ShapesSizeAndContent.Values[5]) { } }
            public class Share : Icon { public Share() : base("Share", IconVariant.Filled, ShareSizeAndContent.Values[4]) { } }
            public class ShareIos : Icon { public ShareIos() : base("ShareIos", IconVariant.Filled, ShareIosSizeAndContent.Values[3]) { } }
            public class ShareScreenStart : Icon { public ShareScreenStart() : base("ShareScreenStart", IconVariant.Filled, ShareScreenStartSizeAndContent.Values[3]) { } }
            public class ShareScreenStop : Icon { public ShareScreenStop() : base("ShareScreenStop", IconVariant.Filled, ShareScreenStopSizeAndContent.Values[4]) { } }
            public class Shield : Icon { public Shield() : base("Shield", IconVariant.Filled, ShieldSizeAndContent.Values[6]) { } }
            public class ShieldCheckmark : Icon { public ShieldCheckmark() : base("ShieldCheckmark", IconVariant.Filled, ShieldCheckmarkSizeAndContent.Values[4]) { } }
            public class ShieldLock : Icon { public ShieldLock() : base("ShieldLock", IconVariant.Filled, ShieldLockSizeAndContent.Values[4]) { } }
            public class ShieldTask : Icon { public ShieldTask() : base("ShieldTask", IconVariant.Filled, ShieldTaskSizeAndContent.Values[4]) { } }
            public class SkipBack10 : Icon { public SkipBack10() : base("SkipBack10", IconVariant.Filled, SkipBack10SizeAndContent.Values[4]) { } }
            public class SkipForward10 : Icon { public SkipForward10() : base("SkipForward10", IconVariant.Filled, SkipForward10SizeAndContent.Values[4]) { } }
            public class SkipForward30 : Icon { public SkipForward30() : base("SkipForward30", IconVariant.Filled, SkipForward30SizeAndContent.Values[4]) { } }
            public class SlideAdd : Icon { public SlideAdd() : base("SlideAdd", IconVariant.Filled, SlideAddSizeAndContent.Values[5]) { } }
            public class SlideRecord : Icon { public SlideRecord() : base("SlideRecord", IconVariant.Filled, SlideRecordSizeAndContent.Values[4]) { } }
            public class SlideText : Icon { public SlideText() : base("SlideText", IconVariant.Filled, SlideTextSizeAndContent.Values[4]) { } }
            public class SlideTextPerson : Icon { public SlideTextPerson() : base("SlideTextPerson", IconVariant.Filled, SlideTextPersonSizeAndContent.Values[5]) { } }
            public class SlideTextSparkle : Icon { public SlideTextSparkle() : base("SlideTextSparkle", IconVariant.Filled, SlideTextSparkleSizeAndContent.Values[5]) { } }
            public class Space3d : Icon { public Space3d() : base("Space3d", IconVariant.Filled, Space3dSizeAndContent.Values[5]) { } }
            public class Sparkle : Icon { public Sparkle() : base("Sparkle", IconVariant.Filled, SparkleSizeAndContent.Values[5]) { } }
            public class SparkleCircle : Icon { public SparkleCircle() : base("SparkleCircle", IconVariant.Filled, SparkleCircleSizeAndContent.Values[5]) { } }
            public class Speaker0 : Icon { public Speaker0() : base("Speaker0", IconVariant.Filled, Speaker0SizeAndContent.Values[5]) { } }
            public class Speaker1 : Icon { public Speaker1() : base("Speaker1", IconVariant.Filled, Speaker1SizeAndContent.Values[5]) { } }
            public class Speaker2 : Icon { public Speaker2() : base("Speaker2", IconVariant.Filled, Speaker2SizeAndContent.Values[5]) { } }
            public class SpeakerMute : Icon { public SpeakerMute() : base("SpeakerMute", IconVariant.Filled, SpeakerMuteSizeAndContent.Values[5]) { } }
            public class SpeakerOff : Icon { public SpeakerOff() : base("SpeakerOff", IconVariant.Filled, SpeakerOffSizeAndContent.Values[4]) { } }
            public class SplitHorizontal : Icon { public SplitHorizontal() : base("SplitHorizontal", IconVariant.Filled, SplitHorizontalSizeAndContent.Values[6]) { } }
            public class SplitVertical : Icon { public SplitVertical() : base("SplitVertical", IconVariant.Filled, SplitVerticalSizeAndContent.Values[6]) { } }
            public class Square : Icon { public Square() : base("Square", IconVariant.Filled, SquareSizeAndContent.Values[6]) { } }
            public class SquareArrowForward : Icon { public SquareArrowForward() : base("SquareArrowForward", IconVariant.Filled, SquareArrowForwardSizeAndContent.Values[5]) { } }
            public class SquareHint : Icon { public SquareHint() : base("SquareHint", IconVariant.Filled, SquareHintSizeAndContent.Values[5]) { } }
            public class SquareHintHexagon : Icon { public SquareHintHexagon() : base("SquareHintHexagon", IconVariant.Filled, SquareHintHexagonSizeAndContent.Values[6]) { } }
            public class SquareHintSparkles : Icon { public SquareHintSparkles() : base("SquareHintSparkles", IconVariant.Filled, SquareHintSparklesSizeAndContent.Values[5]) { } }
            public class SquareMultiple : Icon { public SquareMultiple() : base("SquareMultiple", IconVariant.Filled, SquareMultipleSizeAndContent.Values[5]) { } }
            public class Star : Icon { public Star() : base("Star", IconVariant.Filled, StarSizeAndContent.Values[6]) { } }
            public class Stream : Icon { public Stream() : base("Stream", IconVariant.Filled, StreamSizeAndContent.Values[3]) { } }
            public class Subtract : Icon { public Subtract() : base("Subtract", IconVariant.Filled, SubtractSizeAndContent.Values[5]) { } }
            public class SubtractCircle : Icon { public SubtractCircle() : base("SubtractCircle", IconVariant.Filled, SubtractCircleSizeAndContent.Values[6]) { } }
            public class SubtractParentheses : Icon { public SubtractParentheses() : base("SubtractParentheses", IconVariant.Filled, SubtractParenthesesSizeAndContent.Values[5]) { } }
            public class SwimmingPool : Icon { public SwimmingPool() : base("SwimmingPool", IconVariant.Filled, SwimmingPoolSizeAndContent.Values[3]) { } }
            public class Table : Icon { public Table() : base("Table", IconVariant.Filled, TableSizeAndContent.Values[5]) { } }
            public class TableBottomRow : Icon { public TableBottomRow() : base("TableBottomRow", IconVariant.Filled, TableBottomRowSizeAndContent.Values[5]) { } }
            public class TableLock : Icon { public TableLock() : base("TableLock", IconVariant.Filled, TableLockSizeAndContent.Values[5]) { } }
            public class TableSimple : Icon { public TableSimple() : base("TableSimple", IconVariant.Filled, TableSimpleSizeAndContent.Values[5]) { } }
            public class TableSimpleCheckmark : Icon { public TableSimpleCheckmark() : base("TableSimpleCheckmark", IconVariant.Filled, TableSimpleCheckmarkSizeAndContent.Values[5]) { } }
            public class TableSimpleExclude : Icon { public TableSimpleExclude() : base("TableSimpleExclude", IconVariant.Filled, TableSimpleExcludeSizeAndContent.Values[5]) { } }
            public class TableSimpleInclude : Icon { public TableSimpleInclude() : base("TableSimpleInclude", IconVariant.Filled, TableSimpleIncludeSizeAndContent.Values[5]) { } }
            public class Tablet : Icon { public Tablet() : base("Tablet", IconVariant.Filled, TabletSizeAndContent.Values[5]) { } }
            public class TapDouble : Icon { public TapDouble() : base("TapDouble", IconVariant.Filled, TapDoubleSizeAndContent.Values[3]) { } }
            public class TapSingle : Icon { public TapSingle() : base("TapSingle", IconVariant.Filled, TapSingleSizeAndContent.Values[3]) { } }
            public class TeardropBottomRight : Icon { public TeardropBottomRight() : base("TeardropBottomRight", IconVariant.Filled, TeardropBottomRightSizeAndContent.Values[5]) { } }
            public class Temperature : Icon { public Temperature() : base("Temperature", IconVariant.Filled, TemperatureSizeAndContent.Values[4]) { } }
            public class Tent : Icon { public Tent() : base("Tent", IconVariant.Filled, TentSizeAndContent.Values[5]) { } }
            public class TetrisApp : Icon { public TetrisApp() : base("TetrisApp", IconVariant.Filled, TetrisAppSizeAndContent.Values[5]) { } }
            public class TextArrowDownRightColumn : Icon { public TextArrowDownRightColumn() : base("TextArrowDownRightColumn", IconVariant.Filled, TextArrowDownRightColumnSizeAndContent.Values[5]) { } }
            public class TextBulletListSquare : Icon { public TextBulletListSquare() : base("TextBulletListSquare", IconVariant.Filled, TextBulletListSquareSizeAndContent.Values[4]) { } }
            public class TextBulletListSquareShield : Icon { public TextBulletListSquareShield() : base("TextBulletListSquareShield", IconVariant.Filled, TextBulletListSquareShieldSizeAndContent.Values[1]) { } }
            public class TextT : Icon { public TextT() : base("TextT", IconVariant.Filled, TextTSizeAndContent.Values[6]) { } }
            public class ThumbLike : Icon { public ThumbLike() : base("ThumbLike", IconVariant.Filled, ThumbLikeSizeAndContent.Values[4]) { } }
            public class Timer : Icon { public Timer() : base("Timer", IconVariant.Filled, TimerSizeAndContent.Values[6]) { } }
            public class ToggleLeft : Icon { public ToggleLeft() : base("ToggleLeft", IconVariant.Filled, ToggleLeftSizeAndContent.Values[4]) { } }
            public class ToggleRight : Icon { public ToggleRight() : base("ToggleRight", IconVariant.Filled, ToggleRightSizeAndContent.Values[4]) { } }
            public class Triangle : Icon { public Triangle() : base("Triangle", IconVariant.Filled, TriangleSizeAndContent.Values[6]) { } }
            public class TriangleDown : Icon { public TriangleDown() : base("TriangleDown", IconVariant.Filled, TriangleDownSizeAndContent.Values[5]) { } }
            public class TriangleLeft : Icon { public TriangleLeft() : base("TriangleLeft", IconVariant.Filled, TriangleLeftSizeAndContent.Values[4]) { } }
            public class TriangleRight : Icon { public TriangleRight() : base("TriangleRight", IconVariant.Filled, TriangleRightSizeAndContent.Values[4]) { } }
            public class Trophy : Icon { public Trophy() : base("Trophy", IconVariant.Filled, TrophySizeAndContent.Values[5]) { } }
            public class TrophyLock : Icon { public TrophyLock() : base("TrophyLock", IconVariant.Filled, TrophyLockSizeAndContent.Values[5]) { } }
            public class TrophyOff : Icon { public TrophyOff() : base("TrophyOff", IconVariant.Filled, TrophyOffSizeAndContent.Values[5]) { } }
            public class Tv : Icon { public Tv() : base("Tv", IconVariant.Filled, TvSizeAndContent.Values[4]) { } }
            public class TvUsb : Icon { public TvUsb() : base("TvUsb", IconVariant.Filled, TvUsbSizeAndContent.Values[4]) { } }
            public class VehicleCar : Icon { public VehicleCar() : base("VehicleCar", IconVariant.Filled, VehicleCarSizeAndContent.Values[5]) { } }
            public class VehicleCarCollision : Icon { public VehicleCarCollision() : base("VehicleCarCollision", IconVariant.Filled, VehicleCarCollisionSizeAndContent.Values[5]) { } }
            public class VehicleCarParking : Icon { public VehicleCarParking() : base("VehicleCarParking", IconVariant.Filled, VehicleCarParkingSizeAndContent.Values[4]) { } }
            public class Video : Icon { public Video() : base("Video", IconVariant.Filled, VideoSizeAndContent.Values[5]) { } }
            public class VideoBackgroundEffect : Icon { public VideoBackgroundEffect() : base("VideoBackgroundEffect", IconVariant.Filled, VideoBackgroundEffectSizeAndContent.Values[5]) { } }
            public class VideoBackgroundEffectHorizontal : Icon { public VideoBackgroundEffectHorizontal() : base("VideoBackgroundEffectHorizontal", IconVariant.Filled, VideoBackgroundEffectHorizontalSizeAndContent.Values[5]) { } }
            public class VideoChat : Icon { public VideoChat() : base("VideoChat", IconVariant.Filled, VideoChatSizeAndContent.Values[5]) { } }
            public class VideoClip : Icon { public VideoClip() : base("VideoClip", IconVariant.Filled, VideoClipSizeAndContent.Values[5]) { } }
            public class VideoOff : Icon { public VideoOff() : base("VideoOff", IconVariant.Filled, VideoOffSizeAndContent.Values[4]) { } }
            public class VideoPerson : Icon { public VideoPerson() : base("VideoPerson", IconVariant.Filled, VideoPersonSizeAndContent.Values[6]) { } }
            public class VideoPersonClock : Icon { public VideoPersonClock() : base("VideoPersonClock", IconVariant.Filled, VideoPersonClockSizeAndContent.Values[5]) { } }
            public class VideoPersonSparkle : Icon { public VideoPersonSparkle() : base("VideoPersonSparkle", IconVariant.Filled, VideoPersonSparkleSizeAndContent.Values[4]) { } }
            public class Voicemail : Icon { public Voicemail() : base("Voicemail", IconVariant.Filled, VoicemailSizeAndContent.Values[5]) { } }
            public class Wallet : Icon { public Wallet() : base("Wallet", IconVariant.Filled, WalletSizeAndContent.Values[5]) { } }
            public class Wand : Icon { public Wand() : base("Wand", IconVariant.Filled, WandSizeAndContent.Values[4]) { } }
            public class Warning : Icon { public Warning() : base("Warning", IconVariant.Filled, WarningSizeAndContent.Values[6]) { } }
            public class Washer : Icon { public Washer() : base("Washer", IconVariant.Filled, WasherSizeAndContent.Values[3]) { } }
            public class Water : Icon { public Water() : base("Water", IconVariant.Filled, WaterSizeAndContent.Values[4]) { } }
            public class WeatherBlowingSnow : Icon { public WeatherBlowingSnow() : base("WeatherBlowingSnow", IconVariant.Filled, WeatherBlowingSnowSizeAndContent.Values[2]) { } }
            public class WeatherCloudy : Icon { public WeatherCloudy() : base("WeatherCloudy", IconVariant.Filled, WeatherCloudySizeAndContent.Values[2]) { } }
            public class WeatherDrizzle : Icon { public WeatherDrizzle() : base("WeatherDrizzle", IconVariant.Filled, WeatherDrizzleSizeAndContent.Values[2]) { } }
            public class WeatherDuststorm : Icon { public WeatherDuststorm() : base("WeatherDuststorm", IconVariant.Filled, WeatherDuststormSizeAndContent.Values[2]) { } }
            public class WeatherFog : Icon { public WeatherFog() : base("WeatherFog", IconVariant.Filled, WeatherFogSizeAndContent.Values[2]) { } }
            public class WeatherHailDay : Icon { public WeatherHailDay() : base("WeatherHailDay", IconVariant.Filled, WeatherHailDaySizeAndContent.Values[2]) { } }
            public class WeatherHailNight : Icon { public WeatherHailNight() : base("WeatherHailNight", IconVariant.Filled, WeatherHailNightSizeAndContent.Values[2]) { } }
            public class WeatherHaze : Icon { public WeatherHaze() : base("WeatherHaze", IconVariant.Filled, WeatherHazeSizeAndContent.Values[2]) { } }
            public class WeatherMoon : Icon { public WeatherMoon() : base("WeatherMoon", IconVariant.Filled, WeatherMoonSizeAndContent.Values[4]) { } }
            public class WeatherMoonOff : Icon { public WeatherMoonOff() : base("WeatherMoonOff", IconVariant.Filled, WeatherMoonOffSizeAndContent.Values[4]) { } }
            public class WeatherPartlyCloudyDay : Icon { public WeatherPartlyCloudyDay() : base("WeatherPartlyCloudyDay", IconVariant.Filled, WeatherPartlyCloudyDaySizeAndContent.Values[3]) { } }
            public class WeatherPartlyCloudyNight : Icon { public WeatherPartlyCloudyNight() : base("WeatherPartlyCloudyNight", IconVariant.Filled, WeatherPartlyCloudyNightSizeAndContent.Values[2]) { } }
            public class WeatherRain : Icon { public WeatherRain() : base("WeatherRain", IconVariant.Filled, WeatherRainSizeAndContent.Values[2]) { } }
            public class WeatherRainShowersDay : Icon { public WeatherRainShowersDay() : base("WeatherRainShowersDay", IconVariant.Filled, WeatherRainShowersDaySizeAndContent.Values[2]) { } }
            public class WeatherRainShowersNight : Icon { public WeatherRainShowersNight() : base("WeatherRainShowersNight", IconVariant.Filled, WeatherRainShowersNightSizeAndContent.Values[2]) { } }
            public class WeatherRainSnow : Icon { public WeatherRainSnow() : base("WeatherRainSnow", IconVariant.Filled, WeatherRainSnowSizeAndContent.Values[2]) { } }
            public class WeatherSnow : Icon { public WeatherSnow() : base("WeatherSnow", IconVariant.Filled, WeatherSnowSizeAndContent.Values[2]) { } }
            public class WeatherSnowflake : Icon { public WeatherSnowflake() : base("WeatherSnowflake", IconVariant.Filled, WeatherSnowflakeSizeAndContent.Values[3]) { } }
            public class WeatherSnowShowerDay : Icon { public WeatherSnowShowerDay() : base("WeatherSnowShowerDay", IconVariant.Filled, WeatherSnowShowerDaySizeAndContent.Values[2]) { } }
            public class WeatherSnowShowerNight : Icon { public WeatherSnowShowerNight() : base("WeatherSnowShowerNight", IconVariant.Filled, WeatherSnowShowerNightSizeAndContent.Values[2]) { } }
            public class WeatherSqualls : Icon { public WeatherSqualls() : base("WeatherSqualls", IconVariant.Filled, WeatherSquallsSizeAndContent.Values[2]) { } }
            public class WeatherSunny : Icon { public WeatherSunny() : base("WeatherSunny", IconVariant.Filled, WeatherSunnySizeAndContent.Values[5]) { } }
            public class WeatherSunnyHigh : Icon { public WeatherSunnyHigh() : base("WeatherSunnyHigh", IconVariant.Filled, WeatherSunnyHighSizeAndContent.Values[2]) { } }
            public class WeatherSunnyLow : Icon { public WeatherSunnyLow() : base("WeatherSunnyLow", IconVariant.Filled, WeatherSunnyLowSizeAndContent.Values[2]) { } }
            public class WeatherThunderstorm : Icon { public WeatherThunderstorm() : base("WeatherThunderstorm", IconVariant.Filled, WeatherThunderstormSizeAndContent.Values[2]) { } }
            public class Whiteboard : Icon { public Whiteboard() : base("Whiteboard", IconVariant.Filled, WhiteboardSizeAndContent.Values[3]) { } }
            public class Window : Icon { public Window() : base("Window", IconVariant.Filled, WindowSizeAndContent.Values[5]) { } }
            public class WindowApps : Icon { public WindowApps() : base("WindowApps", IconVariant.Filled, WindowAppsSizeAndContent.Values[5]) { } }
            public class WindowWrench : Icon { public WindowWrench() : base("WindowWrench", IconVariant.Filled, WindowWrenchSizeAndContent.Values[5]) { } }
            public class XboxController : Icon { public XboxController() : base("XboxController", IconVariant.Filled, XboxControllerSizeAndContent.Values[5]) { } }
            public class XboxControllerError : Icon { public XboxControllerError() : base("XboxControllerError", IconVariant.Filled, XboxControllerErrorSizeAndContent.Values[3]) { } }
        }
    }
}

#pragma warning restore 1591
