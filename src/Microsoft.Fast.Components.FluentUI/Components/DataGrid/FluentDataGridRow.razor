@using Microsoft.Fast.Components.FluentUI.DataGrid.Infrastructure;
@namespace Microsoft.Fast.Components.FluentUI
@inherits FluentComponentBase
@typeparam TGridItem
@attribute [CascadingTypeParameter(nameof(TGridItem))]
<CascadingValue Value="this" Name="OwningRow" IsFixed="true">
    <fluent-data-grid-row class="@Class"
                          style="@_style"
                          row-id="@RowId"
                          row-index=@RowIndex
                          grid-template-columns=@GridTemplateColumns
                          row-type=@RowType.ToAttributeValue()
                          @attributes="AdditionalAttributes"
                          @oncellfocus=HandleOnCellFocus
                          @ondblclick=OnRowDblClicked>
        @ChildContent
        @if (Columns is not null)
        {
            int colIndex = 1;
            if (Mode == DataGridItemMode.Readonly)
            {
                @foreach (var col in Columns)
                {
                    <FluentDataGridCell GridColumn=@(colIndex++) class="@ColumnClass(col)" @key="@col" TGridItem="TGridItem">
                        @((RenderFragment)(__builder => col.CellContent(__builder, Item!)))
                    </FluentDataGridCell>
                }
            }
            else if (Mode == DataGridItemMode.Edit)
            {
                @foreach (var col in Columns)
                {
                    <FluentDataGridCell GridColumn=@(colIndex++) class="@ColumnClass(col)" @key="@col" TGridItem="TGridItem">
                        @((RenderFragment)(__builder => col.CellEditContent(__builder)))
                    </FluentDataGridCell>
                }
            }
        }
    </fluent-data-grid-row>
</CascadingValue>