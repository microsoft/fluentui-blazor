@namespace Microsoft.Fast.Components.FluentUI
@inherits FluentComponentBase

@if (Open)
{
    <FluentOverlay OnClose="@CancelAsync" Transparent="false" />
    <div class="@ClassValue" style="@StyleValue" @attributes="AdditionalAttributes">
        <FluentStack Orientation="Orientation.Vertical" Class="fluent-panel-content">

            @if (this.Header != null || Settings.ShowDismiss)
            {
                <div class="fluent-panel-header">
                    <FluentStack Orientation="Orientation.Horizontal"
                                     VerticalAlignment="VerticalAlignment.Center">
                        <FluentLabel Typo="Typography.PaneHeader" Style="width: 100%; margin: 0px;">@Header</FluentLabel>
                        @if (Settings.ShowDismiss)
                        {
                            <FluentButton Appearance="Appearance.Stealth"
                                         @onclick="@(() => CancelAsync())"
                                         Style="color: rgb(96, 94, 92);" >
                                Cancel
                                <FluentIcon Name="@FluentIcons.Dismiss" Size="IconSize.Size16" Slot="start" />
                            </FluentButton>
                        }
                    </FluentStack>
                </div>
            }

            <div class="fluent-panel-body" nofooter=@(!HasFooter) style="@Settings.DialogBodyStyle">@Body</div>

            @if (HasFooter)
            {
                <div class="@(Settings.Alignment == HorizontalAlignment.Center ? "fluent-panel-footer-normal" : "fluent-panel-footer-bottom")">
                    <FluentStack Orientation="Orientation.Horizontal"
                                     HorizontalAlignment="@(Settings.Alignment == HorizontalAlignment.Center ? HorizontalAlignment.Right : HorizontalAlignment.Left)">
                        @if (Settings.ShowPrimaryButton)
                        {
                            <FluentButton title="@Settings.PrimaryButton"
                                         @onclick="@(() => CloseAsync())"
                                         Appearance="Appearance.Accent">
                                @Settings.PrimaryButton
                            </FluentButton>
                        }
                        @if (Settings.ShowSecondaryButton)
                        {
                            <FluentButton 
                                         title="@Settings.SecondaryButton"
                                         @onclick="@(() => CancelAsync())"
                                         Appearance="Appearance.Neutral">
                                @Settings.SecondaryButton
                            </FluentButton>
                        }
                    </FluentStack>
                    @Footer
                </div>
            }
        </FluentStack>
    </div>
}