@namespace Microsoft.Fast.Components.FluentUI
@inherits FluentComponentBase
@if (ChildContent == null || IsVisible)
{
    @**********@
    @* OneRow *@
    @**********@
    @if (Format == MessageBarFormat.Default)
    {
        <div class="@ClassValue" style="@StyleValue">

            @* Icon *@
            @if (ShowIcon)
            {
                <div class="power-alert-icon">
                    <FluentIcon Value="@Icon" Title="@(Message?.Type.ToAttributeValue())" Color="@_color" />
                </div>
            }

            @* Message *@
            <div class="power-alert-message">
                <span class="title">@((MarkupString)Title)</span>
                @ChildContent
                @if (ShowActionButton)
                {
                    <FluentAnchor Href="@(String.IsNullOrEmpty(Action?.Href) ? "#" : Action?.Href)"
                    @onclick="@ActionClickedAsync"
                                  title="Alert action"
                                  Class="power-alert-action"
                                  Target="_blank">
                        @Action?.Text
                    </FluentAnchor>
                }
            </div>

            @* Close *@
            @if (ShowDismiss)
            {
                <FluentIcon Icon="CoreIcons.Regular.Size16.Dismiss"
                            Color=@Color.Neutral
                            Class="power-alert-close"
                            OnClick="DismissClicked" />
            }
        </div>
    }

    @****************@
    @* Notification *@
    @****************@
    @if (this.Format == MessageBarFormat.Notification)
    {
        <div class="@ClassValue" style="@StyleValue">

            @* Icon *@
            @if (ShowIcon)
            {
                <div class="power-alert-notification-icon">
                <FluentIcon Value="@Icon"
                            
                            Color="@_color"
                            Title="@(Message?.Type?.ToAttributeValue())" />
                </div>
            }

            @* Message *@
            <div class="power-alert-notification-message" title="@Message">
                @((MarkupString)Title)
            </div>

            @* Close *@
            @if (ShowDismiss)
            {
                <div class="power-alert-notification-close">
                <FluentIcon Icon="CoreIcons.Regular.Size16.Dismiss"
                            Color=@Color.Neutral
                            Class="power-alert-notification-close"
                            OnClick="DismissClicked" />
                </div>
            }

            @* Detailled content *@
            <div class="power-alert-notification-content">
                @ChildContent
                @if (!String.IsNullOrEmpty(Message?.Body))
                {
                    @((MarkupString)Message.Body)
                }
                @if (ShowActionButton)
                {
                    <FluentAnchor Href="@(String.IsNullOrEmpty(Action?.Href) ? "#" : Action?.Href)"
                    @onclick="@ActionClickedAsync"
                                  title="Alert action"
                                  Class="power-alert-notification-action"
                                  Target="_blank">
                        @Action?.Text
                    </FluentAnchor>
                }
            </div>

            @* Recorded time *@
            @if (Timestamp != null)
            {
                <div class="power-alert-notification-time">
                    @((DateTime.Now - Timestamp)?.ToTimeAgo())
                </div>
            }

        </div>
    }
}