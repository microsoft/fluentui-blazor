@namespace Microsoft.FluentUI.AspNetCore.Components
@inherits FluentNavBase
@using Microsoft.AspNetCore.Components.Rendering
@using Microsoft.AspNetCore.Components.Routing


@if (NavMenuExpanded || HasIcon)
{
    <div id="@Id" @ref="@Element" @attributes="AdditionalAttributes" class="@ClassValue" disabled="@Disabled" style="@StyleValue" role="menuitem">

        @if (!string.IsNullOrEmpty(Href))
        {
            <NavLink class="fluent-nav-link"
                     @attributes="@Attributes"
                     Match="@Match"
                     ActiveClass="@ActiveClass">
                <div class="positioning-region">
                    <div class="content-region">
                        @_renderContent
                        @_renderButton
                    </div>
                </div>
            </NavLink>
        }
        else
        {
            <div class="positioning-region">
                <div class="content-region">
                    <div class="fluent-nav-link notactive" tabindex="0" @onclick="ToggleExpandedAsync" @onkeydown="@HandleExpanderKeyDownAsync">
                        @_renderContent
                        @_renderButton
                    </div>
                </div>
            </div>
        }

        <FluentCollapsibleRegion @bind-Expanded="@Expanded" MaxHeight="@MaxHeight" Class="items" role="group">
            <FluentNavMenu>
                @ChildContent
            </FluentNavMenu>
        </FluentCollapsibleRegion>
    </div>
}
@code {
    private void RenderContent(RenderTreeBuilder __builder)
    {
        @if (Icon is not null)
        {
            <FluentIcon Value="@Icon" Width="20px" Color="@IconColor" Class="fluent-nav-icon" />
        }
        else
        {
            <span class="fluent-nav-icon" style="min-width: 20px;"></span>
        }
        <div class="fluent-nav-text" title="@Title">
            @Title
            @TitleTemplate
        </div>
    }

    private void RenderButton(RenderTreeBuilder __builder)
    {
        @if (!HideExpander)
        {
            <div aria-hidden="true"
                 class="@ButtonClassValue"
                 tabindex="-1"
                 @onclick="ToggleExpandedAsync"
                 @onclick:stopPropagation="true"
                 @onclick:preventDefault="true"
                 @onkeydown="@HandleExpanderKeyDownAsync">
                <FluentIcon Value="@ExpandIcon" Color="@(Disabled ? Color.Disabled : Color.Neutral)" Class="@ExpandIconClassValue" />
            </div>

        }
    }
}