@namespace Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@inherits FluentComponentBase

<AddTag Name="span" TagWhen="@(() => _isAttached)" style="position: relative; display: inline-block;">
    @ChildContent
    <AddTag Name="span" TagWhen="@(() => _isAttached)" style="@_internalStyle">

        <fluent-badge id="@Id"
                      class="@ClassValue"
                      style="@StyleValue"
                      appearance="@Appearance.ToAttributeValue()"
                      color="@Color.ToAttributeValue()"
                      shape="@Shape.ToAttributeValue()"
                      size="@Size.ToAttributeValue()"
                      @attributes="@AdditionalAttributes">
            @if (IconStart != null)
            {
                if (Content is null)
                {
                    <FluentIcon Value="@IconStart" Color="Components.Color.Custom" CustomColor="@GetIconColor()" aria-label="@IconLabel" />
                }
                else
                {
                    <FluentIcon Value="@IconStart" Slot="start" Color="Components.Color.Custom" CustomColor="@GetIconColor()" aria-label="@IconLabel" />
                }
            }
            @Content
            @if (IconEnd != null)
            {

                if (Content is null)
                {
                    <FluentIcon Value="@IconEnd" Color="Components.Color.Custom" CustomColor="@GetIconColor()" aria-label="@IconLabel" />
                }
                else
                {
                    <FluentIcon Value="@IconEnd" Slot="end" Color="Components.Color.Custom" CustomColor="@GetIconColor()" aria-label="@IconLabel" />
                }

            }
        </fluent-badge>
    </AddTag>
</AddTag>
