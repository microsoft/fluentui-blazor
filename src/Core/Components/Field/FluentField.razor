@namespace Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@inherits FluentComponentBase


<fluent-field id="@GetId("field")"
              label-position="@Parameters.LabelPosition.ToAttributeValue()"
              class="@ClassValue"
              style="@StyleValue"
              @attributes="AdditionalAttributes">

    @if (HasLabel)
    {
        <FluentLabel Id="@GetId("label")"
                     slot="label"
                     for="@GetId("input")"
                     Required="@Parameters.Required"
                     Disabled="@Parameters.Disabled"
                     Style="@LabelStyle">
            @Parameters.Label
            @Parameters.LabelTemplate
        </FluentLabel>
    }

    @if (ChildContent is not null)
    {
        @if (Parameters.HasInputComponent)
        {
            @ChildContent
        }
        else
        {
            <div slot="input" id="@GetId("input")">
                @ChildContent
            </div>
        }
    })

    @if (HasMessage && Parameters.MessageCondition() == true)
    {
        <FluentText slot="message" size="@TextSize.Size200">
            @if (Parameters.MessageIcon is not null)
            {
                <FluentIcon Value="@Parameters.MessageIcon" Width="12px" Margin="2px 4px 0 0" />
            }
            @Parameters.Message
            @Parameters.MessageTemplate
        </FluentText>
    }

</fluent-field>
