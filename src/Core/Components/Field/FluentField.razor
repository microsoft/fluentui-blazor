@namespace Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@inherits FluentComponentBase

<fluent-field id="@GetId("field")"
              label-position="@Parameters.LabelPosition.ToAttributeValue()"
              class="@ClassValue"
              style="@StyleValue"
              @attributes="AdditionalAttributes">

    @if (HasLabel)
    {
        <FluentLabel Id="@GetId("label")"
                     slot="label"
                     for="@GetId("input")"
                     Required="@(Parameters.Required ?? false)"
                     Disabled="@(Parameters.Disabled ?? false)"
                     Style="@LabelStyle">
            @Parameters.Label
            @Parameters.LabelTemplate
        </FluentLabel>
    }

    @if (ChildContent is not null)
    {
        @if (Parameters.HasInputComponent)
        {
            @ChildContent
        }
        else
        {
            <div slot="input" id="@GetId("input")">
                @ChildContent
            </div>
        }
    }

    @if (HasMessageOrCondition && Parameters.MessageCondition?.Invoke(InputComponent ?? this) == true)
    {
        <FluentText slot="message" size="@TextSize.Size200">

            @CreateIcon(Parameters.MessageIcon)

            @if (Parameters.MessageTemplate is not null)
            {
                @Parameters.MessageTemplate
            }
            else
            {
                @Parameters.Message
            }
        </FluentText>
    }

</fluent-field>
