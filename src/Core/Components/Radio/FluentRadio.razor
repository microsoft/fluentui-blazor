@namespace Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@using System.Diagnostics
@inherits FluentInputBase<TValue>
@typeparam TValue
@{
    Debug.Assert(Context != null);
}
<FluentField InputComponent="@this" ForId="@Id" Class="@ClassValue" Style="@StyleValue" LabelPosition="@Components.LabelPosition.After">
    <fluent-radio id="@Id"
                  checked="@(Checked ?? Context.CurrentValue?.Equals(Value) == true ? GetToggledTrueValue() : null)"
                  disabled="@Disabled"
                  slot="@FluentSlot.FieldInput"
                  value="@(Value?.ToString() ?? Label ?? null)"
                  name="@Context.GroupName"
                  @onchange="@Context.ChangeEventCallback"
                  @attributes="AdditionalAttributes">

    </fluent-radio>
</FluentField>
