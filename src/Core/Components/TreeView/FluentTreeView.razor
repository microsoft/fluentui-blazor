@namespace Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@inherits FluentComponentBase

<CascadingValue Value="this" IsFixed="true">
    <fluent-tree id="@Id"
                 class="@ClassValue"
                 style="@StyleValue"
                 appearance="@Appearance.ToAttributeValue(isNull: TreeAppearance.Subtle)"
                 size="@Size.ToAttributeValue(isNull: TreeSize.Medium)"
                 @attributes="AdditionalAttributes">

        @ChildContent

        @if (Items != null)
        {
            foreach (var item in Items)
            {
                @FluentTreeItem.GetFluentTreeItem(this, item)
            }
        }

    </fluent-tree>
</CascadingValue>

<script>
    window.switchTreeView = (event) => {
        console.log('switchTreeView', event);
        const treeItem = event.target.closest('fluent-tree-item');
        if (treeItem) {
            treeItem.expanded = !treeItem.expanded;
        }
    }
</script>
