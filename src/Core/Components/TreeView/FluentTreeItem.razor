@namespace Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@inherits FluentComponentBase
@* ReSharper disable CSharpWarnings::CS8974 *@
<fluent-tree-item class="@ClassValue"
                  aria-label="@Text"
                  aria-expanded="@Expanded"
                  style="@StyleValue"
                  id="@Id"
                  expanded="@Expanded"
                  selected="@Selected"
                  disabled="@Disabled"
                  size="@Size.ToAttributeValue()"
                  appearance="@Appearance.ToAttributeValue()"
                  @onselectedchange="@HandleSelectedChangeAsync"
                  @onexpandedchange="@HandleExpandedChangeAsync"
                  @attributes="AdditionalAttributes">

    @if (Owner?.ItemTemplate == null && !string.IsNullOrWhiteSpace(Text))
    {
        @Text
    }

    @if (IconStartCollapsed != null || IconStartExpanded != null)
    {
        <FluentIcon Value="@(Expanded ? (IconStartExpanded ?? IconStartCollapsed) : (IconStartCollapsed ?? IconStartExpanded))" Slot="@FluentSlot.Start"/>
    }

    @ChildContent

    @if (IconEndCollapsed != null || IconEndExpanded != null)
    {
        <FluentIcon Value="@(Expanded ? (IconEndExpanded ?? IconEndCollapsed) : (IconEndCollapsed ?? IconEndExpanded))" Slot="@FluentSlot.End"/>
    }

    @if (IconAsideCollapsed != null || IconAsideExpanded != null)
    {
        <FluentIcon Value="@(Expanded ? (IconAsideExpanded ?? IconAsideCollapsed) : (IconAsideCollapsed ?? IconAsideExpanded))" Slot="@FluentSlot.Aside"/>
    }

    @if (Owner != null && Items != null)
    {
        @if (Owner.LazyLoadItems && Items.Any() && !Expanded)
        {
            @* Lazy loading required a "fake" sub-item to simulate the [+] *@
            <fluent-tree-item>@FluentTree.LoadingMessage</fluent-tree-item>
        }
        else
        {
            foreach (var item in Items)
            {
                @GetFluentTreeItem(Owner, item)
            }
        }
    }

</fluent-tree-item>
