# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test Core Lib

on:
  # Allow manually running the workflow
  workflow_dispatch:

  push:
    branches:
      - dev
    paths-ignore:
      - '**/*.gitignore'
      - '**/*.gitattributes'
  
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - dev
    paths-ignore:
      - '**/*.gitignore'
      - '**/*.gitattributes'

env:
  PROJECTS: "./src/Core/Microsoft.FluentUI.AspNetCore.Components.csproj"
  TESTS: "./tests/Core/Microsoft.FluentUI.AspNetCore.Components.Tests.csproj"

jobs:
  Build:

    runs-on: windows-latest

    permissions:
      checks: write
      pull-requests: write

    steps:
     - name: Checkout source
       uses: actions/checkout@v4

     - name: Setup .NET 8.0
       uses: actions/setup-dotnet@v4
       with:
        dotnet-version: 8.0.x

     # Build

     - name: Restore
       run: dotnet restore
       
     - name: Build
       run: dotnet build ${{ env.PROJECTS }} --configuration Release
       working-directory: ${{ github.workspace }}

     # Test Coverage

    #  - name: Test
    #    run: dotnet test ${{ env.TESTS }} --verbosity normal --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:DebugType=Full
    #    working-directory: ${{ github.workspace }}

     - name: Run Tests and Capture Results
       run: |
         # Run your tests and capture the results (e.g., store in an environment variable)
         # Replace this with your actual test command
         test_results=$(dotnet test ${{ env.TESTS }} --no-restore --verbosity normal --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:DebugType=Full | grep "Failed:")
         # Set the test results as an environment variable
         echo "test_results<<EOF" >> $GITHUB_ENV
         echo "$test_results" >> $GITHUB_ENV
         echo "EOF" >> $GITHUB_ENV

     - name: Publish unit tests summary
       uses: marocchino/sticky-pull-request-comment@v2
       if: always()
       with:
         header: Test Results
         message: |
           ```
           ${{ env.test_results }}
           ```

     - name: ReportGenerator
       uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
       with:
         reports: '**/coverage.cobertura.xml'
         targetdir: 'CoverageReports'
         title: 'Unit Tests Code Coverage'
         classfilters: '-Microsoft.FluentUI.AspNetCore.Components.DesignTokens.*'
         reporttypes: 'HtmlInline;MarkdownSummaryGithub'
     
     - name: Upload coverage report
       uses: actions/upload-artifact@v2
       with:
         name: CoverageReports
         path: CoverageReports

     - name: Publish coverage summary
       uses: marocchino/sticky-pull-request-comment@v2
       with:
         path: CoverageReports/SummaryGithub.md         