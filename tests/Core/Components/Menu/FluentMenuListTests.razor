@using Microsoft.FluentUI.AspNetCore.Components.Utilities
@using Xunit
@inherits Bunit.TestContext

@code {
    public FluentMenuListTests()
    {
        JSInterop.Mode = JSRuntimeMode.Loose;
        Services.AddFluentUIComponents();
    }

    [Fact]
    public void FluentMenuList_Default()
    {
        // Arrange && Act

        var cut = Render(@<FluentMenuList>fluent-menu-list</FluentMenuList>);

        // Assert
        cut.Verify();
    }

    [Fact]
    public void FluentMenuList_ChildContent()
    {
        // Arrange && Act
        var cut = Render(@<FluentMenuList>
                            <div>Child Content</div>
                         </FluentMenuList>);

        // Assert
        cut.Verify();
    }

    [Fact]
    public void FluentMenuList_MenuItemCheckboxChecked()
    {

        var check = false;
        var label = "My item";
        var item = new FluentMenuItem(LibraryConfiguration.Empty);
        var a = new MenuItemEventArgs { Id="myid", Text = label, Checked = true };

        // Arrange
        var cut = Render(@<FluentMenuList OnCheckedChanged="@(() => { check = true;})">
            <FluentMenuItem Id="myid" @ref=item Role="MenuItemRole.Checkbox" @onmenuitemchange="@((args) => { a = args; })" CheckedChanged="@(() => { })">
                    @label
                </FluentMenuItem>
            </FluentMenuList>);

        // Act
        cut.Find("fluent-menu-item").TriggerEvent("onmenuitemchange", a);

        // Assert
        Assert.True(check);
        Assert.Equal(label, a.Text);
        Assert.Equal(item, a.Item);
        Assert.True(a.Checked);
    }

    [Fact]
    public void FluentMenuList_MenuItemClick()
    {

        var click = false;
        var label = "My item";
        var item = new FluentMenuItem(LibraryConfiguration.Empty);
        var a = new MenuItemEventArgs { Id="myid", Text = label, Checked = null };

        // Arrange
        var cut = Render(@<FluentMenuList OnClick="@(() => { click = true; })">
            <FluentMenuItem Id="myid" @ref=item @onmenuitemchange="@((args) => { a = args; })" OnClick="@(() => { })">
                @label
            </FluentMenuItem>
        </FluentMenuList>);

        // Act
        cut.Find("fluent-menu-item").TriggerEvent("onmenuitemchange", a);

        // Assert
        Assert.True(click);
        Assert.Equal(label, a.Text);
        Assert.Equal(item, a.Item);
        Assert.Null(a.Checked);
    }

}
