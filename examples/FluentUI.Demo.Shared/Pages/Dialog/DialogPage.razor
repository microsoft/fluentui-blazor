@page "/Dialog"

@using FluentUI.Demo.Shared.Pages.Dialog.Examples;

<h1>Dialog</h1>

<p>As defined by the <a href="https://w3c.github.io/aria-practices/#dialog_modal" target="_blank" rel="noopener noreferrer">W3C</a>:</p>
<blockquote>
    <p>
        A dialog is a window overlaid on either the primary window or another dialog window. Windows under a modal dialog are inert.
        That is, users cannot interact with content outside an active dialog window. Inert content outside an active dialog is typically visually
        obscured or dimmed so it is difficult to discern, and in some implementations, attempts to interact with the inert content cause the dialog
        to close.
    </p>
    <p>
        Like non-modal dialogs, modal dialogs contain their tab sequence. That is, Tab and Shift + Tab do not move focus outside
        the dialog. However, unlike most non-modal dialogs, modal dialogs do not provide means for moving keyboard focus outside the dialog window
        without closing the dialog.
    </p>
</blockquote>

<p><code>&lt;FluentDialog&gt;</code> wraps the <code>&lt;fluent-dialog&gt;</code> element, a web component implementation of a dialog leveraging the Fluent UI design system.</p>

<ApiDocumentation Component="typeof(FluentDialog)" />

<h2>Examples</h2>

@* <DemoSection Title="Dialog Services" Component="@typeof(DialogServiceExample)">
    
</DemoSection> *@


<DemoSection Title="Default" Component="@typeof(DialogDefault)" CollocatedFiles="@(new[] {"css"})"></DemoSection>

<DemoSection Title="Dialog without reference" Component="@typeof(DialogNoRef)">
    <Description>
        Because no reference is created between the component and the <code>fast-dialog</code> web component, the interaction is limited here. For example, clicking on the 
        overlay when modal is set to true does not have any effect.Also note that no additional styling has been applied to the dialog.
    </Description>
</DemoSection>

<DemoSection Title="MessageBox" Component="@typeof(DialogMessageBox)">
    <Description>
        A dialog can be used as a simple <code>MessageBox</code> component. The <code>DialogService</code> exposes the following shortcut methods:
        <ul>
            <li><code>ShowInfo</code></li>
            <li><code>ShowError</code></li>
            <li><code>ShowConfirmation</code></li>
            <li><code>ShowMessageBox</code></li>
        </ul>
    </Description>
</DemoSection>

<DemoSection Title="Splash screen" Component="@typeof(DialogSplashScreen)">
</DemoSection>