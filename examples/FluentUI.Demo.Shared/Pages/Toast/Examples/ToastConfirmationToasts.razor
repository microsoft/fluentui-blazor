@inject IToastService ToastService
@inject NavigationManager NavigationManager

<FluentStack Orientation="Orientation.Vertical" VerticalGap="10">
    <FluentStack Wrap=true>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowSuccess("Success confirmation."))">
            <FluentIcon Name="@FluentIcons.CheckmarkCircle" Size="@IconSize.Size20" Variant="@IconVariant.Filled" Color="@Color.Success" Slot="start" />
            Show Success
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowWarning("Warning confirmation."))">
            <FluentIcon Name="@FluentIcons.Warning" Size="@IconSize.Size20" Variant="@IconVariant.Filled" Color="@Color.Warning" Slot="start" />
            Show Warning
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowError("Error confirmation."))">
            <FluentIcon Name="@FluentIcons.DismissCircle" Size="@IconSize.Size20" Variant="@IconVariant.Filled" Color="@Color.Error" Slot="start" />
            Show Error
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowInfo("Info confirmation."))">
            <FluentIcon Name="@FluentIcons.Info" Size="@IconSize.Size20" Variant="@IconVariant.Filled" Color="@Color.Info" Slot="start" />
            Show Info
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowProgress("Progress confirmation."))">
            <FluentIcon Name="@FluentIcons.Flash" Size="@IconSize.Size20" Color="@Color.Neutral" Slot="start" />
            Show progress
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowUpload("Upload confirmation."))">
            <FluentIcon Name="@FluentIcons.ArrowUpload" Size="@IconSize.Size20" Color="@Color.Neutral" Slot="start" />
            Show upload
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowDownload("Download confirmation."))">
            <FluentIcon Name="@FluentIcons.ArrowDownload" Size="@IconSize.Size20" Color="@Color.Neutral" Slot="start" />
            Show download
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowEvent("Event confirmation."))">
            <FluentIcon Name="@FluentIcons.CalendarLTR" Size="@IconSize.Size20" Color="@Color.Neutral" Slot="start" />
            Show event
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowAvatar("Avatar confirmation."))">
            <FluentIcon Name="@FluentIcons.Person" Size="@IconSize.Size20" Color="@Color.Neutral" Slot="start" />
            Show avatar
        </FluentButton>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowCustom("Custom confirmation.", null, settings => { settings.Icon = (FluentIcons.Delete,Color.Accent, IconVariant.Regular); }))">
            <FluentIcon Name="@FluentIcons.Delete" Size="@IconSize.Size20" Color="@Color.Neutral" Slot="start" />
            Show custom
        </FluentButton>
    </FluentStack>
    <FluentStack Wrap=true>
        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowCustom("Confirmation without an icon."))">
            Without icon
        </FluentButton>

        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowSuccess("Success confirmation with action.", action => { action.Text = "Action"; action.OnClick = (() => DemoLogger.WriteLine("Success confirmation clicked!"));}))">
            With action
        </FluentButton>

        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowInfo("Info confirmation custom settings.", null, settings => { settings.Timeout = 10; }))">
            With settings
        </FluentButton>

        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowInfo("Click to refresh the page",  settings => settings.OnClick = () => NavigationManager.NavigateTo("/", true)))">
            Custom action on click
        </FluentButton>

        <FluentButton Appearance=Appearance.Neutral @onclick="@(() => ToastService.ShowSuccess("Success confirmation with a lot of text to see what a toast looks like when it's really big."))">
            <FluentIcon Name="@FluentIcons.CheckmarkCircle" Size="@IconSize.Size20" Variant="@IconVariant.Filled" Color="@Color.Success" Slot="start" />
            Long Success
        </FluentButton>
    </FluentStack>
</FluentStack>