@page "/Toast"
@inject IToastService ToastService

@using FluentUI.Demo.Shared.Pages.Toast.Examples
@using Microsoft.Fast.Components.FluentUI

<h1>Toast</h1>

<p>
    Toasts, referred to as “notifications” in the UI, are pop-up notifications that keeps users informed by briefly:
    <ul>
        <li>Confirming an action they took.</li>
        <li>Informing them about a timely event.</li>
        <li>Communicating the status of a process initiated.</li>
    </ul>
</p>
<p>
    The information in a toast is useful and relevant but never critical.
</p>
<ApiDocumentation Component="typeof(FluentToastContainer)" />
<ApiDocumentation Component="typeof(FluentToast)" />

<h2>Examples</h2>

<DemoSection Title="Default Toast" Component="typeof(ToastDefault)"></DemoSection>

<DemoSection Title="Toast with options" Component="typeof(ToastDetailled)"></DemoSection>


<DemoSection Title="Confirmation Toasts" Component="typeof(ToastConfirmationToasts)"></DemoSection>


<DemoSection Title="Communication Toasts" Component="typeof(ToastCommunicationToasts)"></DemoSection>

<DemoSection Title="Progress Toasts" Component="typeof(ToastProgressToasts)"></DemoSection>

<DemoSection Title="Custom component" Component="typeof(ToastCustomComponent)"></DemoSection>

<DemoSection Title="Remove toasts" Component="typeof(ToastClearList)" ShowDownloads=false>
    <Description>
        Toasts can be removed by calling <code>ToastManager.Clear...()</code> methods. By default, 
        toasts are removed from the queue as well. To keep toasts in the queue, pass <code>false</code> for the <code>includeQueue</code> parameter.
    </Description>
</DemoSection>

<DemoSection Title="Remove queued toasts" Component="typeof(ToastClearQueue)" ShowDownloads=false></DemoSection>