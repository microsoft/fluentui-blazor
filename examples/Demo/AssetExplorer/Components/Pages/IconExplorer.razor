@page "/icon-explorer"
@using FluentUI.Demo.AssetExplorer.Components.Controls

<PageTitle>FluentUI Blazor - Icon Explorers</PageTitle>

<div class="icon-explorer" style="width: @(Width ?? "100%"); height: @(Height ?? "calc(100vh - 120px)");">

    @if (!string.IsNullOrEmpty(Title))
    {
        <h2>@Title</h2>
    }

    <FluentGrid Style="width: 100%;" Spacing="1">
        <FluentGridItem Style="min-width: 200px;">
            <FluentSearch @bind-Value="@Criteria.SearchTerm"
                          @bind-Value:after="@StartNewSearchAsync"
                          Placeholder="Part of icon name..." />
        </FluentGridItem>
        <FluentGridItem Gap="0">
            <FluentSelect TOption="IconSize"
                          @bind-SelectedOption="@Criteria.Size"
                          @bind-SelectedOption:after="@StartNewSearchAsync"
                          Style="min-width: 100px;"
                          Items="@(Enum.GetValues<IconSize>())"
                          OptionText="@(i => Convert.ToString(i))" />
        </FluentGridItem>
        <FluentGridItem>
            <FluentSelect TOption="IconVariant"
                          @bind-SelectedOption="@Criteria.Variant"
                          @bind-SelectedOption:after="@StartNewSearchAsync"
                          Style="min-width: 100px;"
                          Items="@(Enum.GetValues<IconVariant>())" />
        </FluentGridItem>
        <FluentGridItem>
            <FluentSelect TOption="Color"
                          @bind-SelectedOption="@Criteria.Color"
                          @bind-SelectedOption:after="@StartNewSearchAsync"
                          Style="min-width: 100px;"
                          Items="@(Enum.GetValues<Color>().Where(i => i != Color.Custom))"
                          OptionValue="@(i => i.ToAttributeValue())" />
        </FluentGridItem>
        <FluentGridItem>
            <FluentButton IconStart="@(new Icons.Regular.Size24.ArrowCircleRight())"
                          OnClick="@StartNewSearchAsync" />
        </FluentGridItem>
    </FluentGrid>

    @* Results *@
    @if (SearchInProgress)
    {
        <FluentProgressRing Style="width: unset; margin: 50px;" />
    }
    else
    {
        @if (IconsFound.Any())
        {
            <FluentLabel Class="header">
                Click on upper right clipboard icon in a card to copy a ready to paste <code>FluentIcon</code>
                component declaration to the clipboard.
            </FluentLabel>

            <div class="result-list">
                @foreach (var item in IconsForCurrentPage)
                {
                    <PreviewCard Icon="@item" IconColor="@Criteria.Color" />
                }
            </div>

            <FluentLabel Class="footer">
                <FluentPaginator State="@PaginationState"
                                 CurrentPageIndexChanged="@HandleCurrentPageIndexChanged" />
            </FluentLabel>
        }
        else
        {
            <FluentLabel Class="not-found">
                No icons found
            </FluentLabel>
        }
    }
</div>
