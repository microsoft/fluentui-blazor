@using System.Text.RegularExpressions
@{
    Regex pattern = new Regex("[;,<>&(){}!$^#@= ]");
    string ariaid = pattern.Replace(Title.ToLower(), "");
}
@if (!string.IsNullOrEmpty(Title))
{
    <h3 id="@ariaid">@Title</h3>
}

@if (Description != null)
{
    <div class="section-description">
        @Description
    </div>
}

<div class="demo-section-content">

    <FluentTabs ActiveTabId="@(!HideExample ? $"tab-example-{ariaid}" : $"tab-razor-{ariaid}")" fixed>
        @if (!HideExample)
        {
            <FluentTab Id="@("tab-example-"+@ariaid)" Label="Example">
                <Content>
                    <div class="demo-section-example">
                        @ChildContent
                        @if (Component is not null)
                        {
                            <DynamicComponent Type="Component" Parameters="ComponentParameters" />
                        }
                    </div>
                </Content>
            </FluentTab>
        }

        @if (!HideAllButExample && _hasCode)
        {
            @foreach (KeyValuePair<string, string> pair in _tabPanelsContent)
            {
                string tab = Path.GetExtension(pair.Key);

                string id = string.Empty;

                if (pair.Key.StartsWith(Component.Name))
                {
                    id = "tab-" + @GetDisplayName(tab).Replace("#", "").Replace("/", "").ToLower() + "-" + @ariaid;
                }
                else
                {
                    string tabName = Path.GetFileNameWithoutExtension(pair.Key);
                    id = "tab-" + tabName.Replace("#", "").Replace("/", "").ToLower() + "-" + @ariaid;
                }
                <FluentTab Id="@id" Label="@GetDisplayName(tab)" fixed>
                    <Content>
                        <CodeSnippet Language="@TabLanguageClass(tab)">@pair.Value</CodeSnippet>
                    </Content>
                </FluentTab>
            }
        }
    </FluentTabs>
</div>
@if (ShowDownloads)
{
    <div class="demo-section-downloads">
        <FluentSpacer />
        Download:&nbsp;
        @foreach (KeyValuePair<string, string> pair in _tabPanelsContent)
        {
            string source = pair.Key;
            <FluentAnchor Style="width: 85px; text-overflow: ellipsis" Download="@source" Href="@($"_content/FluentUI.Demo.Shared/sources/{source}.txt")" Appearance="Appearance.Neutral">
                @if (source.StartsWith(Component.Name))
                {
                    @GetDisplayName(source.Substring(source.LastIndexOf('.')))
                }
                else
                {
                    @source
                }
            </FluentAnchor>

            @if (source != _tabPanelsContent.Last().Key)
            {
                <span>&nbsp;</span>
            }
        }
    </div>
}