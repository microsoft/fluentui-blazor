@inject DataSource Data

<FluentOptionPeople Name="Denis Voituron"
                    Style="height: 32px; background: var(--neutral-fill-secondary-hover);"
                    Image="@($"data:image/png;base64, {FluentOptionPeople.SamplePicture}")"
                    OnDismissClick="@(() => {})" />

<div style="height:56px;">
    <FluentOptionPeople Name="Anne Dubois"
                        Image="https://cdn.pixabay.com/photo/2015/04/19/08/32/rose-729509_640.jpg" />
</div>

<div style="height: 24px;">
    <FluentOptionPeople Name="Denis Voituron" Style="color: red; font-size:10px;" />
</div>

<label for="my-customized">Select a person</label>
<FluentAutocomplete Id="my-customized"
                    TOption="Person"
                    Width="100%"
                    Placeholder="search"
                    OnOptionsSearch="@OnSearch"
                    MaximumSelectedOptions="3"
                    OptionText="@(item => item.LastName)"
                    OptionStyle="min-height: 40px;"
                    @bind-SelectedOptions="@SelectedItems">

    @* Template used with each Selected items *@
    <SelectedOptionTemplate>
        <div style="display: flex;" class="item-selected">
            <div class="persona small">
                @Initials(context)
            </div>
            <div class="name-selected">
                @context.LastName
            </div>
        </div>
    </SelectedOptionTemplate>

    @* Template used with each Option items *@
    <OptionTemplate>
        <div style="display: flex;">
            <div class="persona large">
                @Initials(context)
            </div>
            <div class="name">
                @context.FirstName @context.LastName
            </div>
        </div>
    </OptionTemplate>

    <HeaderContent>
        <FluentLabel Color="Color.Accent" Style="padding: 8px; font-size: 11px; border-bottom: 1px solid var(--neutral-fill-stealth-hover);">
            Suggested contacts
        </FluentLabel>
    </HeaderContent>

    <FooterContent>
        @if (!context.Any())
        {
            <FluentLabel Style="font-size: 11px; text-align: center; width: 200px;">
                No results found
            </FluentLabel>
        }
    </FooterContent>
</FluentAutocomplete>

<p>
    <b>Selected</b>: @(String.Join(" - ", SelectedItems.Select(i => i.LastName)))
</p>

@code
{
    IEnumerable<Person> SelectedItems = Array.Empty<Person>();

    private void OnSearch(OptionsSearchEventArgs<Person> e)
    {
        e.Items = Data.People.Where(i => i.LastName.StartsWith(e.Text, StringComparison.OrdinalIgnoreCase) ||
                                         i.FirstName.StartsWith(e.Text, StringComparison.OrdinalIgnoreCase))
                             .OrderBy(i => i.LastName);
    }

    private string Initials(Person person)
    {
        return $"{person.FirstName.ToUpper()[0]}{person.LastName.ToUpper()[0]}";
    }
}

<style>
    .persona {
        font-weight: 600;
        color: var(--fill-color);
        background: var(--accent-stroke-control-active);
        border-radius: 50%;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .large {
        width: 32px;
        height: 32px;
        font-size: 16px;
    }

    .small {
        min-width: 20px;
        height: 20px;
        font-size: 11px;
    }

    .name {
        margin: 5px 10px;
        text-wrap: nowrap;
    }

    .name-selected {
        margin: 0px 10px;
        text-wrap: nowrap;
    }

    .item-selected {
        border: solid 1px var(--accent-stroke-control-active);
        border-radius: 12px;
    }

</style>