@page "/IssueTester"

<EditForm Model="@this">
    <p>Modified: @(context.IsModified())</p>

    <FluentCombobox Items="_items"
                    TOption="string"
                    SelectedOption="@soCombobox1"
                    SelectedOptionChanged="x => HandleCBOptionChanged(x)"
                    Value="@vCombobox1"
                    ValueChanged="x => HandleCBValueChanged(x)" />
    <br />
    <FluentSelect TOption="MyThing" @bind-SelectedOption="@soSelect"
                  Items="@AllThings" OptionText="@(x => x.DisplayText)" />

    <FluentListbox TOption="MyThing" @bind-SelectedOption="@soListbox"
                   Items="@AllThings" OptionText="@(x => x.DisplayText)" />

    <FluentListbox TOption="MyThing" @bind-Value="@vListbox"
                   Items="@AllThings" OptionText="@(x => x.DisplayText)" />

    <FluentCombobox Items="@AllThings"
                    TOption="MyThing"
                    OptionText="@(x => x.DisplayText)"
                    @bind-SelectedOption="@soCombobox"
                    @bind-Value="@vCombobox" />


    <FluentTextField @bind-Value="@someString" />
</EditForm>
<p>
    Combobox 1 value: @vCombobox1 <br />
    Combobox 1 option: @soCombobox1 <br />
    <br />
    Selected (Select): @soSelect <br />
    Selected (Listbox): @soListbox <br />
    Value (Listbox): @vListbox <br />
    Selected (Combobox): @soCombobox <br />
    Value (Combobox): @vCombobox <br />
    Text field: @someString
</p>
@code {
    MyThing? soSelect, soListbox, soCombobox;
    string? vListbox, vCombobox, vCombobox1, soCombobox1;

    string? someString;
    MyThing[] AllThings = new[] { new MyThing(1, "One"), new MyThing(2, "Two") };

    record MyThing(int Id, string DisplayText);

    private List<string> _items = ["Item 1", "Item 2", "Item 3"];

    private void HandleCBOptionChanged(string? value)
    {
        soCombobox1 = value;
    }

    private void HandleCBValueChanged(string? value)
    {
        vCombobox1 = value;
    }

}
