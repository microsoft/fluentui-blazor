<h4>Example</h4>

<FluentStack Orientation="Orientation.Vertical">
    <FluentCheckbox Label="Read Only" @bind-Value="@_readOnly" />

    <FluentCheckbox Label="Allow reset" @bind-Value="@_allowReset" />

    <FluentCheckbox Label="Disabled" @bind-Value="@_disabled" />

    <FluentNumberField TValue="int" Label="Max Value" @bind-Value="@_maxValue" />

    <FluentSelect Label="Color"
                  @bind-SelectedOption="@_iconColor"
                  Style="min-width: 100px;"
                  Items="@(Enum.GetValues<Color>().Where(i => i != Color.Custom))"
                  OptionValue="@(i => i.ToAttributeValue())" />

    <FluentSelect TOption="string"
                  Label="Icons Full/Empty"
                  SelectedOptionChanged="SelectedOptionChanged"
                  Style="min-width: 100px;"
                  Items="_icons" />

    <FluentRating MaxValue="@_maxValue"
                  @bind-Value="@_value"
                  IconFilled="@_iconFilled"
                  IconOutline="@_iconOutline"
                  ReadOnly="@_readOnly"
                  IconColor="@_iconColor"
                  Disabled="@_disabled" ,
                  AllowReset="@_allowReset" />

    <div>Value: @_value</div>
</FluentStack>

@code
{
    bool _readOnly;
    bool _disabled;
    bool _allowReset;
    int _maxValue = 10;
    int _value = 2;
    Color _iconColor = Color.Accent;

    Icon _iconFilled = new Icons.Filled.Size20.Star();
    Icon _iconOutline = new Icons.Regular.Size20.Star();
    List<string> _icons = ["Star", "Heart", "Alert", "PersonCircle"];

    private void SelectedOptionChanged(string name) => SetIcon(_icons.IndexOf(name));

    private void SetIcon(int index)
    {
        _iconFilled = new Icon[]
        {   new Icons.Filled.Size20.Star(),
             new Icons.Filled.Size20.Heart(),
             new Icons.Filled.Size20.Alert(),
             new Icons.Filled.Size20.PersonCircle(),
       }[index];

        _iconOutline = new Icon[]
        {   new Icons.Regular.Size20.Star(),
             new Icons.Regular.Size20.Heart(),
             new Icons.Regular.Size20.Alert(),
             new Icons.Regular.Size20.PersonCircle(),
       }[index];
    }

    protected override void OnParametersSet() => SetIcon(0);
}
