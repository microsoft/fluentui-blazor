<FluentSelect Items=@(Enum.GetValues<JustifyContent>())
              OptionValue="@(c => c.ToAttributeValue())"
              TOption="JustifyContent"
              Position="SelectPosition.Below"
@bind-SelectedOption="@justification" />

<FluentSelect Items=@(Enum.GetValues<Align>())
              OptionValue="@(c => c.ToAttributeValue())"
              TOption="Align"
              Position="SelectPosition.Below"
@bind-SelectedOption="@alignment" />
<br />
<br />


<FluentButton Appearance="Appearance.Accent" @onclick="HandleOnOpen">Show Overlay</FluentButton>

<FluentOverlay @bind-Visible=@visible
               Opacity="0.4"
               Alignment="@alignment"
               Justification="@justification"
               OnClose="HandleOnClose">
    <FluentProgressRing />
</FluentOverlay>

@code {
    bool visible = false;
    JustifyContent justification = JustifyContent.Center;
    Align alignment = Align.Center;

    protected void HandleOnClose()
    {
        DemoLogger.WriteLine("Overlay closed");
    }

    protected async Task HandleOnOpen()
    {
        visible = true;
        DemoLogger.WriteLine("Overlay opened");
        await Task.Delay(3000);
        visible = false;
    }
}
