<p>
    <FluentNumberField @bind-Value="exampleLong">Long</FluentNumberField>
    <br/>
    Example long: @exampleLong
    <br/>
    Minimum value: @(MinValue); Maximum value: @(MaxValue)
</p>
<p>
    <FluentNumberField @bind-Value="shortMin">Short</FluentNumberField>
    <br/>
    Minimum value: @(short.MinValue); Maximum value: @(short.MaxValue)
</p>

<p>
    <FluentNumberField @bind-Value="@exampleFloat">Float</FluentNumberField>
    <br/>
    Example float: @exampleFloat
    <br/>
    Minimum value: @(MinValue); Maximum value: @(MaxValue)
</p>
<p>
    <FluentNumberField Step=0.25 @bind-Value="@exampleFloat2">Float</FluentNumberField>
    <br/>
    Example float: @exampleFloat2 (step=0.25)
    <br/>
    Minimum value: @(MinValue); Maximum value: @(MaxValue)
</p>
<p>
    <FluentNumberField @bind-Value="@exampleDouble">Double</FluentNumberField>
    <br/>
    Example double: @exampleDouble
    <br/>
    Minimum value: @(MinValue); Maximum value: @(MaxValue)
</p>
<p>
    <FluentNumberField @bind-Value="@exampleDecimal">Decimal</FluentNumberField>
    <br/>
    Example decimal: @exampleDecimal
    <br/>
    Minimum value: @(MinValue); Maximum value: @(MaxValue)
</p>

<p>
    <FluentNumberField @bind-Value="@exampleUshort">Unsigned short</FluentNumberField>
    Example unsigned short: @exampleUshort
    <br/>
    Minimum value: @(ushort.MinValue); Maximum value: @(ushort.MaxValue)
</p>

<p>
    <FluentNumberField @bind-Value="@exampleUint">Unsigned integer</FluentNumberField>
    Example unsigned integer: @exampleUint
    <br/>
    Minimum value: @(uint.MinValue); Maximum value: @(uint.MaxValue)
</p>

<p>
    <FluentNumberField @bind-Value="@exampleUlong">Unsigned long</FluentNumberField>
    Example unsigned long: @exampleUlong
    <br/>
    Minimum value: @(ulong.MinValue); Maximum value: @(MaxValue)
</p>

@code {
    short shortMin = short.MinValue;
    long exampleLong { get; set; } = 9999999997;
    float exampleFloat { get; set; } = 123.45f;
    float exampleFloat2 { get; set; } = 123.45f;
    double exampleDouble { get; set; } = 456.32d;
    decimal exampleDecimal { get; set; } = Decimal.One / 3;
    ushort exampleUshort { get; set; }
    uint exampleUint { get; set; }
    ulong exampleUlong { get; set; }

    private const long MaxValue = 9999999999;
    private const long MinValue = -9999999999;
}
