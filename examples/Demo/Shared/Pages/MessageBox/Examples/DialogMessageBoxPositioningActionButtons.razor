@inject IDialogService DialogService

<FluentStack>
    <div style="width: 150px;">
        Horizontal<FluentListbox Items=@(Enum.GetValues<HorizontalAlignment>()) @bind-SelectedOption="@Horizontal" />
    </div>
    <div style="width: 150px;">
        <FluentSwitch @bind-Value=Reversed Label=" Reversed" />
    </div>
</FluentStack>
<br />
<FluentStack>
    <FluentButton OnClick="@ShowSuccessAsync" Appearance="Appearance.Accent">Success</FluentButton>
    <FluentButton OnClick="@ShowConfirmationAsync" Appearance="Appearance.Accent">Confirmation</FluentButton>
</FluentStack>

<p>
    Last result: @(canceled == null ? "" : (canceled == true ? "❌ Canceled" : "✅ OK"))
</p>

@code
{
    HorizontalAlignment Horizontal;
    bool Reversed;

    bool? canceled;

    private async Task ShowSuccessAsync()
    {
        var dialog = await DialogService.ShowSuccessAsync("The action was a success", actionsHorizontalAlignment: Horizontal);
        var result = await dialog.Result;
        canceled = result.Cancelled;
    }

    private async Task ShowConfirmationAsync()
    {
        var dialog = await DialogService.ShowConfirmationAsync("Are you <strong>sure</strong> you want to delete this item? <br /><br />This will also remove any linked items", actionsHorizontalAlignment: Horizontal, actionsReversed: Reversed);
        var result = await dialog.Result;
        canceled = result.Cancelled;
    }

}
