@using Microsoft.AspNetCore.Components.Rendering
@inject IDialogService DialogService


<div style="margin-top: 1rem;">
    <FluentButton @onclick="@OpenDialogAsync" Appearance="Appearance.Accent">
        Open Dialog
    </FluentButton>
</div>

@code {

    private IDialogReference dialog = default!;

    SimplePerson simplePerson = new()
        {
            Firstname = "Dan",
            Lastname = "Sanderson",
            Age = 42,
        };

    private async Task OpenDialogAsync()
    {
        DemoLogger.WriteLine($"Open dialog left");

        DialogParameters<SimplePerson> parameters = new()
            {
                HeaderTemplate = @CustomHeader,
                FooterTemplate = @CustomFooter,
                Alignment = HorizontalAlignment.Left,
                Width = "500px",
                Height = "500px",
                Content = simplePerson,
            };

        dialog = await DialogService.ShowDialogAsync<SimpleFormInDialog, SimplePerson>(parameters);
        DialogResult? result = await dialog.Result;


        if (result.Data is not null)
        {
            SimplePerson? simplePerson = result.Data as SimplePerson;
            DemoLogger.WriteLine($"Dialog closed by {simplePerson?.Firstname} {simplePerson?.Lastname} ({simplePerson?.Age}) - Canceled: {result.Cancelled}");
        }
        else
        {
            DemoLogger.WriteLine($"Dialog closed - Canceled: {result.Cancelled}");
        }

    }
    private void HandleMe()
    {
        DemoLogger.WriteLine($"Tertiary action clicked");
        dialog.CloseAsync();
    }

    private void CustomHeader(RenderTreeBuilder __builder)
    {
        <div class="custom-dialog-header">
            <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">

                <FluentButton Appearance="Appearance.Stealth" @onclick="@(() => dialog.CloseAsync(DialogResult.Cancel()))">
                    <FluentIcon Icon="Icons.Regular.Size24.Dismiss" Width="16px" />
                </FluentButton>

                <FluentLabel Typo="Typography.PaneHeader" Style="width: 100%; margin: 0px;">@($"Hello {simplePerson.Firstname}")</FluentLabel>

                </FluentStack>
            </div>
    }            
    
    private void CustomFooter(RenderTreeBuilder __builder)
    {
        <div class="custom-dialog-footer">
            <FluentStack Orientation="Orientation.Horizontal"
                         HorizontalAlignment="@HorizontalAlignment.Left">

                <FluentButton title="Save"
                              OnClick="@(() => dialog.CloseAsync())"
                              Appearance="Appearance.Accent">
                    Save
                </FluentButton>
                <FluentButton title="Cancel"
                              OnClick="@(() => dialog.CloseAsync(DialogResult.Cancel()))" 
                              Appearance="Appearance.Neutral">
                    Cancel
                </FluentButton>
                <FluentSpacer />
                <FluentButton title="Don't know yet"
                              Appearance="Appearance.Neutral"
                              OnClick="HandleMe">
                    Don't know yet
                </FluentButton>

            </FluentStack>
        </div>
    }
}