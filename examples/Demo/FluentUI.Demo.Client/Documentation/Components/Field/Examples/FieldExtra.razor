@* ******************************************** *@
@* This sample is not used in the documentation *@
@* ******************************************** *@

<FluentStack Orientation="Orientation.Vertical">
    <FluentField Label="Label above"
                 ForId="field-21"
                 Message="This is a success message"
                 MessageIcon="@FluentStatus.SuccessIcon">
        <InputText id="field-21" @bind-Value="@Value1" />
    </FluentField>

    <FluentField Label="Label before"
                 LabelPosition="@LabelPosition.Before"
                 LabelWidth="150px"
                 ForId="field-22"
                 Required="true"
                 Message="This is an error message"
                 MessageIcon="@FluentStatus.ErrorIcon">
        <fluent-text-input id="field-22" />
    </FluentField>

    <FluentField Label="Other label before"
                 LabelPosition="@LabelPosition.Before"
                 LabelWidth="150px"
                 ForId="field-23"
                 Required="true"
                 Message="This is an info message"
                 MessageIcon="@FluentStatus.InfoIcon">
        <fluent-text-input id="field-23" />
    </FluentField>

    <FluentField Label="Label after"
                 LabelPosition="@LabelPosition.After"
                 ForId="field-24"
                 Message="This is a warning message"
                 MessageIcon="@FluentStatus.WarningIcon">
        <fluent-text-input id="field-24" />
    </FluentField>

    <FluentField>
        <fluent-text-input />
    </FluentField>

    <FluentField Label="Label above"
                 Message="This is a success message"
                 MessageIcon="@FluentStatus.SuccessIcon">
        TOTO
    </FluentField>

    <FluentField Label="Label above"
                 Message="This is a success message"
                 MessageIcon="@FluentStatus.SuccessIcon">
        <select>
            <option>One</option>
            <option>Two</option>
        </select>
    </FluentField>

    <FluentTextInput Label="My label" MessageState="@MessageState.Error" MessageCondition="@(i => true)" />

    <FluentTextInput Label="My label 4"
                     @bind-Value="@Value4"
                     Immediate="true"
                     MessageCondition="@(i => i.When(() => Value4.Length > 7).Display(MessageState.Warning)
                                               .When(() => Value4.Length > 5).Display("More than 5", new Icons.Regular.Size16.Image())
                                               .When(() => Value4.Length > 3).Display("More than 3", MessageState.Error)
                                               .When(() => Value4.Length > 1).Display("More than 1", MessageState.Success)
                                               .Build())" />

    <FluentTextInput id="myText" Label="@LabelSample" Required="true" Margin="30px" MessageCondition="DisplayMessage" @bind-Value="@Value2" Immediate="true" />
    <FluentButton OnClick="@(e => LabelSample = LabelSample + "x")">Click</FluentButton>


    <FluentTextInput id="myText2" Label="@LabelSample" LabelPosition="LabelPosition.Before" Required="true" Margin="30px" @bind-Value="@Value3" Immediate="true" />

</FluentStack>

@code
{
    string Value4 = "";

    string LabelSample = "Label sample";
    string Value1 = "";
    string Value2 = "";
    string Value3 = "";

    bool DisplayMessage(IFluentField input)
    {
        if (Value2.Length == 0)
        {
            input.Message = "My custom required message";
            input.MessageState = MessageState.Error;
            return true;
        }

        if (Value2.Length >= 1 && Value2.Length <= 3)
        {
            input.Message = null;
            input.MessageTemplate = null;
            input.MessageState = null;
        }

        if (Value2.Length > 3)
        {
            input.MessageState = MessageState.Warning;
            return true;
        }

        return false;
    }
}
