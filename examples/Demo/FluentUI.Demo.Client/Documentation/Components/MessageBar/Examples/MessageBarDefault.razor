@inject IMessageService MessageService
<FluentButton OnClick="@AddInTopBarSimple" Appearance="ButtonAppearance.Primary">Add simple</FluentButton>
<FluentButton OnClick="@AddInTopBarWithOptions" Appearance="ButtonAppearance.Primary">Add with options</FluentButton>

@code
{

    ActionLink<IMessageInstance> link = new()
    {
        Text = "Learn more",
        Href = "https://bing.com",
        OnClick = (e) => { Console.WriteLine($"Message 'learn more' clicked"); return Task.CompletedTask; }
    };

    int counter = 0;

    async Task AddInTopBarSimple()
    {
        var message = $"This is a message bar that provides information to the user (#{counter++})";
        var type = Enum.GetValues<MessageIntent>()[counter % 4];
        await MessageService.ShowMessageBarAsync(message, type, App.MESSAGES_TOP);
    }

    async Task AddInTopBarWithOptions()
    {
        await MessageService.ShowMessageBarAsync(options =>
        {
            options.Title = $"Simple message #{counter++}";
            options.Intent = Enum.GetValues<MessageIntent>()[counter % 4];
            options.Link = link;
            options.Section = App.MESSAGES_TOP;
        });
    }


    // void AddInNotificationCenter()
    // {
    //     MessageService.ShowMessageBar(options =>
    //     {
    //         options.Intent = Enum.GetValues<MessageIntent>()[counter % 4];
    //         options.Title = $"Simple message #{counter++}";
    //         options.Body = MessageBarSamples.OneRandomMessage;
    //         options.Link = link;
    //         options.Timestamp = DateTime.Now;
    //         options.Section = App.MESSAGES_NOTIFICATION_CENTER;
    //     });
    // }


    // async Task AddInDialog()
    // {
    //     MessageService.ShowMessageBar(options =>
    //     {
    //         options.Intent = Enum.GetValues<MessageIntent>()[counter % 4];
    //         options.Title = $"Simple message #{counter++}";
    //         options.Body = MessageBarSamples.OneRandomMessage;
    //         options.Link = link;
    //         options.Timestamp = DateTime.Now;
    //         options.Section = App.MESSAGES_DIALOG;
    //     });

    //     await OpenDialogAsync();
    // }

    // private async Task OpenDialogAsync()
    // {
    //     DialogParameters<SimplePerson> parameters = new()
    //     {
    //         Title = $"Hi {simplePerson.Firstname}!",
    //         PrimaryAction = "Yes",
    //         PrimaryActionEnabled = false,
    //         SecondaryAction = "No",
    //         Width = "500px",
    //         Height = "500px",
    //         Content = simplePerson,
    //         TrapFocus = true,
    //         Modal = true,
    //     };

    //     IDialogReference dialog = await DialogService.ShowDialogAsync<SimpleDialog>(simplePerson, parameters);
    //     DialogResult? result = await dialog.Result;
    // }

    // private async Task AddNonDismissibleMessage()
    // {
    //     var message = $"Simple non-dismissible message #{counter++}";
    //     var type = Enum.GetValues<MessageIntent>()[counter % 4];
    //     await MessageService.ShowMessageBarAsync(options =>
    //     {
    //         options.Title = message;
    //         options.Intent = type;
    //         options.Section = App.MESSAGES_TOP;
    //         options.AllowDismiss = false;
    //     });
    // }
}
