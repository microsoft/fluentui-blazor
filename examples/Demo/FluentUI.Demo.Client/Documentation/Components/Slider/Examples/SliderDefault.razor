<FluentStack Orientation="Orientation.Vertical">
	<FluentSlider Max="100" Label="Label" LabelPosition="LabelPosition.Before"></FluentSlider>

	<FluentSlider Max="100" Size="SliderSize.Small" Style="width:350px" Label="Label"></FluentSlider>

	<FluentSlider Max="100" Disabled="true"></FluentSlider>

	<FluentSlider Min="20" Max="50" Step="1.5" @bind-Value=value Label="@($"Selected value : {value}")"></FluentSlider>

	<FluentSlider Max="100" Step="50"></FluentSlider>

	<FluentStack>
		<FluentSlider Max="50" Value=degree TValue="int" ValueChanged="ValuechangedHandler" Orientation="Orientation.Vertical" Label="T°">
			<p slot="thumb">@cursor</p>
		</FluentSlider>

		<FluentSlider Max="50" Value=degree2 TValue="int" ValueChanged="ValuechangedHandler2" Orientation="Orientation.Vertical" Label="T°">
			<FluentIcon slot="thumb" Value="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Filled.Size20.Circle())" Color="CursorColor" />
		</FluentSlider>
	</FluentStack>
</FluentStack>


@code {
	double value = 33.5;
	int degree = 20, degree2 = 20;
	string cursor = "🟢";

	void ValuechangedHandler(int value)
	{
		degree = (int)value;

		if (degree < 20)
			cursor = "🔵";
		else if (degree > 30)
			cursor = "🔴";
		else
			cursor = "🟢";
	}

	void ValuechangedHandler2(int value)
	{
		degree2 = (int)value;

		if (degree2 < 20)
			CursorColor = Color.Info;
		else if (degree2 > 30)
			CursorColor = Color.Error;
		else
			CursorColor = Color.Primary;
	}

	Color CursorColor = Color.Primary;
}
