<p style="font-weight: bold;">
    Page size: @PageSize
</p>

<FluentGrid Spacing="2"
            OnBreakpointEnter="@OnBreakpointEnterHandler"
            AdaptiveRendering="true"
            Style="background: var(--colorNeutralBackground4);"
            Justify="JustifyContent.FlexStart">
    <FluentGridItem Xs="12">
        <div class="card">Xs="12"</div>
    </FluentGridItem>
    <FluentGridItem Xs="12" Sm="6" HiddenWhen="GridItemHidden.SmAndDown">
        <div class="card">Xs="12" Sm="6" Hidden="SmAndDown"</div>
    </FluentGridItem>
    <FluentGridItem Xs="12" Sm="6">
        <div class="card">Xs="12" Sm="6"</div>
    </FluentGridItem>
    <FluentGridItem Xs="6" Sm="3">
        <div class="card">Xs="6" Sm="3"</div>
    </FluentGridItem>
    <FluentGridItem Xs="6" Sm="3">
        <div class="card">Xs="6" Sm="3"</div>
    </FluentGridItem>
    <FluentGridItem Xs="6" Sm="3">
        <div class="card">Xs="6" Sm="3"</div>
    </FluentGridItem>
    <FluentGridItem Xs="6" Sm="3">
        <div class="card">Xs="6" Sm="3"</div>
    </FluentGridItem>
    <FluentGridItem Xs="3">
        <div class="card">Xs="3"</div>
    </FluentGridItem>
</FluentGrid>

@code
{
    GridItemSize? PageSize;
    void OnBreakpointEnterHandler(GridItemSize size)
    {
        PageSize = size;
        Console.WriteLine($"Page Size: {size}");
    }
}

<style>
    .fluent-grid .card {
        border: 1px solid var(--colorNeutralStroke1);
        background: var(--colorNeutralBackground2);
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>
