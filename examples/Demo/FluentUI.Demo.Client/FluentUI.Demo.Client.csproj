<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>
    <StaticWebAssetProjectMode>Default</StaticWebAssetProjectMode>
    <LangVersion>latest</LangVersion>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <WarningsNotAsErrors>612,618</WarningsNotAsErrors>
  </PropertyGroup>

  <!-- Code Analysis -->
  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Markdig.Signed" />
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" />
    <PackageReference Include="Microsoft.FluentUI.AspNetCore.Components.Icons" />
    <PackageReference Include="Microsoft.FluentUI.AspNetCore.Components.Emoji" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\src\Core\Microsoft.FluentUI.AspNetCore.Components.csproj" />
    <ProjectReference Include="..\..\Tools\FluentUI.Demo.DocViewer\FluentUI.Demo.DocViewer.csproj" />
    <ProjectReference Include="..\..\Tools\FluentUI.Demo.Generators\FluentUI.Demo.Generators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="**\*.md" />
    <AdditionalFiles Include="$(ProjectDir)/*.xml" />
  </ItemGroup>

  <Target Name="CopySources" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <Sources Include="$(ProjectDir)\Documentation\**\*.razor" />
    </ItemGroup>
    <Copy SourceFiles="@(Sources)" DestinationFiles="@(Sources->'$(ProjectDir)wwwroot\sources\%(Filename)%(Extension).txt')" SkipUnchangedFiles="true" />

    <!-- Add a task to generate files.txt with all filenames -->
    <WriteLinesToFile File="$(ProjectDir)wwwroot\sources\files.txt" Lines="@(Sources->'%(Filename)%(Extension).txt')" Overwrite="true" />
  </Target>

  <!-- TODO 
  <Target Name="CopyMarkdown" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <Sources Include="$(ProjectDir)\Documentation\**\*.md" />
    </ItemGroup>
    <Copy SourceFiles="@(Sources)" DestinationFiles="@(Sources->'$(ProjectDir)wwwroot\documentation\%(Filename)%(Extension).txt')" SkipUnchangedFiles="true" />

    Add a task to generate files.txt with all filenames
    <WriteLinesToFile
      File="$(ProjectDir)wwwroot\documentation\files.txt"
      Lines="@(Sources->'%(Filename)%(Extension).txt')"
      Overwrite="true" />
  </Target>
  -->

  <!-- Embedd other languages under root resx file -->
  <ItemGroup>
    <None Include="**\*.*.resx" />
    <None Update="**\*.*.resx">
      <ParentFile>$([System.String]::Copy('%(FileName)').Split('.')[0])</ParentFile>
      <DependentUpon>%(ParentFile).resx</DependentUpon>
    </None>

    <Compile Update="**\*.Designer.cs">
      <ParentFile>$([System.String]::Copy('%(FileName)').Split('.')[0])</ParentFile>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>%(ParentFile).resx</DependentUpon>
    </Compile>

    <EmbeddedResource Update="**\*.resx">
      <ParentFile>$([System.String]::Copy('%(FileName)').Split('.')[0])</ParentFile>
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>%(ParentFile).Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Samples\Data\Faces.resx">
      <LastGenOutput>Faces.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Samples\Data\LoremIpsum.resx">
      <LastGenOutput>LoremIpsum.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  
</Project>
